{"version":3,"sources":["../node_modules/milagro-crypto-js/src sync /^/.//.*$","components/input/index.js","config.js","utils/common.js","components/header/index.js","components/modal/index.js","utils/request.js","utils/token.js","components/tokenInput/index.js","hooks/usePair.js","utils/swap.js","pages/swap/index.js","pages/pool/index.js","pages/pool/addLiquidity/index.js","pages/pool/removeLiquidity/index.js","pages/staking/index.js","pages/staking/detail/index.js","pages/token/index.js","pages/option/index.js","pages/trade/index.js","utils/eventRequest.js","utils/constants.js","pages/synth/index.js","pages/governance/index.js","utils/errorHandle.js","hooks/useToken.js","App.js","reducers/modal.js","reducers/wallet.js","reducers/common.js","reducers/gov.js","reducers/swap.js","reducers/staking.js","reducers/synth.js","reducers/index.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Input","props","value","cls","disabled","round","decimals","inline","onChange","useState","val","setVal","useEffect","placeholder","handleInput","formattedValue","v","RegExp","test","formatter","target","className","type","onInput","NETWORK_TYPE","GOVERNANCE_ADDRESS","TRANSACTION_BASE_URL","TRANSACTION_AFTERFIX","READY_TABS","toLocaleFixed","num","n","priceNum","parseFloat","Math","toFixed","toString","indexOf","replace","$0","$1","formatAccount","account","substr","Header","selectedTab","setSelectedTab","showProfilePanel","setShowProfilePanel","useMappedState","state","wallet","slippage","showSiteIntro","setShowSiteIntro","dispatch","useDispatch","setSlippage","useCallback","pathname","useLocation","tab","href","window","location","origin","onClick","rel","renderSiteIntro","to","onConnectWallet","Number","amount","onSignOut","InfoModal","onCloseModal","text","detail","extraLink","extraText","Modal","infoModal","modal","setModal","modalType","modalDetail","modals","show","push","assign","buildModals","instance","axios","create","baseURL","timeout","headers","interceptors","response","use","data","error","Promise","reject","reverseHex","utils","readBigNumberUint128","reader","str","read","split","reverse","total","BigNumber","i","length","plus","pow","times","parseInt","isZero","getTokenBalance","token","cb","name","param","scriptHash","address","operation","args","invokeMethod","client","api","smartContract","invokeRead","ty","invokeWasmRead","then","bl","div","Request","method","url","resp","targetToken","result","find","t","asset_name","toLowerCase","balance","catch","console","log","getTokenIconDom","slice","tokenName","TokenInput","tokens","defaultToken","inputDisabled","showBalance","withMax","onTokenChange","onAmountChange","balanceChange","setToken","setBalance","label","dToken","defaultValue","options","isSearchable","components","Option","SingleValue","children","newToken","handleTokenChange","theme","borderRadius","colors","primary","renderTokenSeletion","isNaN","StringReader","useFetchPairs","common","swapTokens","swap","SWAP_ADDRESS","gov","poolStat","pools","setSwapTokens","setPairs","pairs","getSwapStat","a","pairStr","parsedPairs","strReader","pairCount","readNextLen","pair","token1","readUint128","token2","reserve1","reserve2","lp","tokenIds","tokenCount","tk","interval","setInterval","clearInterval","REST","findAllPaths","sourceId","targetId","pathArr","findPath","pathNodes","neighborNodes","p","includes","sort","p1","p2","getInputAmount","output","minus","integerValue","ROUND_CEIL","getOutputAmount","input","ROUND_FLOOR","findNextOutput","findPrevInput","bestSwap","paths","originAmount","maxOutput","minInput","Infinity","path","j","gt","lt","Swap","swapType","setSwapType","setToken1","setToken2","token1Amount","setToken1Amount","token2Amount","setToken2Amount","isValidPair","setIsValidPair","isValidSwap","setIsValidSwap","bestPath","setBestPath","showPrice","setShowPrice","setBalanceChange","Alert","useAlert","history","useHistory","ROUND_DOWN","invokeWasm","gasPrice","gasLimit","requireIdentity","swapResult","transaction","st","validPair","onChangeToken1","inputAmount","onToken1AmountChange","onChangeToken2","outputAmount","onToken2AmountChange","handleSwap","price","abs","getPriceImpact","items","index","getBestPath","Pool","liquidityBalance","setLiquidityBalance","all","myLiquidities","filter","l","lb","pairId","shareOfPool","onRemoveLiquidity","generateLiquidityList","AddLiquidity","isFirstProvider","setIsFirstProvider","showPriceInfo","setShowPriceInfo","getPairByToken","getPairPrice","onNavigateToPool","goBack","ROUND_UP","addResult","amountProduct","getShareOfPool","onAdd","RemoveLiquidity","setPair","setAmount","match","getLiquidityBalanceByPairId","onRemove","Staking","showClosedEntry","setShowClosedEntry","showClosed","setShowClosed","stakingTokens","staking","STAKING_ADDRESS","setStakingTokens","getStakingTokenBalance","statStr","parsedTokens","tempToken","weight","totalWeight","reduce","b","filteredTokens","originWeight","getTip","openStakingTokens","closedStakingTokens","startsWith","placement","overlay","onSelectToken","generateStakingPool","StakingDetail","stakeToken","setStakeToken","tokenBalance","setTokenBalance","tokenWeight","setTokenWeight","myStake","setMyStake","stakeType","setStakeType","claimableWing","setClaimableWing","showStakingModal","setShowStakingModal","tokenId","getAccountStake","stakeStr","interest","stake","handleStakeClick","action","stakeResult","harvestResult","sToken","getClaimableWing","onHarvest","onStake","Token","Trade","SYNTH_PRICE_DECIMALS","ASSET_STATUS","LEVERAGE_TYPE","Synth","mintAsset","setMintAsset","mintAmount","setMintAmount","unxNeededForMint","setUnxNeededForMint","burnAsset","setBurnAsset","burnAmount","setBurnAmount","unxGetForBurn","setUnxGetForBurn","exchangeAsset","setExchangeAsset","exchangeToAsset","setExchangeToAsset","exchangeAmount","setExchangeAmount","exchangeToAssets","setExchangeToAssets","exchangeToAmount","setExchangeToAmount","unxToken","setUnxToken","unxPrice","setUnxPrice","showMintModal","setShowMintModal","showBurnModal","setShowBurnModal","showExchangeModal","setShowExchangeModal","synth","synthPoolWeightRatio","ratio","SYNTH_ADDRESS","stat","marketStat","availableReward","synthType","setStat","setMarketStat","setAvailableReward","setSynthType","marketAssetValue","unxTk","marketAssetBalances","marketTokenBalance","daiTk","getAvailableReward","claimStr","getStat","liveAssetCount","liveAssets","asset","assetId","leverageType","readNextByte","entryPrice","lowLimit","highLimit","status","frozenBy","frozenTime","readUint64","frozenAssetCount","frozenAssets","tokenPriceCount","tokenPrices","tokenPrice","liveAsset","currentPrice","tp","lte","gte","unprocessedFrozen","frozenAsset","getMarketStat","marketAssetBalanceCount","marketAssetValueSum","assetBalance","assetPrice","la","accountAssetBalanceCount","accountAssetBalances","accountAssetValueSum","marketStakeValue","accountStakeValue","accountClaimedValue","accountWithdrawedStakeValue","transferable","parsedMarketStat","accountAssetValue","handleBurnAmountChange","handleExchangeAmountChange","mintResult","EventRequest","Desc","Result","Notify","notify","States","setInfoModal","burnResult","burnAllResult","exchangeResult","claimResult","handleFreezeAsset","freezeResult","calcEffectiveLeverage","getPriceDetail","txt","distributionInfo","period","onBurnAll","onClaim","assetList","accountAsset","ab","showPriceDetail","holdings","effectiveLeverage","fa","isFrozen","toAssets","renderAssetList","handleMintAmountChange","handleUnxNeededForMintChange","onMint","handleUnxGetForBurnChange","onBurn","handleChangeExchangeToAsset","handleChengeExchangeToAmount","onExchange","Governance","width","height","viewBox","role","cx","cy","r","fill","stroke","stroke-width","stroke-dasharray","stroke-dashoffset","style","background","handleError","callback","json","JSON","parse","hexstr2str","App","isUpgrading","loadingToken","setAccount","getAccount","accountAddress","localStorage","setItem","retryTimes","provider","getProvider","network","getNetwork","stopInterval","setIsUpgrading","setLoadingToken","setTokens","setStopInterval","setPoolStat","getGovStat","startTimeStamp","settledTimeStamp","poolCount","pool","nameLength","poolName","upgrade","readBoolean","readUint8","errorCode","useFetchTokens","renderUpgrading","Fragment","exact","initState","getItem","dex","reducers","combineReducers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","Ontology","registerClient","position","positions","TOP_CENTER","ReactDOM","render","template","AlertTemplate","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.2cb8eec3.chunk.js","sourcesContent":["var map = {\n\t\"./aes\": 271,\n\t\"./aes.js\": 271,\n\t\"./big\": 272,\n\t\"./big.js\": 272,\n\t\"./ctx\": 172,\n\t\"./ctx.js\": 172,\n\t\"./ecdh\": 273,\n\t\"./ecdh.js\": 273,\n\t\"./ecp\": 274,\n\t\"./ecp.js\": 274,\n\t\"./ecp2\": 275,\n\t\"./ecp2.js\": 275,\n\t\"./ff\": 276,\n\t\"./ff.js\": 276,\n\t\"./fp\": 277,\n\t\"./fp.js\": 277,\n\t\"./fp12\": 278,\n\t\"./fp12.js\": 278,\n\t\"./fp2\": 279,\n\t\"./fp2.js\": 279,\n\t\"./fp4\": 280,\n\t\"./fp4.js\": 280,\n\t\"./gcm\": 281,\n\t\"./gcm.js\": 281,\n\t\"./hash256\": 282,\n\t\"./hash256.js\": 282,\n\t\"./hash384\": 283,\n\t\"./hash384.js\": 283,\n\t\"./hash512\": 284,\n\t\"./hash512.js\": 284,\n\t\"./mpin\": 285,\n\t\"./mpin.js\": 285,\n\t\"./newhope\": 286,\n\t\"./newhope.js\": 286,\n\t\"./nhs\": 287,\n\t\"./nhs.js\": 287,\n\t\"./pair\": 288,\n\t\"./pair.js\": 288,\n\t\"./rand\": 289,\n\t\"./rand.js\": 289,\n\t\"./rom_curve\": 290,\n\t\"./rom_curve.js\": 290,\n\t\"./rom_field\": 291,\n\t\"./rom_field.js\": 291,\n\t\"./rsa\": 292,\n\t\"./rsa.js\": 292,\n\t\"./sha3\": 293,\n\t\"./sha3.js\": 293,\n\t\"./uint64\": 294,\n\t\"./uint64.js\": 294\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 593;","import React, { useState, useEffect } from 'react';\n\nconst Input = (props) => {\n  const { value = '', cls = '', round, disabled, decimals, inline = true, onChange } = props\n  const [val, setVal] = useState('')\n\n  useEffect(() => {\n    setVal(value)\n  //   if (value === '') {\n  //     setVal('')\n  //   } else if (`${value}`.endsWith('.')) {\n  //     setVal(value)\n  //   } else {\n  //     if (round === 'down') {\n  //       setVal(Math.floor(value * (10 ** decimals)) / (10 ** decimals))\n  //     } else if (round === 'up') {\n  //       setVal(Math.ceil(value * (10 ** decimals)) / (10 ** decimals))\n  //     }\n  //   }\n  }, [value])\n\n  const placeholder = decimals > 0 ? '0.0' : '0'\n  const formatter = (v, decimals = 9) => {\n    if (v === '' || v === '0') {\n      return v\n    } else {\n      const reg = (decimals > 0) ? new RegExp(\n        `^(([0-9]{0,20})|(([0]\\\\.\\\\d{0,${decimals}}|[0-9]{0,20}\\\\.\\\\d{0,${decimals}})))$`\n      ) : new RegExp('^[0-9]{0,20}$')\n      if (reg.test(v)) {\n        return v\n      } else {\n        return val\n      }\n    }\n  };\n  const handleInput = (e) => {\n    const formattedValue = formatter(e.target.value, decimals)\n\n    setVal(formattedValue)\n    typeof onChange === 'function' && onChange(formattedValue)\n  }\n\n  // const handleChange = (e) => {\n  //   typeof onChange === 'function' && onChange(e.target.value)\n  // }\n\n  return (\n    <input\n      className={`input ${inline ? 'inline-input' : ''} ${cls}`}\n      type=\"text\"\n      placeholder={placeholder}\n      value={val}\n      disabled={disabled}\n      onInput={(e) => handleInput(e)}\n      // onChange={(e) => handleChange(e)}\n    />\n  );\n};\n\nexport default Input;\n","export const NETWORK_TYPE = 'TEST'\nexport const GOVERNANCE_ADDRESS = '4bedf72d787de53ab91ead1db1ef709f7472ec24'\nexport const API_BASE_URL = 'https://polarisexplorer.ont.io'\nexport const TRANSACTION_BASE_URL = 'https://explorer.ont.io/transaction/'\nexport const EVENT_API_BASE_URL = 'https://polaris1.ont.io:10334/api/v1/smartcode/event/txhash/'\nexport const TRANSACTION_AFTERFIX = '/testnet'\nexport const READY_TABS = ['/', '/swap', '/trade', '/governance', '/synth', '/option']","export const getQueryString = (search, name) => {\n  const reg = new RegExp(`(^|&)${name}=([^&]*)(&|$)`, 'i')\n  const value = search.substr(1).match(reg)\n\n  if (value != null) {\n    return (value[2])\n  }\n\n  return null\n}\n\nexport const getHashString = (hash, name) => {\n  const reg = new RegExp(`(^|&|[/?]+)${name}=([^&]*)(&|$)`, 'i')\n  const value = hash.substr(1).match(reg)\n\n  if (value != null) {\n    return (value[2])\n  }\n\n  return null\n}\n\nexport function toLocaleFixed(num, n = 9) {\n  const priceNum = parseFloat(n === 0 ? Math.round(num).toFixed(n) : parseFloat(num).toFixed(n)).toString()\n  return priceNum && (priceNum.indexOf('.') !== -1 ? priceNum.replace(/(\\d)(?=(\\d{3})+\\.)/g, ($0, $1) => `${$1},`) : priceNum.replace(/(?=(\\B\\d{3})+$)/g, ','))\n}\n\nexport const formatAccount = (account = '') => {\n  return `${account.substr(0, 4)}...${account.substr(-4)}`\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { Link, useLocation } from 'react-router-dom'\nimport Input from '../input'\nimport { READY_TABS } from '../../config'\nimport { formatAccount } from '../../utils/common'\nimport './index.css'\n\nconst Header = (props) => {\n  const [selectedTab, setSelectedTab] = useState('')\n  const [showProfilePanel, setShowProfilePanel] = useState(false)\n  const { account, slippage } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage\n  }))\n  const [showSiteIntro, setShowSiteIntro] = useState(false)\n  const dispatch = useDispatch()\n  const setSlippage = useCallback((slippage) => dispatch({ type: 'SET_SLIPPAGE', slippage }), [])\n  const pathname = useLocation().pathname\n\n  const toggleShowSiteIntro = (show) => {\n    setShowSiteIntro(show)\n  }\n\n  useEffect(() => {\n    let tab = ''\n    if (pathname === '/' || pathname.indexOf('/staking') >= 0) {\n      tab = '/'\n    } else if (pathname.indexOf('/synth') >= 0) {\n      tab = '/synth'\n    } else if (pathname.indexOf('/swap') >= 0 || pathname.indexOf('/pool') >= 0) {\n      tab = '/swap'\n    } else if (pathname.indexOf('/trade') >= 0) {\n      tab = '/trade'\n    } else if (pathname.indexOf('/governance') >= 0) {\n      tab = '/governance'\n    } else if (pathname.indexOf('/token') >= 0) {\n      tab = '/token'\n    } else if (pathname.indexOf('/option') >= 0) {\n      tab = '/option'\n    }\n    \n    setSelectedTab(tab)\n  }, [pathname])\n\n  const renderSiteIntro = () => {\n    if (showSiteIntro) {\n      const href = `${window.location.origin}${window.location.pathname}#/trade?pair=pDAI%2FUNX`\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper\">\n            <div className=\"close-btn\" onClick={() => toggleShowSiteIntro(false)}></div>\n            <p className=\"intro-line\">uniq-ex is a pure github based DAO dex, all activities are logged on github.</p>\n            <p className=\"intro-line\">You can open issues for discussion <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/uniq-ex/uniq-ex/issues\">here</a></p>\n            <p className=\"intro-line\">uniq-ex's future business will not be limited to exchanges though, we may enter various DeFi markets like compound or hegic.</p>\n            <p className=\"intro-line\">You can buy UNX(the governance token of uniq-ex) <a target=\"_blank\" rel=\"noreferrer\" href={href}>here</a></p>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  const onSignOut = () => {\n    setShowProfilePanel(false)\n    typeof props.onSignOut === 'function' && props.onSignOut()\n  }\n\n  const onConnectWallet = () => {\n    typeof props.onConnectWallet === 'function' && props.onConnectWallet()\n  }\n\n  const toggleProfilePanel = () => {\n    setShowProfilePanel(!showProfilePanel)\n  }\n\n  return (\n    <div className=\"header-wrapper\">\n      {renderSiteIntro()}\n      <div className=\"header\">\n        <div className=\"content-wrapper\">\n          <div className=\"logo-wrapper\">\n            UNIQ-EX\n            {/* <div className=\"site-intro\" onClick={() => toggleShowSiteIntro(true)}></div> */}\n          </div>\n          <div className=\"nav-list\">\n            { READY_TABS.indexOf('/') >= 0 ? <div className={`nav-item ${selectedTab === '/' ? 'selected' : ''}`}><Link to=\"/\">Staking</Link></div> : null }\n            { READY_TABS.indexOf('/synth') >= 0 ? <div className={`nav-item ${selectedTab === '/synth' ? 'selected' : ''}`}><Link to=\"/synth\">Synth</Link></div> : null }\n            { READY_TABS.indexOf('/swap') >= 0 ? <div className={`nav-item ${selectedTab === '/swap' ? 'selected' : ''}`}><Link to=\"/swap\">Swap</Link></div> : null }\n            { READY_TABS.indexOf('/governance') >= 0 ? <div className={`nav-item ${selectedTab === '/governance' ? 'selected' : ''}`}><Link to=\"/governance\">Governance</Link></div> : null }\n            { READY_TABS.indexOf('/trade') >= 0 ? <div className={`nav-item ${selectedTab === '/trade' ? 'selected' : ''}`}><Link to=\"/trade\">Trade</Link></div> : null }\n            { READY_TABS.indexOf('/token') >= 0 ? <div className={`nav-item ${selectedTab === '/token' ? 'selected' : ''}`}><Link to=\"/token\">Token</Link></div> : null }\n            { READY_TABS.indexOf('/option') >= 0 ? <div className={`nav-item ${selectedTab === '/option' ? 'selected' : ''}`}><Link to=\"/option\">Option</Link></div> : null }\n          </div>\n          <div className={`${account ? 'active' : ''} profile-wrapper`}>\n            { !account && <span className=\"connect-btn\" onClick={() => onConnectWallet()}>Connect Wallet</span>}\n            { account && <span className=\"account-address\" onClick={() => toggleProfilePanel()}>{formatAccount(account)}</span> }\n            {\n              showProfilePanel ? (\n                <div className=\"profile-panel\">\n                  <div className=\"setting-wrapper\">\n                    <div className=\"setting-section-title\">SLIPPAGE</div>\n                    <div className=\"slippage-setting\">\n                      <div className={`slippage-item ${Number(slippage) === 0.1 ? 'selected' : ''}`} onClick={() => setSlippage('0.1')}>0.1%</div>\n                      <div className={`slippage-item ${Number(slippage) === 0.5 ? 'selected' : ''}`} onClick={() => setSlippage('0.5')}>0.5%</div>\n                      <div className={`slippage-item ${Number(slippage) === 1 ? 'selected' : ''}`} onClick={() => setSlippage('1.0')}>1.0%</div>\n                      <div className=\"slippage-input-wrapper\">\n                        <Input value={slippage} cls=\"slippage-input\" decimals=\"2\" placeholder={slippage} onChange={(amount) => setSlippage(amount)} />%\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"signout-btn\" onClick={() => onSignOut()}>Sign Out</div>\n                </div>\n              ) : null\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import React, { useCallback } from 'react'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport './index.css'\n\nconst InfoModal = (props) => {\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-wrapper\">\n        <div className=\"close-btn\" onClick={() => props.onCloseModal()}></div>\n        <div className={`modal-icon-${props.type} modal-icon`}></div>\n        <div className={`modal-text-${props.type} modal-text`}>{props.text}</div>\n        { props.detail ? <div className=\"modal-detail\">{props.detail}</div> : null }\n        <div className=\"modal-extra-text\">\n        {\n          props.extraLink ? (\n            <a className=\"transaction-link\" target=\"_blank\" rel=\"noreferrer\" href={props.extraLink}>{props.extraText}</a>\n          ) : props.extraText\n        }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Modal = (props) => {\n  const { infoModal } = useMappedState((state) => ({\n    infoModal: state.modal.infoModal\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const onCloseInfoModal = () => {\n    setModal('infoModal', Object.assign({}, infoModal, { show: false }))\n  }\n\n  const buildModals = () => {\n    const modals = []\n    if (infoModal.show) {\n      modals.push(<InfoModal {...infoModal} onCloseModal={() => onCloseInfoModal()} />)\n    }\n    return modals\n  }\n\n  return (\n    <div className=\"modal-container\">\n      {buildModals()}\n    </div>\n  )\n}\n\nexport default Modal","import axios from 'axios'\nimport { API_BASE_URL } from '../config'\n\nconst instance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: { 'Content-Type': 'application/json' }\n})\n\ninstance.interceptors.response.use(\n  (response) => {\n    const res = response.data;\n    return res\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\nexport default instance","import { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport Request from './request'\n\nconst { reverseHex } = utils\n\nexport const readBigNumberUint128 = (reader) => {\n  const hexRev = reverseHex(reader.read(16))\n  const str = hexRev.split('').reverse()\n  let total = new BigNumber(0)\n  \n  for (let i = 0; i < str.length; i++) {\n    total = total.plus(new BigNumber(16).pow(i).times(parseInt(str[i], 16)))\n  }\n\n  return total.isZero() ? 0 : total.toString()\n}\n\nexport const getTokenBalance = (account, token, cb) => {\n  \n  if (token.name !== 'ONT' && token.name !== 'ONG') {\n    const param = {\n      scriptHash: token.address,\n      operation: 'balanceOf',\n      args: [\n        {\n          type: 'Address',\n          value: account,\n        },\n      ],\n    }\n    let invokeMethod = client.api.smartContract.invokeRead\n\n    if (token.ty === 2 || token.ty === 3) {\n      invokeMethod = client.api.smartContract.invokeWasmRead\n    }\n    invokeMethod(param).then((bl) => {\n      if (bl) {\n        const str = reverseHex(bl).split('').reverse()\n        let total = new BigNumber(0)\n        \n        for (let i = 0; i < str.length; i++) {\n          total = total.plus(new BigNumber(16 ** i).times(parseInt(str[i], 16)))\n        }\n        \n        cb(total.div(10 ** token.decimals).toString())\n      }\n    })\n  } else {\n    Request({\n      method: 'get',\n      url: `/v2/addresses/${account}/native/balances`\n    }).then((resp) => {\n      if (resp.code === 0) {\n        const targetToken = resp.result.find((t) => t.asset_name === token.name.toLowerCase())\n        cb(targetToken.balance)\n      }\n    })\n    .catch((e) => {\n      console.log(e)\n    })\n  }\n}\n\nexport const getTokenIconDom = (token, cls = '') => {\n  if (token.id) {\n    return (\n      <div className={`token-icon-wrapper ${cls}`}>\n        {\n          token.ty === 3\n            ? token.name.split('-').slice(1).map((tokenName) => (<div key={`${token.name}-${tokenName}`} className={`token-icon-item with-drop-shadow icon-${tokenName}`} />))\n            : (<div className={`token-icon-item icon-${token.name}`} />)\n        }\n      </div>\n    )\n  }\n  return null\n}","import React, { useState, useEffect } from 'react'\nimport { useMappedState } from 'redux-react-hook';\nimport Select, { components } from 'react-select'\nimport Input from '../input'\nimport { getTokenBalance } from '../../utils/token'\n\nimport './index.css'\n\nconst TokenInput = (props) => {\n  const { cls, value, round, tokens = [], defaultToken, inputDisabled = false, showBalance = true, withMax = true, onTokenChange, onAmountChange, balanceChange = 0 } = props\n  const [token, setToken] = useState(defaultToken || {})\n  const [balance, setBalance] = useState('-')\n  const { account } = useMappedState((state) => ({\n    account: state.wallet.account\n  }))\n\n  useEffect(() => {\n    if (account && showBalance && token.id) {\n      getTokenBalance(account, token, setBalance)\n    }\n  }, [token, showBalance, account, balanceChange])\n\n  const handleTokenChange = (e) => {\n    if (e.value !== token.id) {\n      const newToken = tokens.find((t) => t.id === e.value)\n\n      setToken(newToken)\n      typeof onTokenChange === 'function' && onTokenChange(newToken)\n    }\n  }\n\n  const renderTokenSeletion = (dToken) => {\n    if (tokens.length) {\n      const CustomOption = (props) => {\n        const label = props.label.split(' ')[0]\n        return (\n          <components.Option {...props}>\n            <div className=\"option-wrapper\">\n              <div className={`icon-${label} option-icon`}></div>\n              <div className=\"option-label\">{props.label}</div>\n            </div>\n          </components.Option>\n        )\n      }\n      const SingleValue = ({ children, ...props }) => {\n        const label = children.split(' ')[0]\n        return (\n          <components.SingleValue {...props}>\n            <div className=\"option-wrapper\">\n              <div className={`icon-${label} option-icon`}></div>\n              <div className=\"option-label\">{children}</div>\n            </div>\n          </components.SingleValue>\n        )\n      }\n      let defaultToken = dToken ? dToken : tokens[0]\n\n      if (!token.id || !tokens.find((t) => t.id === token.id)) {\n        setToken(defaultToken)\n      }\n\n      return (\n        <Select\n          className={`token-select ${cls}`}\n          defaultValue={defaultToken}\n          options={tokens}\n          isSearchable={false}\n          components={{ Option: CustomOption, SingleValue }}\n          onChange={(e) => handleTokenChange(e)}\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            colors: {\n              ...theme.colors,\n              primary: '#2c2c2c',\n            },\n          })}\n        />\n      )\n    }\n  }\n\n  const maxInput = () => {\n    if (!isNaN(balance) && typeof onAmountChange === 'function') {\n      onAmountChange(balance)\n    }\n  }\n\n  return (\n    <div className=\"token-input-wrapper\">\n      <div className=\"input-label\">{props.label || 'Input'}\n        { showBalance ? <span className=\"hint\">Balance: {balance}</span> : null }\n      </div>\n      <div className=\"input-wrapper\">\n        { renderTokenSeletion(defaultToken) }\n        <Input decimals={token.decimals} disabled={inputDisabled} value={value} round={round} onChange={(value) => onAmountChange(value)} />\n        { withMax && <div className=\"input-max-btn\" onClick={() => maxInput()}>MAX</div> }\n      </div>\n    </div>\n  )\n}\n\nexport default TokenInput\n","import { useEffect, useCallback } from 'react'\nimport { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { readBigNumberUint128 } from '../utils/token'\n\nconst { StringReader, reverseHex } = utils\n\nexport const useFetchPairs = () => {\n  const { account, tokens, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setSwapTokens = useCallback((tokens) => dispatch({ type: 'SET_SWAP_TOKENS', tokens }), [])\n  const setPairs = useCallback((pairs) => dispatch({ type: 'SET_PAIRS', pairs }), [])\n\n  useEffect(() => {\n    getSwapStat()\n    let interval = setInterval(getSwapStat, 3000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, tokens, swapTokens, SWAP_ADDRESS])\n\n  async function getSwapStat() {\n    if (SWAP_ADDRESS) {\n      try {\n        const pairStr = await client.api.smartContract.invokeWasmRead({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'stat',\n          args: []\n        })\n\n        const parsedPairs = []\n        const strReader = new StringReader(pairStr)\n        const pairCount = strReader.readNextLen()\n        for (let i = 0; i < pairCount; i++) {\n          const pair = {}\n          pair.address = reverseHex(strReader.read(20))\n          pair.token1 = strReader.readUint128()\n          pair.token2 = strReader.readUint128()\n          pair.id = strReader.readUint128()\n          pair.reserve1 = readBigNumberUint128(strReader)\n          pair.reserve2 = readBigNumberUint128(strReader)\n          pair.lp = readBigNumberUint128(strReader)\n\n          parsedPairs.push(pair)\n        }\n\n        const tokenIds = []\n        const tokenCount = strReader.readNextLen()\n        for (let i = 0; i < tokenCount; i++) {\n          tokenIds.push(strReader.readUint128())\n        }\n\n        setPairs(parsedPairs)\n        if (tokens.length && !swapTokens.length) {\n          setSwapTokens(tokenIds.map((t) => tokens.find((tk) => tk.id === t)))\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  return null\n}","import BigNumber from 'bignumber.js'\n\nconst REST = 0.997\n\nexport const findAllPaths = (pairs, sourceId, targetId) => {\n  let pathArr = []\n  const findPath = (sourceId, targetId, pathNodes = []) => {\n    pathNodes = [...pathNodes]\n    pathNodes.push(sourceId)\n\n    if (sourceId === targetId) {\n      pathArr.push(pathNodes)\n      return\n    }\n\n    let neighborNodes = []\n    pairs.map((p) => {\n      if (p.token1 === sourceId) {\n        neighborNodes.push(p.token2)\n      } else if (p.token2 === sourceId) {\n        neighborNodes.push(p.token1)\n      }\n    })\n\n    for (let id of neighborNodes) {\n      if (!pathNodes.includes(id)) {\n        findPath(id, targetId, pathNodes)\n      }\n    }\n  }\n\n  findPath(sourceId, targetId)\n\n  pathArr.sort((p1, p2) => {\n    return p1.length - p2.length\n  })\n  \n  return pathArr\n}\n\nconst getInputAmount = (output, pair, reverse = false) => {\n  let amount\n  if (reverse) {\n    amount = new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(pair.reserve1).minus(output)).minus(pair.reserve2).div(REST).integerValue(BigNumber.ROUND_CEIL).toString()\n  } else {\n    amount = new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(pair.reserve2).minus(output)).minus(pair.reserve1).div(REST).integerValue(BigNumber.ROUND_CEIL).toString()\n  }\n  return amount\n}\n\nconst getOutputAmount = (input, pair, reverse = false) => {\n  let amount\n  if (reverse) {\n    amount = new BigNumber(pair.reserve1).minus(new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(input).times(REST).plus(pair.reserve2))).integerValue(BigNumber.ROUND_FLOOR).toString()\n  } else {\n    amount = new BigNumber(pair.reserve2).minus(new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(input).times(REST).plus(pair.reserve1))).integerValue(BigNumber.ROUND_FLOOR).toString()\n  }\n  return amount\n}\n\nconst findNextOutput = (input, pairs, token1, token2) => {\n  let pair = pairs.find((p) => p.token1 === token1 && p.token2 === token2)\n\n  if (pair) {\n    return getOutputAmount(input, pair)\n  }\n\n  pair = pairs.find((p) => p.token1 === token2 && p.token2 === token1)\n\n  if (pair) {\n    return getOutputAmount(input, pair, true)\n  }\n}\n\nconst findPrevInput = (output, pairs, token1, token2) => {\n  let pair = pairs.find((p) => p.token1 === token1 && p.token2 === token2)\n\n  if (pair) {\n    return getInputAmount(output, pair)\n  }\n\n  pair = pairs.find((p) => p.token1 === token2 && p.token2 === token1)\n\n  if (pair) {\n    return getInputAmount(output, pair, true)\n  }\n}\n\nexport const bestSwap = (type = 'exactin', amount, pairs, token1, token2) => {\n  const paths = findAllPaths(pairs, token1, token2)\n  const originAmount = amount\n  let maxOutput = 0\n  let minInput = Infinity\n  let path = []\n  \n  for (let i = 0; i < paths.length; i++) {\n    amount = originAmount\n    if (type === 'exactin') {\n      for (let j = 0; j < paths[i].length - 1; j++) {\n        amount = findNextOutput(amount, pairs, paths[i][j], paths[i][j + 1])\n      }\n  \n      if (new BigNumber(amount).gt(new BigNumber(maxOutput))) {\n        maxOutput = amount\n        path = paths[i]\n      }\n    } else {\n      for (let j = paths[i].length - 1; j > 0; j--) {\n        amount = findPrevInput(amount, pairs, paths[i][j - 1], paths[i][j])\n      }\n  \n      if (new BigNumber(amount).lt(new BigNumber(minInput)) && amount > 0) {\n        minInput = amount\n        path = paths[i]\n      }\n    }\n  }\n\n  if (type === 'exactin') {\n    return [maxOutput, path]\n  } else if (type === 'exactout') {\n    return [minInput, path]\n  }\n}\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport TokenInput from '../../components/tokenInput'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport { toLocaleFixed } from '../../utils/common'\nimport { bestSwap } from '../../utils/swap'\nimport './index.css'\n\nconst Swap = () => {\n  const [swapType, setSwapType] = useState('exactin')\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState('')\n  const [token2Amount, setToken2Amount] = useState('')\n  const [isValidPair, setIsValidPair] = useState(false)\n  const [isValidSwap, setIsValidSwap] = useState(false)\n  const [bestPath, setBestPath] = useState([])\n  const [showPrice, setShowPrice] = useState(false)\n  const [balanceChange, setBalanceChange] = useState(0)\n  const { account, slippage, pairs, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    pairs: state.swap.pairs,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (token1.id !== token2.id && token1Amount > 0 && token2Amount > 0 && bestPath.length) {\n      setShowPrice(true)\n      setIsValidSwap(true)\n    } else {\n      setShowPrice(false)\n      setIsValidSwap(false)\n    }\n  }, [token1, token2, token1Amount, token2Amount, bestPath])\n\n  useEffect(() => {\n    if (swapTokens.length) {\n      setToken1(swapTokens.find((st) => st.name === 'pDAI'))\n      setToken2(swapTokens.find((st) => st.name === 'UNX'))\n    }\n  }, [swapTokens])\n\n  useEffect(() => {\n    if (token1.id && token2.id && validPair(token1.id, token2.id)) {\n      setIsValidPair(true)\n    } else {\n      setIsValidPair(false)\n    }\n  }, [token1, token2])\n\n  function validPair(token1, token2) {\n    if (pairs.length) {\n      if (token1 && token2 && pairs.find((p) => (p.token1 === token1 && p.token2 === token2) || (p.token1 === token2 && p.token2 === token1))) {\n        return true\n      }\n    }\n    return false\n  }\n\n  function onChangeToken1(token) {\n    if (token.id !== token1.id) {\n      setToken1(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onChangeToken2(token) {\n    if (token.id !== token2.id) {\n      setToken2(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onToken1AmountChange(amount) {\n    if (amount !== token1Amount) {\n      setSwapType('exactin')\n      setToken1Amount(amount)\n      if (pairs.length && amount) {\n        const inputAmount = new BigNumber(amount).times(10 ** token1.decimals).toString()\n        const [maxOutput, path] = bestSwap('exactin', inputAmount, pairs, token1.id, token2.id)\n\n        setToken2Amount(new BigNumber(maxOutput).div(10 ** token2.decimals).toString())\n        setBestPath(path)\n      } else if (Number(amount) === 0) {\n        setToken2Amount('')\n      }\n    }\n  }\n\n  function onToken2AmountChange(amount) {\n    if (amount !== token2Amount) {\n      setSwapType('exactout')\n      setToken2Amount(amount)\n      if (pairs.length && amount) {\n        const outputAmount = amount * (10 ** token2.decimals)\n        const [minInput, path] = bestSwap('exactout', outputAmount, pairs, token1.id, token2.id)\n\n        if (minInput === Infinity) {\n          setToken1Amount('')\n        } else {\n          setToken1Amount(new BigNumber(minInput).div(10 ** token1.decimals).toString())\n        }\n        setBestPath(path)\n      } else if (Number(amount) === 0) {\n        setToken1Amount('')\n      }\n    }\n  }\n\n  function onNavigateToPool() {\n    history.push('/pool')\n  }\n\n  async function handleSwap() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (token1Amount <= 0 || token2Amount <= 0) {\n      Alert.error('Amount should be greater than 0')\n      return\n    }\n    if (token1.id && token1.id === token2.id) {\n      Alert.error('Input should be different')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Array',\n            value: bestPath.map((p) => ({ type: 'Long', value: p }))\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const swapResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: swapType === 'exactin' ? 'swap_exact_tokens_for_tokens' : 'swap_tokens_for_exact_tokens',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (swapResult.transaction) {\n          setBalanceChange(balanceChange + 1)\n          setToken1Amount('')\n          setToken2Amount('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${swapResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function getPrice() {\n    return `${toLocaleFixed(token2Amount / token1Amount, 6)} ${token2.name} per ${token1.name}`\n  }\n\n  function getMinReceiveOrMaxSold() {\n    if (swapType === 'exactin') {\n      return <p>Minimum Received:<span>{toLocaleFixed(token2Amount * (1 - slippage / 100), 6)} {token2.name}</span></p>\n    } else {\n      return <p>Maximum Sold:<span>{toLocaleFixed(token1Amount * (1 + slippage / 100), 6)} {token1.name}</span></p>\n    }\n  }\n\n  function getPriceImpact() {\n    let price\n    let pair = pairs.find((p) => p.token1 === token1.id && p.token2 === token2.id)\n\n    if (pair) {\n      price = new BigNumber(pair.reserve2).div(10 ** token2.decimals).div(pair.reserve1).times(10 ** token1.decimals).toString()\n    } else {\n      pair = pairs.find((p) => p.token1 === token2.id && p.token2 === token1.id)\n\n      if (pair) {\n        price = new BigNumber(pair.reserve1).div(10 ** token1.decimals).div(pair.reserve2).times(10 ** token2.decimals).toString()\n      }\n    }\n\n    return <p>Price Impact:<span>{Math.abs((token2Amount / token1Amount - price) / price * 100).toFixed(2)}%</span></p>\n  }\n\n  function getBestPath() {\n    if (bestPath.length) {\n      const items = []\n      bestPath.map((t, index) => {\n        const token = swapTokens.find((tk) => tk.id === t)\n        index > 0 && items.push((<div className=\"icon-arrow-right\"></div>))\n        items.push((<div className={`path-icon icon-${token.name}`}>{token.name}</div>))\n\n        return t\n      })\n\n      return items\n    }\n  }\n\n  return (\n    <div className=\"sw-wrapper\">\n      <div className=\"sw-container\">\n        <div className=\"sw-tabs\">\n          <div className=\"sw-tab active\">Swap</div>\n          <div className=\"sw-tab\" onClick={() => onNavigateToPool()}>Pool</div>\n        </div>\n        <div className=\"sw-content\">\n          <TokenInput\n            balanceChange={balanceChange}\n            label=\"From\"\n            tokens={swapTokens}\n            value={token1Amount}\n            round='up'\n            defaultToken={swapTokens.length && swapTokens.find((st) => st.name === 'pDAI')}\n            onTokenChange={(token) => onChangeToken1(token)}\n            onAmountChange={(amount) => onToken1AmountChange(amount)} />\n          <div className=\"icon-arrow-down\"></div>\n          <TokenInput\n            balanceChange={balanceChange}\n            label=\"To\"\n            tokens={swapTokens}\n            value={token2Amount}\n            round='down'\n            defaultToken={swapTokens.length && swapTokens.find((st) => st.name === 'UNX')}\n            onTokenChange={(token) => onChangeToken2(token)}\n            onAmountChange={(amount) => onToken2AmountChange(amount)} />\n          { showPrice ? <div className=\"sw-price-wrapper\">Price<span className=\"sw-price-info\">{getPrice()}</span></div> : null }\n          { isValidPair ? null : <div className=\"add-liquidity-hint\">Add liquidity to enable swaps for this pair.</div> }\n          { isValidPair ? ( isValidSwap ? <div className=\"sw-swap-btn\" onClick={() => handleSwap()}>Swap</div> : <div className=\"sw-swap-btn disabled\">Swap</div> ) : <div className=\"sw-swap-btn disabled\">Invalid Liquidity</div> }\n        </div>\n        {\n          isValidPair && isValidSwap ? (\n            <div className=\"sw-hint-wrapper\">\n              <div className=\"sw-input-output\">{getMinReceiveOrMaxSold()}</div>\n              <div className=\"sw-price-impact\">{getPriceImpact()}</div>\n              <div className=\"sw-best-path\">\n                <p>Route:</p>\n                <div className=\"sw-best-path-list\">\n                  {getBestPath()}\n                </div>\n              </div>\n            </div>\n          ) : null\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Swap\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState } from 'redux-react-hook';\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { readBigNumberUint128 } from '../../utils/token'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Pool = () => {\n  const [liquidityBalance, setLiquidityBalance] = useState([])\n  const { account, tokens, pairs, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (account && pairs.length && SWAP_ADDRESS) {\n      const getLiquidityBalanceByPairId = (id) => {\n        return client.api.smartContract.invokeWasmRead({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'balanceOf',\n          args: [\n            {\n              type: 'Long',\n              value: id\n            },\n            {\n              type: 'Address',\n              value: account\n            }\n          ]\n        }).then((resp) => {\n          const strReader = new StringReader(resp)\n          const balance = readBigNumberUint128(strReader)\n          \n          return { [id]: balance }\n        })\n      }\n      Promise.all(pairs.map((p) => getLiquidityBalanceByPairId(p.id))).then((resp) => {\n        setLiquidityBalance(resp)\n      })\n    }\n  }, [account, pairs, SWAP_ADDRESS])\n\n  function onNavigateToSwap() {\n    history.push('/swap')\n  }\n\n  function onNavigateToAddLiquidity() {\n    history.push('/pool/add')\n  }\n\n  function onRemoveLiquidity(pairId) {\n    history.push(`/pool/remove/${pairId}`)\n  }\n\n  function generateLiquidityList() {\n    const myLiquidities = liquidityBalance.filter((l) => l[Object.keys(l)[0]])\n    if (myLiquidities.length && pairs.length && tokens.length) {\n      return myLiquidities.map((lb) => {\n        const pairId = Object.keys(lb)[0]\n        const pair = pairs.find((p) => `${p.id}` === pairId)\n        const token1 = tokens.find((t) => t.id === pair.token1)\n        const token2 = tokens.find((t) => t.id === pair.token2)\n        const balance = new BigNumber(lb[pairId])\n        const shareOfPool = balance.div(pair.lp)\n        const token1Amount = shareOfPool.times(pair.reserve1).div(10 ** token1.decimals).toFixed(token1.decimals)\n        const token2Amount = shareOfPool.times(pair.reserve2).div(10 ** token2.decimals).toFixed(token2.decimals)\n        \n        return (\n          <div className=\"pool-liquidity-item\">\n            <div className=\"liquidity-item-detail\">\n              <div className={`token-icon icon-${token1.name}`}></div>\n              <div className={`token-icon icon-${token2.name}`}></div>\n              <div className=\"token-pair\"><strong>{token1.name}/{token2.name}</strong></div>\n              <div className=\"pair-position\"><strong>Pooled</strong>: {token1Amount} / {token2Amount}</div>\n              <div className=\"pool-tokens\"><strong>Pool Tokens</strong>: {balance.div(10 ** 18).toString()}</div>\n            </div>\n            <div className=\"remove-liquidity-btn\" onClick={() => onRemoveLiquidity(pairId)}>Remove</div>\n          </div>\n        )\n      })\n    } else {\n      return <div className=\"pool-empty-lp\">No Liquidities</div>\n    }\n  }\n\n  return (\n    <div className=\"pool-wrapper\">\n      <div className=\"pool-container\">\n        <div className=\"sw-tabs\">\n          <div className=\"sw-tab\" onClick={() => onNavigateToSwap()}>Swap</div>\n          <div className=\"sw-tab active\">Pool</div>\n        </div>\n        <div className=\"pool-content\">\n          <div className=\"pool-add-liquidity-btn\" onClick={() => onNavigateToAddLiquidity()}>Add Liquidity</div>\n          <div className=\"pool-liquidity-list\">\n            <div className=\"my-liquidity\">Your Liquidity</div>\n            {generateLiquidityList()}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Pool","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport TokenInput from '../../../components/tokenInput'\nimport { useFetchPairs } from '../../../hooks/usePair';\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\nimport './index.css'\n\nconst AddLiquidity = () => {\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState('')\n  const [token2Amount, setToken2Amount] = useState('')\n  const [isValidPair, setIsValidPair] = useState(true)\n  const [isFirstProvider, setIsFirstProvider] = useState(false)\n  const [showPriceInfo, setShowPriceInfo] = useState(false)\n  const [balanceChange, setBalanceChange] = useState(0)\n  const { account, slippage, pairs, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    pairs: state.swap.pairs,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (!token1.id || !token2.id || (token1.id === token2.id)) {\n      setIsValidPair(false)\n    } else {\n      setIsValidPair(true)\n    }\n  }, [token1, token2])\n\n  useEffect(() => {\n    const pair = getPairByToken()\n    if (token1.id && token2.id && token1.id != token2.id && (!pairs.length || !pair || (pair.reserve1 === 0 && pair.reserve2 === 0))) {\n      setIsFirstProvider(true)\n    } else {\n      setIsFirstProvider(false)\n    }\n  }, [pairs, token1, token2])\n\n  useEffect(() => {\n    if (token1.id && token2.id) {\n      setShowPriceInfo(true)\n    } else {\n      setShowPriceInfo(false)\n    }\n  }, [pairs, token1, token2, token1Amount, token2Amount])\n\n  useEffect(() => {\n    if (swapTokens.length) {\n      setToken1(swapTokens.find((st) => st.name === 'pDAI'))\n      setToken2(swapTokens.find((st) => st.name === 'UNX'))\n    }\n  }, [account, swapTokens])\n\n  function getPairByToken() {\n    return pairs.find((p) => (p.token1 === token1.id && p.token2 === token2.id) || (p.token1 === token2.id && p.token2 === token1.id))\n  }\n\n  function onChangeToken1(token) {\n    if (token.id !== token1.id) {\n      setToken1(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onChangeToken2(token) {\n    if (token.id !== token2.id) {\n      setToken2(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onToken1AmountChange(amount) {\n    setToken1Amount(amount)\n    if (!isFirstProvider) {\n      if (amount) {\n        setToken2Amount(new BigNumber(amount).times(getPairPrice()).times(10 ** token2.decimals).integerValue(BigNumber.ROUND_CEIL).div(10 ** token2.decimals).toString())\n      } else if (Number(amount) === 0) {\n        setToken2Amount('')\n      }\n    }\n  }\n\n  function onToken2AmountChange(amount) {\n    setToken2Amount(amount)\n    if (!isFirstProvider) {\n      if (amount) {\n        setToken1Amount(new BigNumber(amount).div(getPairPrice()).times(10 ** token1.decimals).integerValue(BigNumber.ROUND_CEIL).div(10 ** token1.decimals).toString())\n      } else if (Number(amount) === 0) {\n        setToken1Amount('')\n      }\n    }\n  }\n\n  function getPairPrice() {\n    if (token1.id && token2.id && pairs.length) {\n      if (isFirstProvider && token1Amount && token2Amount) {\n        return token2Amount / token1Amount\n      }\n      let pair = pairs.find((p) => p.token1 === token1.id && p.token2 === token2.id)\n      if (pair) {\n        return pair.reserve1 ? new BigNumber(pair.reserve2).div(10 ** token2.decimals).div(pair.reserve1).times(10 ** token1.decimals) : 0\n      }\n      pair = pairs.find((p) => p.token1 === token2.id && p.token2 === token1.id)\n      if (pair) {\n        return pair.reserve2 ? new BigNumber(pair.reserve1).div(10 ** token1.decimals).div(pair.reserve2).times(10 ** token2.decimals) : 0\n      }\n    }\n\n    return 0\n  }\n\n  function getShareOfPool() {\n    if (isFirstProvider) {\n      return '100%'\n    } else {\n      const pair = getPairByToken()\n      const amountProduct = new BigNumber(token1Amount || 0).times(10 ** token1.decimals).times(token2Amount || 0).times(10 ** token2.decimals)\n\n      if (pair) {\n        return `${amountProduct.times(100).div(new BigNumber(pair.reserve1).times(pair.reserve2).plus(amountProduct)).toFixed(2)}%`\n      }\n      return `0%`\n    }\n  }\n\n  function onNavigateToPool() {\n    history.goBack()\n  }\n\n  async function onAdd() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (token1Amount <= 0 || token2Amount <= 0) {\n      Alert.error('Amount should be greater than 0')\n      return\n    }\n    if (token1.id && token1.id === token2.id) {\n      Alert.error('Input should be different')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: token1.id\n          },\n          {\n            type: 'Long',\n            value: token2.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const addResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'add_liquidity',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (addResult.transaction) {\n          setBalanceChange(balanceChange + 1)\n          setToken1Amount('')\n          setToken2Amount('')\n          onNavigateToPool()\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${addResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"add-liquidity-wrapper\">\n      <div className=\"al-header\">Add Liquidity\n        <div className=\"back-icon\" onClick={() => onNavigateToPool()}></div>\n      </div>\n      <div className=\"al-wrapper\">\n        {\n          isValidPair && isFirstProvider ? (\n            <div className=\"first-provider-hint\">\n              <div><strong>You are the first liquidity provider.</strong><br /><br />The ratio of tokens you add will set the price of this pool.</div>\n            </div>\n          ) : null\n        }\n        <TokenInput\n          balanceChange={balanceChange}\n          tokens={swapTokens}\n          value={token1Amount}\n          defaultToken={swapTokens.length && swapTokens.find((st) => st.name === 'pDAI')}\n          onTokenChange={(token) => onChangeToken1(token)}\n          onAmountChange={(amount) => onToken1AmountChange(amount)} />\n        <div className=\"icon-plus\"></div>\n        <TokenInput\n          balanceChange={balanceChange}\n          tokens={swapTokens}\n          value={token2Amount}\n          defaultToken={swapTokens.length && swapTokens.find((st) => st.name === 'UNX')}\n          onTokenChange={(token) => onChangeToken2(token)}\n          onAmountChange={(amount) => onToken2AmountChange(amount)} />\n        {\n          isValidPair && showPriceInfo ? (\n            <div className=\"al-price-wrapper\">\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{getPairPrice().toFixed(4)}</div>\n                <div className=\"price-item-label\">{token2.name} per {token1.name}</div>\n              </div>\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{(getPairPrice() ? 1 / getPairPrice() : 0).toFixed(4)}</div>\n                <div className=\"price-item-label\">{token1.name} per {token2.name}</div>\n              </div>\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{getShareOfPool()}</div>\n                <div className=\"price-item-label\">Share of Pool</div>\n              </div>\n            </div>\n          ) : null\n        }\n        <div className=\"al-add-btn\" onClick={() => onAdd()}>Add</div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddLiquidity\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { utils } from 'ontology-ts-sdk'\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport Slider from 'rc-slider'\nimport { readBigNumberUint128 } from '../../../utils/token'\nimport { useFetchPairs } from '../../../hooks/usePair';\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\nimport 'rc-slider/assets/index.css'\nimport './index.css'\n\nconst { StringReader, reverseHex } = utils\n\nconst RemoveLiquidity = () => {\n  const [liquidityBalance, setLiquidityBalance] = useState(0)\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState(0)\n  const [token2Amount, setToken2Amount] = useState(0)\n  const [pair, setPair] = useState({})\n  const [amount, setAmount] = useState(0)\n  const [showPrice, setShowPrice] = useState(false)\n  const { account, slippage, tokens, pairs, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n  const location = useLocation()\n  const pairId = location.pathname.match(/\\/([^/]+)$/)[1]\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (account && pairs.length && pairId) {\n      getLiquidityBalanceByPairId(pairId).then((resp) => {\n        setLiquidityBalance(resp)\n      })\n    }\n  }, [account, pairs, SWAP_ADDRESS])\n\n  useEffect(() => {\n    if (tokens.length && pairs.length && pairId) {\n      const pair = pairs.find((p) => `${p.id}` === pairId)\n      setPair(pair)\n      setToken1(tokens.find((t) => t.id === pair.token1))\n      setToken2(tokens.find((t) => t.id === pair.token2))\n      setShowPrice(true)\n    }\n  }, [pairs, tokens])\n\n  useEffect(() => {\n    if (pair && token1.id && token2.id && pairId && liquidityBalance) {\n      const shareOfPool = new BigNumber(liquidityBalance).div(pair.lp)\n      const token1Amount = shareOfPool.times(pair.reserve1).div(10 ** token1.decimals)\n      const token2Amount = shareOfPool.times(pair.reserve2).div(10 ** token2.decimals)\n\n      setToken1Amount(new BigNumber(amount).div(100).times(token1Amount).toFixed(token1.decimals))\n      setToken2Amount(new BigNumber(amount).div(100).times(token2Amount).toFixed(token2.decimals))\n    }\n  }, [amount, pair, token1, token2])\n\n  function getLiquidityBalanceByPairId(id) {\n    if (SWAP_ADDRESS) {\n      return client.api.smartContract.invokeWasmRead({\n        scriptHash: SWAP_ADDRESS,\n        operation: 'balanceOf',\n        args: [\n          {\n            type: 'Long',\n            value: id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n      }).then((resp) => {\n        const strReader = new StringReader(resp)\n        const balance = readBigNumberUint128(strReader)\n        \n        return balance\n      })\n    }\n  }\n\n  function getPairPrice() {\n    return new BigNumber(pair.reserve2).div(10 ** token2.decimals).div(pair.reserve1).times(10 ** token1.decimals).toString()\n  }\n\n  function onNavigateToPool() {\n    history.goBack()\n  }\n\n  async function onRemove() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: token1.id\n          },\n          {\n            type: 'Long',\n            value: token2.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(liquidityBalance).times(amount / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(10 ** token1.decimals).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(10 ** token2.decimals).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n\n        const addResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'remove_liquidity',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (addResult.transaction) {\n          onNavigateToPool()\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${addResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"remove-liquidity-wrapper\">\n      <div className=\"rl-header\">Remove Liquidity\n        <div className=\"back-icon\" onClick={() => onNavigateToPool()}></div>\n      </div>\n      <div className=\"rl-wrapper\">\n        <div className=\"rl-amount\">\n          <div className=\"rl-amount-label\">Amount<span>{amount}%</span></div>\n          <Slider value={amount} onChange={(e) => setAmount(e)} />\n          <div className=\"quick-items\">\n            <div className=\"quick-item\" onClick={() => setAmount(25)}>25%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(50)}>50%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(75)}>75%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(100)}>Max</div>\n          </div>\n        </div>\n        <div className=\"icon-arrow-down\" />\n        <div className=\"rl-receive-wrapper\">\n          <div className={`receive-token-item icon-${token1.name}`}>\n            {token1.name}\n            <span>{token1Amount}</span>\n          </div>\n          <div className={`receive-token-item icon-${token2.name}`}>\n            {token2.name}\n            <span>{token2Amount}</span>\n          </div>\n        </div>\n        {\n          showPrice ? (\n            <div className=\"rl-price-wrapper\">\n              <div className=\"price-wrapper-lable\">Price</div>\n              <div className=\"price\">1 {token1.name} = {getPairPrice()} {token2.name}</div>\n              <div className=\"price-reverse\">1 {token2.name} = {new BigNumber(1).div(getPairPrice()).toString()} {token1.name}</div>\n            </div>\n          ) : null\n        }\n        { amount ? <div className=\"rl-remove-btn\" onClick={() => onRemove()}>Remove</div> : <div className=\"rl-remove-btn disabled\">Remove</div> }\n      </div>\n    </div>\n  )\n}\n\nexport default RemoveLiquidity","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport Tooltip from 'rc-tooltip'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { readBigNumberUint128, getTokenIconDom } from '../../utils/token'\n\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Staking = () => {\n  const [showClosedEntry, setShowClosedEntry] = useState(false)\n  const [showClosed, setShowClosed] = useState(false)\n  const { account, tokens, stakingTokens, STAKING_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    stakingTokens: state.staking.tokens,\n    STAKING_ADDRESS: state.gov.poolStat.pools.staking.address\n  }))\n  const dispatch = useDispatch()\n  const setStakingTokens = useCallback((tokens) => dispatch({ type: 'SET_STAKING_TOKENS', tokens }), [])\n  const history = useHistory()\n  const Alert = useAlert()\n\n  useEffect(() => {\n    getStakingTokenBalance()\n    let interval = setInterval(() => getStakingTokenBalance, 3000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokens, STAKING_ADDRESS])\n\n  useEffect(() => {\n    if (stakingTokens.filter((st) => !st.originWeight).length) {\n      setShowClosedEntry(true)\n    } else {\n      setShowClosedEntry(false)\n    }\n  }, [stakingTokens])\n\n  async function getStakingTokenBalance() {\n    if (tokens.length && STAKING_ADDRESS) {\n      try {\n        const statStr = await client.api.smartContract.invokeWasmRead({\n          scriptHash: STAKING_ADDRESS,\n          operation: 'stat',\n          args: []\n        })\n        const parsedTokens = []\n        const strReader = new StringReader(statStr)\n        const tokenCount = strReader.readNextLen()\n        for (let i = 0; i < tokenCount; i++) {\n          const token = {}\n          token.id = strReader.readUint128()\n          const tempToken = tokens.find((t) => t.id === token.id)\n          token.weight = strReader.readUint128()\n          token.balance = readBigNumberUint128(strReader)\n\n          parsedTokens.push(Object.assign(tempToken, token))\n        }\n\n        const totalWeight = parsedTokens.filter((t) => t.balance).reduce((a, b) => a + b.weight, 0)\n        const filteredTokens = parsedTokens.map((t) => {\n          return {\n            ...t,\n            originWeight: t.weight,\n            weight: t.balance ? (t.weight / totalWeight) : 0\n          }\n        })\n\n        setStakingTokens(filteredTokens)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  function onSelectToken(token) {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    history.push(`/staking/${token.id}`)\n  }\n\n  function getTip(token) {\n    return `${token.name} is the hidden receipt for WING ${token.name.replace('f', '')} suppliers`\n  }\n\n  function generateStakingPool() {\n    if (stakingTokens.length) {\n      const openStakingTokens = stakingTokens.filter((t) => !!t.originWeight)\n      const closedStakingTokens = stakingTokens.filter((t) => !t.originWeight)\n\n      return (showClosed ? closedStakingTokens : openStakingTokens).map((token) => {\n        return (\n          <div className={`pool-list-item ${!showClosed ? '' : 'pool-list-item-disabled'}`} key={token.name}>\n            <div className=\"item-detail\">\n              <div className=\"item-detail-wrapper\">\n                { token.ty === 3 && <div className=\"corner-badge\">10X</div> }\n                <div className=\"staking-token\">\n                  {\n                    token.ty === 3 ? (\n                      <div className=\"staking-text\">Deposit\n                        {getTokenIconDom(token, 'stake-lp-token')}\n                      </div>\n                    ) : (\n                      <div className={`staking-text icon-${token.name}`}>Deposit</div>\n                    )\n                  }\n                  {\n                    token.name.startsWith('f') ? (\n                      <Tooltip placement=\"top\" overlay={getTip(token)}>\n                        <div className=\"staking-token-name\">{token.name}</div>\n                      </Tooltip>\n                    ) : <div className=\"staking-token-name\">{token.name}</div>\n                  }\n                </div>\n                <div className=\"earn-line\">Earn<span>UNX</span></div>\n                <div className=\"total-staking\">Total Staking<span>{new BigNumber(token.balance || 0).div(10 ** token.decimals).toString()}</span></div>\n                <div className=\"select-btn\" onClick={() => onSelectToken(token)}>{ showClosed ? 'Unstake' : 'Stake' }</div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    }\n  }\n\n  return (\n    <div className=\"stake-container\">\n      <div className=\"stake-pool\">\n        { !stakingTokens.length ? <div className=\"title\">Loading...</div> : null }\n        {\n          showClosed ? (\n            <div className=\"unstake-pool-title\">\n              <div className=\"back-icon\" onClick={() => setShowClosed(false)}></div>\n              Unstake from Closed Pool\n            </div>\n          ) : null\n        }\n        <div className=\"pool-list\">\n          {generateStakingPool()}\n        </div>\n        { showClosedEntry ? <div className=\"closed-pool-entrance\" onClick={() => setShowClosed(true)}>Unstake from Closed Pool</div> : null }\n      </div>\n    </div>\n  )\n}\n\nexport default Staking","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport Tooltip from 'rc-tooltip';\nimport Input from '../../../components/input'\nimport { readBigNumberUint128, getTokenBalance, getTokenIconDom } from '../../../utils/token'\nimport { GOVERNANCE_ADDRESS, TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\n\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst StakingDetail = (props) => {\n  const [stakeToken, setStakeToken] = useState({})\n  const [tokenBalance, setTokenBalance] = useState('-')\n  const [tokenWeight, setTokenWeight] = useState(1)\n  const [amount, setAmount] = useState('')\n  const [myStake, setMyStake] = useState({})\n  const [stakeType, setStakeType] = useState('stake')\n  const [claimableWing, setClaimableWing] = useState(0)\n  const [showStakingModal, setShowStakingModal] = useState(false)\n  const { account, tokens, stakingTokens, STAKING_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    stakingTokens: state.staking.tokens,\n    STAKING_ADDRESS: state.gov.poolStat.pools.staking.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const Alert = useAlert()\n  const location = useLocation()\n  const history = useHistory()\n  const tokenId = location.pathname.match(/\\/([^/]+)$/)[1]\n\n  useEffect(() => {\n    if (stakingTokens.length) {\n      setTokenWeight(stakingTokens.find((t) => `${t.id}` === tokenId).originWeight)\n    }\n  }, [stakingTokens])\n\n  useEffect(() => {\n    if (account && tokens.length) {\n      const sToken = tokens.find((t) => `${t.id}` === tokenId)\n\n      setStakeToken(sToken)\n      getTokenBalance(account, sToken, setTokenBalance)\n    }\n  }, [tokens, account])\n\n\n  useEffect(() => {\n    const getClaimableWing = async () => {\n      if (account && stakeToken.ty === 2) {\n        try {\n          const resp = await client.api.smartContract.invokeWasmRead({\n            scriptHash: GOVERNANCE_ADDRESS,\n            operation: 'claimable_wing',\n            args: [\n              {\n                type: 'Address',\n                value: account\n              },\n              {\n                type: 'Long',\n                value: stakeToken.id\n              }\n            ]\n          })\n          const strReader = new StringReader(resp)\n\n          setClaimableWing(readBigNumberUint128(strReader))\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getClaimableWing()\n    let interval = setInterval(getClaimableWing, 10000)\n\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, stakeToken])\n\n  useEffect(() => {\n    if (account && stakeToken.id && STAKING_ADDRESS) {\n      getAccountStake()\n      const interval = setInterval(getAccountStake, 10000)\n      return () => {\n        interval && clearInterval(interval)\n      }\n    }\n  }, [stakeToken, account, STAKING_ADDRESS])\n\n  useEffect(() => {\n    if (!account) {\n      setMyStake({})\n    }\n  }, [account])\n\n  function getAccountStakeByTokenId(id) {\n    return client.api.smartContract.invokeWasmRead({\n      scriptHash: STAKING_ADDRESS,\n      operation: 'account_stake_info',\n      args: [\n        {\n          type: 'Address',\n          value: account\n        },\n        {\n          type: 'Long',\n          value: id\n        }\n      ]\n    }).then((stakeStr) => {\n      const strReader = new StringReader(stakeStr)\n      return {\n        id,\n        balance: new BigNumber(readBigNumberUint128(strReader) || 0).div(10 ** (stakeToken.decimals || 0)).toString(),\n        interest: readBigNumberUint128(strReader)\n      }\n    })\n  }\n\n  function getAccountStake() {\n    getAccountStakeByTokenId(tokenId)\n    .then((stake) => {\n      setMyStake(stake)\n    })\n    .catch((e) => {\n      console.log('get account stakes', e)\n    })\n  }\n\n  function handleStakeClick(action) {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    setStakeType(action)\n    setShowStakingModal(true)\n  }\n\n  async function onStake() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (stakeToken.id && STAKING_ADDRESS) {\n      if (amount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      if (stakeType === 'unstake' && new BigNumber(amount).gt(new BigNumber(myStake.balance))) {\n        Alert.error('Amount should be less than your balance')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: stakeToken.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(amount).times(new BigNumber(10 ** stakeToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const param = {\n          scriptHash: STAKING_ADDRESS,\n          operation: stakeType,\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        }\n\n        const stakeResult = await client.api.smartContract.invokeWasm(param)\n\n        if (stakeResult.transaction) {\n          setShowStakingModal(false)\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${stakeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setShowStakingModal(false)\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onHarvest() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (STAKING_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: stakeToken.id\n          }\n        ]\n        const param = {\n          scriptHash: STAKING_ADDRESS,\n          operation: 'harvest',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        }\n\n        const harvestResult = await client.api.smartContract.invokeWasm(param)\n\n        if (harvestResult.transaction) {\n          setShowStakingModal(false)\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${harvestResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function onNavigateToStaking() {\n    history.goBack()\n  }\n\n  const maxInput = () => {\n    if (stakeType === 'stake' && !isNaN(tokenBalance)) {\n      setAmount(tokenBalance)\n    } else if (stakeType === 'unstake' && !isNaN(myStake.balance)) {\n      setAmount(myStake.balance)\n    }\n  }\n\n  return (\n    <div className=\"stake-container\">\n      <div className=\"stake-title\">\n        <div className=\"back-icon\" onClick={() => onNavigateToStaking()} />\n        Earn <span className=\"icon-UNX\">UNX</span> by\n        {getTokenIconDom(stakeToken, 'inline-token-wrapper')}\n        {stakeToken.name || ''}\n      </div>\n      <div className=\"stake-token-detail\">\n        <div className=\"stake-token-amount\">\n          {getTokenIconDom(stakeToken, 'stake-token-wrapper')}\n          <div className=\"stake-token-amount-detail\">\n            <div className=\"stake-token-amount-label\">Current Staked</div>\n            <div className=\"stake-token-amount-info\">{myStake.balance} {stakeToken.name}</div>\n          </div>\n        </div>\n        <div className=\"stake-token-actions\">\n          { tokenWeight ? <div className=\"stake-token-action\" onClick={() => handleStakeClick('stake')}>Stake</div> : null }\n          <div className=\"stake-token-action\" onClick={() => handleStakeClick('unstake')}>Unstake</div>\n        </div>\n      </div>\n      <div className=\"harvest-token-detail\">\n        <div className=\"harvest-token-amount icon-UNX\">\n          <div className=\"harvest-token-amount-label\">Rewards Available</div>\n          <div className=\"harvest-token-amount-info\">{new BigNumber(myStake.interest || 0).div(10 ** 9).toString()} UNX</div>\n        </div>\n        <div className=\"harvest-token-actions\">\n          <div className=\"harvest-token-action\" onClick={() => onHarvest() }>Harvest</div>\n        </div>\n      </div>\n      {\n        stakeToken.ty === 2 ? (\n          <div className=\"claimable-wing-detail\">\n            <div className=\"claimable-wing-amount icon-WING\">{new BigNumber(claimableWing || 0).div(10 ** 9).toString()}\n              <div className=\"claimable-wing-label\">WING Earned\n                <Tooltip placement=\"top\" overlay=\"WING earned by ftoken will be transferred to your account when you stake or unstake\">\n                  <span>?</span>\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      { showStakingModal ? (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper\">\n            <div className=\"close-btn\" onClick={() => { setShowStakingModal(false); setAmount(''); }}></div>\n            <div className=\"stake-wrapper\">\n              {/* <div className={`icon-${stakeToken.name} token-placeholder`}></div> */}\n              {getTokenIconDom(stakeToken, 'token-placeholder')}\n              <div className=\"form-item\">\n                <div className=\"input-label\">Amount\n                  {\n                    stakeType === 'stake' ? (\n                      <span className=\"hint\">Balance: {tokenBalance}</span>\n                    ) : (\n                      <span className=\"hint\">Staked: {myStake.balance}</span>\n                    )\n                  }\n                </div>\n                <div className=\"input-wrapper\">\n                  <Input placeholder=\"0.0\" value={amount} decimals={stakeToken.decimals || 0} onChange={(amount) => setAmount(amount)} />\n                  <div className=\"input-max-btn\" onClick={() => maxInput()}>MAX</div>\n                </div>\n              </div>\n              <div className=\"stake-btn\" onClick={() => onStake()}>{ stakeType === 'stake' ? 'Stake' : 'Unstake'}</div>\n            </div>\n          </div>\n        </div>\n      ) : null }\n    </div>\n  )\n}\n\nexport default StakingDetail","import React from 'react'\nimport './index.css'\n\nconst Token = (props) => {\n  return (\n    <div className=\"coming-soon-placeholder\"></div>\n  )\n}\n\nexport default Token","import React from 'react'\nimport './index.css'\n\nconst Option = (props) => {\n  return (\n    <div className=\"coming-soon-placeholder\"></div>\n  )\n}\n\nexport default Option","import React from 'react'\nimport './index.css'\n\nconst Trade = (props) => {\n  return (\n    <div className=\"coming-soon-placeholder\"></div>\n  )\n}\n\nexport default Trade","import axios from 'axios'\nimport { EVENT_API_BASE_URL } from '../config'\n\nconst instance = axios.create({\n  baseURL: EVENT_API_BASE_URL,\n  timeout: 30000,\n  headers: { 'Content-Type': 'application/json' }\n})\n\ninstance.interceptors.response.use(\n  (response) => {\n    const res = response.data;\n    return res\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\nexport default instance","export const PRICE_DECIMALS = 10 ** 6\nexport const SYNTH_PRICE_DECIMALS = 10 ** 12\nexport const DAI_PRICE = 1\nexport const TRANSACTION_FEE_RATE = 0.001\nexport const ASSET_STATUS = {\n  Live: '00',\n  HighLimit: '01',\n  LowLimit: '02'\n}\nexport const LEVERAGE_TYPE = {\n  Positive: '00',\n  Negative: '01'\n}","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport Tooltip from 'rc-tooltip';\nimport TokenInput from '../../components/tokenInput';\nimport Input from '../../components/input'\nimport EventRequest from '../../utils/eventRequest'\nimport { readBigNumberUint128 } from '../../utils/token'\nimport { DAI_PRICE, SYNTH_PRICE_DECIMALS, ASSET_STATUS, LEVERAGE_TYPE, TRANSACTION_FEE_RATE } from '../../utils/constants'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport './index.css'\n\nconst { StringReader, reverseHex } = utils\n\nconst Synth = () => {\n  const [mintAsset, setMintAsset] = useState({})\n  const [mintAmount, setMintAmount] = useState('')\n  const [unxNeededForMint, setUnxNeededForMint] = useState('')\n  const [burnAsset, setBurnAsset] = useState({})\n  const [burnAmount, setBurnAmount] = useState('')\n  const [unxGetForBurn, setUnxGetForBurn] = useState('')\n  const [exchangeAsset, setExchangeAsset] = useState({})\n  const [exchangeToAsset, setExchangeToAsset] = useState({})\n  const [exchangeAmount, setExchangeAmount] = useState('')\n  const [exchangeToAssets, setExchangeToAssets] = useState([])\n  const [exchangeToAmount, setExchangeToAmount] = useState('')\n  const [unxToken, setUnxToken] = useState({})\n  const [unxPrice, setUnxPrice] = useState(0)\n  const [showMintModal, setShowMintModal] = useState(false)\n  const [showBurnModal, setShowBurnModal] = useState(false)\n  const [showExchangeModal, setShowExchangeModal] = useState(false)\n  const { account, tokens, pairs, poolStat, stat, marketStat, availableReward, synthType, synthPoolWeightRatio, SYNTH_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    poolStat: state.gov.poolStat,\n    ...state.synth,\n    synthPoolWeightRatio: state.gov.poolStat.pools.synth.ratio,\n    SYNTH_ADDRESS: state.gov.poolStat.pools.synth.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const setStat = useCallback((stat) => dispatch({ type: 'SET_SYNTH_STAT', stat }), [])\n  const setMarketStat = useCallback((marketStat) => dispatch({ type: 'SET_SYNTH_MARKET_STAT', marketStat }), [])\n  const setAvailableReward = useCallback((availableReward) => dispatch({ type: 'SET_SYNTH_AVAILABLE_REWARD', availableReward }), [])\n  const setSynthType = useCallback((synthType) => dispatch({ type: 'SET_SYNTH_TYPE', synthType }), [])\n\n  const Alert = useAlert()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (tokens.length) {\n      setUnxToken(tokens.find((t) => t.name === 'UNX'))\n    }\n  }, [tokens])\n\n  useEffect(() => {\n    if (tokens.length && pairs.length && (!unxPrice || unxPrice === '0') && marketStat.marketAssetValue) {\n      const unxTk = tokens.find((t) => t.name === 'UNX')\n      if (!marketStat.marketAssetBalances.length) {\n        const daiTk = tokens.find((t) => t.name === 'pDAI')\n        const pair = pairs.find((p) => (p.token1 === unxTk.id && p.token2 === daiTk.id) || (p.token2 === unxTk.id && p.token1 === daiTk.id))\n\n        if (pair) {\n          if (pair.token1 === unxTk.id) {\n            setUnxPrice(new BigNumber(pair.reserve2).div(10 ** daiTk.decimals).div(pair.reserve1).times(10 ** unxTk.decimals).times(DAI_PRICE).times(SYNTH_PRICE_DECIMALS).toString())\n          } else {\n            setUnxPrice(new BigNumber(pair.reserve1).div(10 ** daiTk.decimals).div(pair.reserve2).times(10 ** unxTk.decimals).times(DAI_PRICE).times(SYNTH_PRICE_DECIMALS).toString())\n          }\n        }\n      } else {\n        setUnxPrice(new BigNumber(marketStat.marketAssetValue).div(marketStat.marketTokenBalance).times(10 ** unxTk.decimals).toString())\n      }\n\n      setUnxToken(unxTk)\n    }\n  }, [pairs, tokens, marketStat])\n\n  useEffect(() => {\n    async function getAvailableReward() {\n      if (account && unxToken.id && SYNTH_ADDRESS) {\n        try {\n          const claimStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'claim_unx',\n            args: [\n              {\n                type: 'Long',\n                value: unxToken.id\n              },\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n\n          const strReader = new StringReader(claimStr)\n          const availableReward = strReader.readUint128()\n\n          setAvailableReward(new BigNumber(availableReward).toString())\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getAvailableReward()\n    const interval = setInterval(getAvailableReward, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, unxToken, SYNTH_ADDRESS])\n\n  useEffect(() => {\n    async function getStat() {\n      if (tokens.length && SYNTH_ADDRESS) {\n        try {\n          const statStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'stat',\n            args: []\n          })\n          const strReader = new StringReader(statStr)\n  \n          reverseHex(strReader.read(20)) // govAddress\n          strReader.readUint128() // daiTokenId\n          strReader.readUint128() // unxTokenId\n          strReader.readUint128() // pairId\n\n          const liveAssetCount = strReader.readNextLen()\n          const liveAssets = []\n          for (let i = 0; i < liveAssetCount; i++) {\n            const asset = {}\n            asset.assetId = strReader.readUint128()\n            asset.tokenId = strReader.readUint128()\n\n            const token = tokens.find((t) => t.id === asset.tokenId)\n            asset.tokenName = token.name\n            asset.decimals = token.decimals\n            asset.leverageType = strReader.readNextByte()\n            asset.times = strReader.readUint128()\n            asset.entryPrice = readBigNumberUint128(strReader)\n            asset.lowLimit = readBigNumberUint128(strReader)\n            asset.highLimit = readBigNumberUint128(strReader)\n            asset.status = strReader.readNextByte()\n            asset.frozenBy = reverseHex(strReader.read(20))\n            asset.frozenTime = strReader.readUint64()\n\n            if (asset.tokenName.startsWith('p')) {\n              asset.tokenName = asset.tokenName.replace('p', '')\n            }\n            asset.tokenName = `${asset.leverageType === LEVERAGE_TYPE.Negative ? 'i' : 's'}${asset.tokenName}`\n            asset.id = asset.assetId\n            asset.value = asset.assetId\n            asset.label = `${asset.tokenName}${asset.times !== 1 ? ` (${asset.times}x)` : ''}`\n            liveAssets.push(asset)\n          }\n\n          const frozenAssetCount = strReader.readNextLen()\n          const frozenAssets = []\n          for (let i = 0; i < frozenAssetCount; i++) {\n            const asset = {}\n            asset.assetId = strReader.readUint128()\n            asset.tokenId = strReader.readUint128()\n\n            const token = tokens.find((t) => t.id === asset.tokenId)\n            asset.tokenName = token.name\n            asset.decimals = token.decimals\n            asset.leverageType = strReader.readNextByte()\n            asset.times = strReader.readUint128()\n            asset.entryPrice = readBigNumberUint128(strReader)\n            asset.lowLimit = readBigNumberUint128(strReader)\n            asset.highLimit = readBigNumberUint128(strReader)\n            asset.status = strReader.readNextByte()\n            asset.frozenBy = reverseHex(strReader.read(20))\n            asset.frozenTime = strReader.readUint64()\n\n            if (asset.tokenName.startsWith('p')) {\n              asset.tokenName = asset.tokenName.replace('p', '')\n            }\n            asset.tokenName = `${asset.leverageType === LEVERAGE_TYPE.Negative ? 'i' : 's'}${asset.tokenName}`\n            asset.label = `${asset.tokenName}${asset.times !== 1 ? ` (${asset.times}x)` : ''}`\n  \n            frozenAssets.push(asset)\n          }\n\n          const tokenPriceCount = strReader.readNextLen()\n          const tokenPrices = []\n          for (let i = 0; i < tokenPriceCount; i++) {\n            const tokenPrice = {}\n            tokenPrice.tokenId = strReader.readUint128()\n            tokenPrice.price = readBigNumberUint128(strReader)\n  \n            tokenPrices.push(tokenPrice)\n          }\n\n          for (let liveAsset of liveAssets) {\n            const currentPrice = tokenPrices.find((tp) => tp.tokenId === liveAsset.tokenId).price\n            let tokenPrice = currentPrice\n\n            if (liveAsset.lowLimit && new BigNumber(currentPrice).lte(new BigNumber(liveAsset.lowLimit))) {\n              tokenPrice = liveAsset.lowLimit\n            } else if (liveAsset.highLimit && new BigNumber(currentPrice).gte(new BigNumber(liveAsset.highLimit))) {\n              tokenPrice = liveAsset.highLimit\n            }\n\n            liveAsset.tokenPrice = tokenPrice\n\n            if (liveAsset.leverageType === LEVERAGE_TYPE.Positive) {\n              liveAsset.price = new BigNumber(liveAsset.entryPrice).plus(new BigNumber(tokenPrice).times(liveAsset.times)).minus(new BigNumber(liveAsset.entryPrice).times(liveAsset.times)).toString()\n            } else {\n              liveAsset.price = new BigNumber(liveAsset.entryPrice).plus(new BigNumber(liveAsset.entryPrice).times(liveAsset.times)).minus(new BigNumber(tokenPrice).times(liveAsset.times)).toString()\n            }\n\n            if ((liveAsset.lowLimit && new BigNumber(liveAsset.tokenPrice).lte(new BigNumber(liveAsset.lowLimit))) || (liveAsset.highLimit && new BigNumber(liveAsset.tokenPrice).gte(new BigNumber(liveAsset.highLimit)))) {\n              liveAsset.unprocessedFrozen = true\n            }\n          }\n\n          for (let frozenAsset of frozenAssets) {\n            frozenAsset.tokenPrice = tokenPrices.find((tp) => tp.tokenId === frozenAsset.tokenId).price\n            if (frozenAsset.status === ASSET_STATUS.HighLimit) {\n              frozenAsset.tokenPrice = frozenAsset.highLimit\n            } else if (frozenAsset.status === ASSET_STATUS.LowLimit) {\n              frozenAsset.tokenPrice = frozenAsset.lowLimit\n            }\n          }\n\n          setStat({\n            liveAssets,\n            frozenAssets,\n            tokenPrices\n          })\n        } catch (e) {\n          console.log('get synth stat', e)\n        }\n      }\n    }\n\n    getStat()\n    const interval = setInterval(getStat, 5000)\n\n    return () => clearInterval(interval)\n  }, [tokens, SYNTH_ADDRESS])\n\n  useEffect(() => {\n    async function getMarketStat() {\n      if (account && unxToken.id && SYNTH_ADDRESS) {\n        try {\n          const statStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'market_stat',\n            args: [\n              {\n                type: 'Long',\n                value: unxToken.id\n              },\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n          const strReader = new StringReader(statStr)\n\n          const marketAssetBalanceCount = strReader.readNextLen()\n          const marketAssetBalances = []\n          let marketAssetValueSum = new BigNumber(0)\n          for (let i = 0; i < marketAssetBalanceCount; i++) {\n            const assetBalance = {}\n            assetBalance.assetId = strReader.readUint128()\n            assetBalance.balance = readBigNumberUint128(strReader)\n            assetBalance.assetPrice = readBigNumberUint128(strReader)\n\n            const asset = stat.liveAssets ? [...stat.liveAssets, ...stat.frozenAssets].find((la) => la.assetId === assetBalance.assetId) : null\n\n            if (asset) {\n              marketAssetValueSum = marketAssetValueSum.plus(new BigNumber(assetBalance.assetPrice).times(assetBalance.balance).div(10 ** asset.decimals))\n            }\n  \n            marketAssetBalances.push(assetBalance)\n          }\n\n          const accountAssetBalanceCount = strReader.readNextLen()\n          const accountAssetBalances = []\n          let accountAssetValueSum = new BigNumber(0)\n          for (let i = 0; i < accountAssetBalanceCount; i++) {\n            const assetBalance = {}\n            assetBalance.assetId = strReader.readUint128()\n            assetBalance.balance = readBigNumberUint128(strReader)\n            assetBalance.assetPrice = readBigNumberUint128(strReader)\n\n            const asset = stat.liveAssets ? [...stat.liveAssets, ...stat.frozenAssets].find((la) => la.assetId === assetBalance.assetId) : null\n\n            if (asset) {\n              accountAssetValueSum = accountAssetValueSum.plus(new BigNumber(assetBalance.assetPrice).times(assetBalance.balance).div(10 ** asset.decimals))\n            }\n  \n            accountAssetBalances.push(assetBalance)\n          }\n\n          const marketStakeValue = readBigNumberUint128(strReader)\n          const accountStakeValue = readBigNumberUint128(strReader)\n          const marketTokenBalance = readBigNumberUint128(strReader)\n          const accountClaimedValue = readBigNumberUint128(strReader)\n          const accountWithdrawedStakeValue = readBigNumberUint128(strReader)\n          const transferable = (marketAssetValueSum.toString() !== '0') ? accountAssetValueSum.div(marketAssetValueSum).times(marketTokenBalance).toString() : '0'\n\n          const parsedMarketStat = {\n            marketAssetBalances,\n            accountAssetBalances,\n            marketAssetValue: marketAssetValueSum.toString(),\n            accountAssetValue: accountAssetValueSum.toString(),\n            transferable,\n            marketStakeValue,\n            accountStakeValue,\n            marketTokenBalance,\n            accountClaimedValue,\n            accountWithdrawedStakeValue\n          }\n\n          setMarketStat(parsedMarketStat)\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getMarketStat()\n    const interval = setInterval(getMarketStat, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, unxToken, stat.liveAssets, SYNTH_ADDRESS])\n\n  const handleMintAmountChange = (amount) => {\n    setMintAmount(amount)\n    if (unxPrice && amount) {\n      setUnxNeededForMint(new BigNumber(amount).times(mintAsset.price).div(unxPrice).div(1 - TRANSACTION_FEE_RATE).toFixed(unxToken.decimals))\n    } else if (Number(amount) === 0) {\n      setUnxNeededForMint('')\n    }\n  }\n\n  const handleUnxNeededForMintChange = (amount) => {\n    setUnxNeededForMint(amount)\n    if (unxPrice && amount) {\n      setMintAmount(new BigNumber(amount).times(unxPrice).div(mintAsset.price).times(1 - TRANSACTION_FEE_RATE).toFixed(mintAsset.decimals))\n    } else if (Number(amount) === 0) {\n      setMintAmount('')\n    }\n  }\n\n  const handleBurnAmountChange = (amount) => {\n    setBurnAmount(amount)\n    if (unxPrice && amount) {\n      setUnxGetForBurn(new BigNumber(amount).times(burnAsset.assetPrice).div(unxPrice).times(1 - TRANSACTION_FEE_RATE).toFixed(unxToken.decimals))\n    } else if (Number(amount) === 0) {\n      setUnxGetForBurn('')\n    }\n  }\n\n  const handleUnxGetForBurnChange = (amount) => {\n    setUnxGetForBurn(amount)\n    if (unxPrice && amount) {\n      setBurnAmount(new BigNumber(amount).times(unxPrice).div(burnAsset.assetPrice).div(1 - TRANSACTION_FEE_RATE).toFixed(burnAsset.decimals))\n    } else if (Number(amount) === 0) {\n      setBurnAmount('')\n    }\n  }\n\n  const handleExchangeAmountChange = (amount) => {\n    setExchangeAmount(amount)\n    if (amount) {\n      setExchangeToAmount(new BigNumber(exchangeAsset.price).div(exchangeToAsset.price).times(amount).times(10 ** exchangeAsset.decimals).div(10 ** exchangeToAsset.decimals).times(1 - TRANSACTION_FEE_RATE).toFixed(exchangeToAsset.decimals))\n    } else if (Number(amount) === 0) {\n      setExchangeToAmount('')\n    }\n  }\n\n  const handleChengeExchangeToAmount = (amount) => {\n    setExchangeToAmount(amount)\n    if (amount) {\n      setExchangeAmount(new BigNumber(amount).times(10 ** exchangeToAsset.decimals).div(10 ** exchangeAsset.decimals).times(exchangeToAsset.price).div(exchangeAsset.price).div(1 - TRANSACTION_FEE_RATE).toFixed(exchangeAsset.decimals))\n    } else if (Number(amount) === 0) {\n      setExchangeAmount('')\n    }\n  }\n\n  const maxBurnAmount = () => {\n    if (burnAsset) {\n      handleBurnAmountChange(new BigNumber(burnAsset.balance).div(10 ** burnAsset.decimals).toString())\n    }\n  }\n\n  const maxExchangeAmount = () => {\n    if (exchangeAsset) {\n      handleExchangeAmountChange(new BigNumber(exchangeAsset.balance).div(10 ** exchangeAsset.decimals).toString())\n    }\n  }\n\n  const handleChangeExchangeToAsset = (asset) => {\n    setExchangeToAsset(asset)\n    if (exchangeAmount) {\n      setExchangeToAmount(new BigNumber(exchangeAsset.price).div(asset.price).times(exchangeAmount).times(10 ** exchangeAsset.decimals).div(10 ** asset.decimals).times(1 - TRANSACTION_FEE_RATE).toFixed(asset.decimals))\n    } else if (Number(exchangeAmount) === 0) {\n      setExchangeToAmount('')\n    }\n  }\n\n  async function onMint() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && mintAsset.assetId && SYNTH_ADDRESS) {\n      if (mintAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(unxNeededForMint).times(new BigNumber(10 ** unxToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: mintAsset.assetId\n          }\n        ]\n        const mintResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'mint',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (mintResult.transaction) {\n          setShowMintModal(false)\n          setMintAmount('')\n          setUnxNeededForMint('')\n\n          let detail = ''\n\n          EventRequest({\n            method: 'get',\n            url: `${mintResult.transaction}`\n          }).then((resp) => {\n            if (resp.Desc === 'SUCCESS') {\n              try {\n                const eventStates = resp.Result.Notify.find((notify) => notify.States[0] === 'mint').States\n\n                if (eventStates[5] === '0') {\n                  detail = `Your last transaction successfully freezed the ${mintAsset.label} asset, you'll get 1‰ of the redeemed UNX when burnt.`\n                }\n              } catch (e) {}\n\n              setInfoModal('success', mintResult.transaction, detail)\n            }\n          }).catch((e) => {\n            setInfoModal('success', mintResult.transaction)\n          })\n        }\n      } catch (e) {\n        setShowMintModal(false)\n        setMintAmount('')\n        setUnxNeededForMint('')\n        setInfoModal('error')\n      }\n    }\n  }\n\n  async function onBurn() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && burnAsset.assetId && SYNTH_ADDRESS) {\n      if (burnAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: burnAsset.assetId\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(burnAmount).times(new BigNumber(10 ** burnAsset.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const burnResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'burn',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (burnResult.transaction) {\n          setShowBurnModal(false)\n          setBurnAmount('')\n          setUnxGetForBurn('')\n          setInfoModal('success', burnResult.transaction)\n        }\n      } catch (e) {\n        setShowBurnModal(false)\n        setBurnAmount('')\n        setUnxGetForBurn('')\n        setInfoModal('error')\n      }\n    }\n  }\n\n  async function onBurnAll() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const burnAllResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'burn_all_asset',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (burnAllResult.transaction) {\n          setInfoModal('success', burnAllResult.transaction)\n        }\n      } catch (e) {\n        setInfoModal('error')\n      }\n    }\n  }\n\n  async function onExchange() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && exchangeAsset.assetId && SYNTH_ADDRESS) {\n      if (exchangeAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: exchangeAsset.assetId\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(exchangeAmount).times(new BigNumber(10 ** exchangeAsset.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },{\n            type: 'Long',\n            value: exchangeToAsset.assetId\n          }\n        ]\n        const exchangeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'asset_swap',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (exchangeResult.transaction) {\n          setShowExchangeModal(false)\n          setExchangeAmount('')\n          setExchangeToAmount('')\n\n          let detail = ''\n\n          EventRequest({\n            method: 'get',\n            url: `${exchangeResult.transaction}`\n          }).then((resp) => {\n            if (resp.Desc === 'SUCCESS') {\n              try {\n                const eventStates = resp.Result.Notify.find((notify) => notify.States[0] === 'asset_swap').States\n\n                if (eventStates[4] === '0') {\n                  detail = `Your last transaction successfully freezed the ${exchangeAsset.label} asset, you'll get 1‰ of the redeemed UNX when burnt.`\n                }\n              } catch (e) {}\n\n              setInfoModal('success', exchangeResult.transaction, detail)\n            }\n          }).catch((e) => {\n            setInfoModal('success', exchangeResult.transaction)\n          })\n        }\n      } catch (e) {\n        setShowExchangeModal(false)\n        setExchangeAmount('')\n        setExchangeToAmount('')\n        setInfoModal('error')\n      }\n    }\n  }\n\n  async function onClaim() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const claimResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'claim_unx',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (claimResult.transaction) {\n          setInfoModal('success', claimResult.transaction)\n        }\n      } catch (e) {\n        setInfoModal('error')\n      }\n    }\n  }\n\n  const handleFreezeAsset = async (asset) => {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: asset.assetId\n          }\n        ]\n        const freezeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'freeze_asset',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (freezeResult.transaction) {\n          setInfoModal('success', freezeResult.transaction)\n        }\n      } catch (e) {\n        setInfoModal('error')\n      }\n    }\n  }\n\n  const calcEffectiveLeverage = (asset) => {\n    if (asset.leverageType === LEVERAGE_TYPE.Positive) {\n      return new BigNumber(asset.tokenPrice).times(asset.times)\n        .div(new BigNumber(asset.tokenPrice).times(asset.times).plus(asset.entryPrice).minus(new BigNumber(asset.entryPrice).times(asset.times)))\n        .toFixed(2)\n    } else if (asset.leverageType === LEVERAGE_TYPE.Negative) {\n      return new BigNumber(asset.tokenPrice).times(asset.times)\n        .div(new BigNumber(asset.entryPrice).times(asset.times).plus(asset.entryPrice).minus(new BigNumber(asset.tokenPrice).times(asset.times)))\n        .toFixed(2)\n    }\n  }\n\n  const getPriceDetail = (asset) => {\n    let txt = `Entry Price: ${new BigNumber(asset.entryPrice).div(SYNTH_PRICE_DECIMALS).toString()}`\n    if (Number(asset.lowLimit)) {\n      txt += ` Low Limit: ${new BigNumber(asset.lowLimit).div(SYNTH_PRICE_DECIMALS).toString()}`\n    }\n    if (Number(asset.highLimit)) {\n      txt += ` High Limit: ${new BigNumber(asset.highLimit).div(SYNTH_PRICE_DECIMALS).toString()}`\n    }\n    \n    return txt\n  }\n\n  const renderAssetList = () => {\n    if (synthType === 'mint') {\n      if (stat.liveAssets) {\n        const assetList = stat.liveAssets.map((la) => {\n          const accountAsset = marketStat.accountAssetBalances ? marketStat.accountAssetBalances.find((ab) => ab.assetId === la.assetId) : null\n          const showPriceDetail = !(la.times === 1 && la.leverageType === LEVERAGE_TYPE.Positive)\n\n          if (accountAsset) {\n            la.holdings = new BigNumber(accountAsset.assetPrice).div(SYNTH_PRICE_DECIMALS).times(accountAsset.balance).div(10 ** la.decimals).toString()\n          }\n\n          la.effectiveLeverage = calcEffectiveLeverage(la)\n\n          return (\n            <div className={`synth-assets-list-item ${la.unprocessedFrozen ? 'unprocessed-frozen' : ''}`} key={la.assetId}>\n              <div className=\"synth-assets-list-item-name\">\n                <div className={`synth-assets-list-item-icon icon-${la.tokenName}`}>\n                  {\n                    showPriceDetail ? (\n                      <Tooltip placement=\"top\" overlay={getPriceDetail(la)}><span>{la.label}</span></Tooltip>\n                    ) : <span>{la.label}</span>\n                  }\n                  {\n                    la.unprocessedFrozen ? (\n                      <Tooltip placement=\"top\" overlay=\"The first one that freezes an asset will get 1‰ of burning fee from all holders\">\n                        <span className=\"freeze-asset-btn\" onClick={() => handleFreezeAsset(la)}></span>\n                      </Tooltip>\n                    ) : null\n                  }\n                </div>\n              </div>\n              <div className=\"synth-assets-list-item-price\">{new BigNumber(la.price).div(SYNTH_PRICE_DECIMALS).toString()}</div>\n              <div className=\"synth-assets-list-item-holding\">{la.holdings || 0}</div>\n              <div className=\"synth-assets-list-item-leverage\">{la.effectiveLeverage}</div>\n              <div className=\"synth-assets-list-item-action\">\n                <div className=\"synth-assets-list-item-action-mint\" onClick={() => { setShowMintModal(true); setMintAsset(la); }}>Mint</div>\n              </div>\n            </div>\n          )\n        })\n        return assetList.length ? assetList : (<div className=\"empty-asset-hint\">No Assets</div>)\n      } else {\n        return (<div className=\"asset-loading-hint\">Loading...</div>)\n      }\n    } else {\n      if (marketStat.accountAssetBalances) {\n        const assetList = marketStat.accountAssetBalances.map((ab) => {\n          let asset = stat.liveAssets ? stat.liveAssets.find((la) => la.assetId === ab.assetId) : null\n\n          if (!asset) {\n            asset = stat.frozenAssets ? stat.frozenAssets.find((fa) => fa.assetId === ab.assetId) : null\n\n            if (asset) {\n              asset.isFrozen = true\n            }\n          }\n\n          if (asset) {\n            if (!asset.isFrozen) {\n              if ((asset.lowLimit && new BigNumber(asset.tokenPrice).lte(new BigNumber(asset.lowLimit))) || (asset.highLimit && new BigNumber(asset.tokenPrice).gte(new BigNumber(asset.highLimit)))) {\n                asset.unprocessedFrozen = true\n              }\n            }\n            asset.balance = ab.balance\n            asset.assetPrice = ab.assetPrice\n            asset.effectiveLeverage = calcEffectiveLeverage(asset)\n          }\n          return asset ? (\n            <div className={`synth-assets-list-item ${asset.isFrozen ? 'frozen' : ''} ${asset.unprocessedFrozen ? 'unprocessed-frozen' : ''}`} key={ab.assetId}>\n              <div className=\"synth-assets-list-item-name\">\n                <div className={`synth-assets-list-item-icon icon-${asset.tokenName}`}>\n                  {asset.label}\n                  {\n                    asset.unprocessedFrozen ? (\n                      <Tooltip placement=\"top\" overlay=\"The first one that freezes an asset will get 1‰ of burning fee from all holders\">\n                        <span onClick={() => handleFreezeAsset(asset)}></span>\n                      </Tooltip>\n                    ) : null\n                  }\n                </div>\n              </div>\n              <div className=\"synth-assets-list-item-price\">{new BigNumber(ab.assetPrice).div(SYNTH_PRICE_DECIMALS).toString()}</div>\n              <div className=\"synth-assets-list-item-holding\">{new BigNumber(ab.assetPrice).div(SYNTH_PRICE_DECIMALS).times(ab.balance).div(10 ** asset.decimals).toString()}</div>\n              <div className=\"synth-assets-list-item-leverage\">{asset.effectiveLeverage}</div>\n              <div className=\"synth-assets-list-item-action\">\n                <div className=\"synth-assets-list-item-action-burn\" onClick={() => { setShowBurnModal(true); setBurnAsset(asset); }}>Burn</div>\n                <div className=\"synth-assets-list-item-action-exchange\"\n                  onClick={() => {\n                    setShowExchangeModal(true)\n                    setExchangeAsset(asset)\n                    const toAssets = stat.liveAssets.filter((la) => la.assetId !== asset.assetId)\n                    setExchangeToAssets(toAssets)\n                    setExchangeToAsset(toAssets[0])\n                  }}\n                >Exchange</div>\n              </div>\n            </div>\n          ) : null\n        })\n\n        return assetList.length ? assetList : (<div className=\"empty-asset-hint\">No Assets</div>)\n      } else {\n        return (<div className=\"asset-loading-hint\">Loading...</div>)\n      }\n    }\n  }\n\n  const setInfoModal = (type, transaction, detail) => {\n    setModal('infoModal', {\n      show: true,\n      type,\n      text: type === 'success' ? 'Transaction Successful' : 'Transaction Failed',\n      detail,\n      extraText: type === 'success' ? 'View Transaction' : '',\n      extraLink: type === 'success' ? `${TRANSACTION_BASE_URL}${transaction}${TRANSACTION_AFTERFIX}` : ''\n    })\n  }\n\n  return (\n    <div className=\"synth-container\">\n      <div className=\"synth-overview-sections\">\n        <div className=\"synth-overview-section\">\n          <div className=\"synth-overview-sub-section\">\n            <p className=\"synth-overview-section-title\">Mint APY</p>\n            <p className=\"synth-overview-detail\">{(marketStat.marketStakeValue && unxToken.id) ? new BigNumber(poolStat.distributionInfo.amount || 0).div(poolStat.distributionInfo.period || 1).times(86400 * 365).times(10 ** unxToken.decimals).times(synthPoolWeightRatio || 0).div(marketStat.marketStakeValue).toFixed(2) : 0}%</p>\n          </div>\n          <div className=\"synth-overview-section-group\">\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Market Balance</p>\n              <p className=\"synth-overview-detail\">{marketStat.marketTokenBalance ? new BigNumber(marketStat.marketTokenBalance).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span></p>\n            </div>\n          </div>\n        </div>\n        <div className=\"synth-overview-section-right\">\n          <div className=\"synth-overview-sub-section\">\n            <p className=\"synth-overview-section-title\">Transferable</p>\n            <p className=\"synth-overview-detail\">{(marketStat.transferable && marketStat.transferable !== '0') ? new BigNumber(marketStat.transferable).plus(availableReward).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span></p>\n          </div>\n          <div className=\"synth-overview-section-group\">\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Staked Available</p>\n              <p className=\"synth-overview-detail\">{(marketStat.transferable && marketStat.transferable !== '0') ? (new BigNumber(marketStat.transferable)).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span>\n                { (marketStat.transferable && marketStat.transferable !== '0') ? <span className=\"synth-overview-action-btn synth-overview-action-btn-burn\" onClick={() => onBurnAll()}>Burn All</span> : null }\n              </p>\n            </div>\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Rewards Available</p>\n              <p className=\"synth-overview-detail\">{unxToken.id ? new BigNumber(availableReward).div(10 ** unxToken.decimals).toString() : 0}\n                <span>UNX</span>\n                { (availableReward && availableReward !== '0') ? <span className=\"synth-overview-action-btn\" onClick={() => onClaim()}>Claim</span> : null }\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mint-burn-wrapper\">\n        <div className=\"mint-burn-main\">\n          <div className=\"synth-type-switch\">\n            <div className={`synth-type-item ${synthType === 'mint' ? 'selected' : ''}`} onClick={() => setSynthType('mint')}>Mint</div>\n            <div className={`synth-type-item ${synthType === 'burn' ? 'selected' : ''}`} onClick={() => setSynthType('burn')}>Burn</div>\n          </div>\n          <div className=\"market-asset-value\">Market Asset Value: &nbsp;&nbsp;<span>${new BigNumber(marketStat.marketAssetValue || 0).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n          <div className=\"synth-assets-panel\">\n            <div className=\"synth-assets-panel-header\">\n              <div className=\"panel-header-item panel-header-item-asset\">Asset</div>\n              <div className=\"panel-header-item\">Price($)</div>\n              <div className=\"panel-header-item\">Holdings($)</div>\n              <div className=\"panel-header-item\">Effective Leverage</div>\n              <div className=\"panel-header-item panel-header-item-action\"></div>\n            </div>\n            <div className=\"synth-assets-list\">\n              {renderAssetList()}\n            </div>\n          </div>\n        </div>\n        {\n          synthType === 'mint' ? (\n            <div className=\"mint-burn-info\">\n              <div className=\"mint-burn-info-title\">Mint Synthetics by staking UNX</div>\n              <div className=\"mint-burn-info-desc\">UNX stakers earn staking rewards once minted.</div>\n              <div className=\"mint-burn-account-info\">\n                <div className=\"mint-burn-account-info-line\">Minted With <span>{new BigNumber(marketStat.accountStakeValue || 0).div(10 ** unxToken.decimals).toString() || '0'} UNX</span></div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"mint-burn-info\">\n              <div className=\"mint-burn-info-title\">Burn Synthetics to unstake UNX</div>\n              <div className=\"mint-burn-info-desc\">Burn your synthetics to withdraw UNX.</div>\n              <div className=\"mint-burn-account-info\">\n                <div className=\"mint-burn-account-info-line\">Assets($) <span>{new BigNumber(marketStat.accountAssetValue).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n              </div>\n              <div className=\"mint-burn-info-note\"><strong>NOTE</strong>: when \"Effective Leverage\" is lower than 0.5 or higher than 2.0 times of nominal leverage, your asset will be frozen. <span>You have to burn it within 3 days.</span> Otherwise, your asset will be burned and the UNX will be donated to staked pool.</div>\n            </div>\n          )\n        }\n        \n      </div>\n      {\n        showMintModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => {setShowMintModal(false);setMintAmount('');setUnxNeededForMint('');}}></div>\n              <div className=\"mint-wrapper\">\n                <div className=\"mint-wrapper-title\">Mint {mintAsset.label}</div>\n                <div className=\"mint-wrapper-info\">Price($)<span>{new BigNumber(mintAsset.price).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount</div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={mintAmount} decimals={mintAsset.decimals || 0} onChange={(amount) => handleMintAmountChange(amount)} />\n                  </div>\n                </div>\n                <TokenInput\n                  label=\"You need to pay (UNX)\"\n                  value={unxNeededForMint}\n                  defaultToken={unxToken}\n                  decimals={unxToken.decimals || 0}\n                  onAmountChange={(amount) => handleUnxNeededForMintChange(amount)} />\n                <div className=\"mint-btn\" onClick={() => onMint()}>Mint</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      {\n        showBurnModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => {setShowBurnModal(false);setBurnAmount('');setUnxGetForBurn('');}}></div>\n              <div className=\"burn-wrapper\">\n                <div className=\"burn-wrapper-title\">Burn {burnAsset.label}</div>\n                <div className=\"burn-wrapper-info\">Price($)<span>{new BigNumber(burnAsset.assetPrice).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount\n                    <span className=\"hint\">Balance: {new BigNumber(burnAsset.balance).div(10 ** burnAsset.decimals).toString()}</span>\n                  </div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={burnAmount} decimals={burnAsset.decimals || 0} onChange={(amount) => handleBurnAmountChange(amount)} />\n                    <div className=\"input-max-btn\" onClick={() => maxBurnAmount()}>MAX</div>\n                  </div>\n                </div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">You will get (UNX)</div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={unxGetForBurn} decimals={unxToken.decimals || 0} onChange={(amount) => handleUnxGetForBurnChange(amount)} />\n                  </div>\n                </div>\n                <div className=\"burn-btn\" onClick={() => onBurn()}>Burn</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      {\n        showExchangeModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => {setShowExchangeModal(false);setExchangeAmount('');setExchangeToAmount('');}}></div>\n              <div className=\"exchange-wrapper\">\n                <div className=\"exchange-wrapper-title\">Exchange {exchangeAsset.label}</div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount\n                    <span className=\"hint\">Balance: {new BigNumber(exchangeAsset.balance).div(10 ** exchangeAsset.decimals).toString()}</span>\n                  </div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={exchangeAmount} decimals={exchangeAsset.decimals || 0} onChange={(amount) => handleExchangeAmountChange(amount)} />\n                    <div className=\"input-max-btn\" onClick={() => maxExchangeAmount()}>MAX</div>\n                  </div>\n                </div>\n                <TokenInput\n                  cls=\"asset-select\"\n                  label=\"Exchange to\"\n                  value={exchangeToAmount}\n                  tokens={exchangeToAssets}\n                  showBalance={false}\n                  withMax={false}\n                  onTokenChange={(asset) => handleChangeExchangeToAsset(asset)}\n                  onAmountChange={(amount) => handleChengeExchangeToAmount(amount)}\n                  />\n                <div className=\"exchange-btn\" onClick={() => onExchange()}>Exchange</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n    </div>\n  )\n}\n\nexport default Synth","import React from 'react'\nimport { useMappedState } from 'redux-react-hook';\nimport { toLocaleFixed } from '../../utils/common'\nimport './index.css'\n\nconst Governance = (props) => {\n  const { poolStat } = useMappedState((state) => ({\n    poolStat: state.gov.poolStat\n  }))\n\n  return (\n    <div className=\"governance-wrapper\">\n      <div className=\"overview-wrapper\">\n        <div className=\"overview-title\">Overview</div>\n        <div className=\"overview-sections\">\n          <div className=\"overview-left\">\n            <p className=\"overview-section-title\">Total UNX</p>\n            <p className=\"overview-detail\">{toLocaleFixed(poolStat.distributionInfo.amount || 0)}</p>\n          </div>\n          <div className=\"overview-right\">\n            <p className=\"overview-section-title\">Daily Distribution</p>\n            <p className=\"overview-detail\">{toLocaleFixed(((poolStat.distributionInfo.amount || 0) / (poolStat.distributionInfo.period || 1) * 86400).toFixed(9))} <span>UNX</span></p>\n          </div>\n        </div>\n      </div>\n      <div className=\"distribution-wrapper\">\n        <div className=\"overview-title\">Distribution</div>\n        <div className=\"distribution-sections\">\n          <div className=\"pie-svg\">\n            <svg className=\"donut\" width=\"240px\" height=\"240px\" viewBox=\"0 0 42 42\" role=\"img\">\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#2BBE7F\" stroke-width=\"4\" stroke-dasharray=\"80, 20\" stroke-dashoffset=\"100\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"120\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FE332F\" stroke-width=\"4\" stroke-dasharray=\"8, 92\" stroke-dashoffset=\"219.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"311.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#F4BA5E\" stroke-width=\"4\" stroke-dasharray=\"8, 92\" stroke-dashoffset=\"411\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"503\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#2B3962\" stroke-width=\"4\" stroke-dasharray=\"3, 97\" stroke-dashoffset=\"602.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"699.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#F18DA5\" stroke-width=\"4\" stroke-dasharray=\"1, 99\" stroke-dashoffset=\"799\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"898\"></circle>\n            </svg>\n          </div>\n          <div className=\"pie-desc\">\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#2BBE7F' } }></div>\n              <div className=\"d-item-name\">Community</div>\n              <div className=\"d-item-ratio\">80%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#FE332F' } }></div>\n              <div className=\"d-item-name\">Developer</div>\n              <div className=\"d-item-ratio\">8%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#F4BA5E' } }></div>\n              <div className=\"d-item-name\">Foundation</div>\n              <div className=\"d-item-ratio\">8%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#2B3962' } }></div>\n              <div className=\"d-item-name\">Resoucse Extension</div>\n              <div className=\"d-item-ratio\">3%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#F18DA5' } }></div>\n              <div className=\"d-item-name\">Volunteer</div>\n              <div className=\"d-item-ratio\">1%</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Governance","export const handleError = (e, callback = () => {}) => {\n  try {\n    const json = JSON.parse(e)\n    if (json.Result === 'wasm contract does not exist') {\n      callback('CONTRACT_ADDRESS_ERROR')\n    }\n  } catch(error) {\n    // TODO\n  }\n}","import { useEffect, useCallback } from 'react'\nimport { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport { GOVERNANCE_ADDRESS } from '../config'\nimport { handleError } from '../utils/errorHandle'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\n\nconst { StringReader, hexstr2str, reverseHex } = utils\n\nexport const useFetchTokens = () => {\n  const { stopInterval, tokens } = useMappedState((state) => ({\n    stopInterval: state.common.stopInterval,\n    tokens: state.common.tokens\n  }))\n  const dispatch = useDispatch()\n  const setIsUpgrading = useCallback((isUpgrading) => dispatch({ type: 'SET_IS_UPGRADING', isUpgrading }), [])\n  const setLoadingToken = useCallback((loadingToken) => dispatch({ type: 'SET_LOADING_TOKEN', loadingToken }), [])\n  const setTokens = useCallback((tokens) => dispatch({ type: 'SET_TOKENS', tokens }), [])\n  const setStopInterval = useCallback((stopInterval) => dispatch({ type: 'SET_STOP_INTERVAL', stopInterval }), [])\n  const setPoolStat = useCallback((poolStat) => dispatch({ type: 'SET_POOL_STAT', poolStat }), [])\n\n  useEffect(() => {\n    getGovStat()\n    let interval = !stopInterval && !tokens.length && setInterval(() => getGovStat, 1000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokens, stopInterval])\n\n  async function getGovStat() {\n    if (!tokens.length) {\n      try {\n        const statStr = await client.api.smartContract.invokeWasmRead({\n          scriptHash: GOVERNANCE_ADDRESS,\n          operation: 'stat',\n          args: []\n        })\n\n        const strReader = new StringReader(statStr)\n        const distributionInfo = {}\n        distributionInfo.amount = strReader.readUint128() / (10 ** 9)\n        distributionInfo.period = strReader.readUint128()\n        distributionInfo.startTimeStamp = strReader.readUint128()\n        distributionInfo.settledTimeStamp = strReader.readUint128()\n  \n        const pools = {}\n        const poolCount = strReader.readNextLen()\n        let totalWeight = 0\n        for (let i = 0; i < poolCount; i++) {\n          const pool = {}\n          const nameLength = strReader.readNextLen()\n          pool.name = hexstr2str(strReader.read(nameLength))\n          pool.address = reverseHex(strReader.read(20))\n          pool.weight = strReader.readUint128()\n          totalWeight += pool.weight\n          pools[pool.name] = pool\n        }\n\n        for (let poolName in pools) {\n          pools[poolName].ratio = pools[poolName].weight / totalWeight\n        }\n  \n        const upgrade = strReader.readBoolean()\n        const parsedTokens = []\n        const tokenCount = strReader.readNextLen()\n        for (let i = 0; i < tokenCount; i++) {\n          const token = {}\n          token.id = strReader.readUint128()\n          const nameLength = strReader.readNextLen()\n          token.name = hexstr2str(strReader.read(nameLength))\n          token.address = reverseHex(strReader.read(20))\n          token.ty = strReader.readUint8()\n          token.decimals = strReader.readUint128()\n\n          token.value = token.id\n          token.label = token.name\n\n          parsedTokens.push(token)\n        }\n\n        if (upgrade) {\n          setIsUpgrading(true)\n        }\n\n        setLoadingToken(false)\n        setTokens(parsedTokens)\n        setPoolStat({\n          distributionInfo,\n          pools,\n          upgrade\n        })\n      } catch (e) {\n        console.log(e)\n        handleError(e, (errorCode) => {\n          console.log(errorCode)\n          if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n            setStopInterval(true)\n          } else {\n            console.log('get all tokens', e)\n          }\n        })\n      }\n    }\n  }\n\n  return null\n}","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useEffect, useCallback } from 'react'\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport Header from './components/header'\nimport Modal from './components/modal'\n// import Transaction from './pages/transaction'\nimport Swap from './pages/swap'\nimport Pool from './pages/pool'\nimport AddLiquidity from './pages/pool/addLiquidity'\nimport RemoveLiquidity from './pages/pool/removeLiquidity'\nimport Staking from './pages/staking'\nimport StakingDetail from './pages/staking/detail'\nimport Token from './pages/token'\nimport Option from './pages/option'\nimport Trade from './pages/trade'\nimport Synth from './pages/synth'\nimport Overview from './pages/governance'\nimport { NETWORK_TYPE, READY_TABS } from './config'\nimport { useFetchTokens } from './hooks/useToken'\nimport './App.css'\n\nexport const App = () => {\n  const Alert = useAlert()\n  const { account, isUpgrading, loadingToken } = useMappedState((state) => ({\n    isUpgrading: state.common.isUpgrading,\n    loadingToken: state.common.loadingToken,\n    account: state.wallet.account\n  }))\n  const dispatch = useDispatch()\n  const setAccount = useCallback((account) => dispatch({ type: 'SET_ACCOUNT', account }), [])\n\n  useEffect(() => {\n    let retryTimes = 3\n    const interval = setInterval(() => {\n      client.api.provider.getProvider()\n        .then(() => {\n          clearInterval(interval)\n        })\n        .catch((e) => {\n          if (e === 'NO_PROVIDER') {\n            retryTimes--\n            if (!retryTimes) {\n              Alert.error('Please install wallet extension first')\n            }\n          }\n        })\n    }, 500)\n  }, [])\n\n  useEffect(() => {\n    client.api.network.getNetwork()\n      .then((network) => {\n        if (network && network.type !== NETWORK_TYPE) {\n          Alert.error(`Please connect to the ${NETWORK_TYPE}-Net`)\n          return\n        }\n      })\n      .catch((e) => {\n        console.log(e)\n      })\n  }, [])\n\n  useFetchTokens()\n\n  async function onConnectWallet() {\n    try {\n      const accountAddress = await client.api.asset.getAccount()\n      setAccount(accountAddress)\n      localStorage.setItem('account', accountAddress)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  function onSignOut() {\n    setAccount('')\n    localStorage.setItem('account', '')\n  }\n\n  function renderLoading() {\n    if (loadingToken) {\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper transparent-bg\">\n            <div className=\"modal-icon-loading modal-icon\"></div>\n            <div className=\"modal-text light\">Loading...</div>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  function renderUpgrading() {\n    if (isUpgrading) {\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper transparent-bg\">\n            <div className=\"modal-icon-upgrading modal-icon\"></div>\n            <div className=\"modal-text light\">UNIQ-EX is upgrading...</div>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Router>\n      {renderLoading()}\n      {\n        !isUpgrading ? (\n          <div className=\"app\">\n            <React.Fragment>\n              {\n                (account === null) && <div className=\"connect-wallet-overlay\">\n                  <div className=\"connect-wrapper\">\n                    <p className=\"connect-title\">Connect Wallet</p>\n                    <div className=\"wallet-item\" onClick={() => onConnectWallet()}>Cyano Wallet</div>\n                  </div>\n                </div>\n              }\n              <Modal />\n              <Header onSignOut={() => onSignOut()} onConnectWallet={() => onConnectWallet()} />\n              <div className=\"main-wrapper\">\n                <Switch>\n                  {\n                    READY_TABS.indexOf('/') >= 0 ?\n                    <Route exact path=\"/\">\n                      <Staking />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/') >= 0 ?\n                    <Route exact path=\"/staking/:id\">\n                      <StakingDetail />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/swap') >= 0 ?\n                    <Route exact path=\"/swap\">\n                      <Swap />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/swap') >= 0 ?\n                    <Route exact path=\"/pool\">\n                      <Pool />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/swap') >= 0 ?\n                    <Route exact path=\"/pool/add\">\n                      <AddLiquidity />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/swap') >= 0 ?\n                    <Route exact path=\"/pool/remove/:id\">\n                      <RemoveLiquidity />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/trade') >= 0 ?\n                    <Route exact path=\"/trade\">\n                      <Trade />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/governance') >= 0 ?\n                    <Route exact path=\"/governance\">\n                      <Overview />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/token') >= 0 ?\n                    <Route exact path=\"/token\">\n                      <Token />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/option') >= 0 ?\n                    <Route exact path=\"/option\">\n                      <Option />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/synth') >= 0 ?\n                    <Route exact path=\"/synth\">\n                      <Synth />\n                    </Route> : null\n                  }\n                </Switch>\n              </div>\n            </React.Fragment>\n          </div>\n        ) : renderUpgrading()\n      }\n      \n    </Router>\n  )\n}\n","const initState = {\n  infoModal: {\n    show: false,\n    type: '',\n    text: '',\n    extraText: '',\n    extraLink: ''\n  },\n}\n\nexport const modal = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_MODAL':\n      return { ...state, [action.modalType]: action.modalDetail }\n    default:\n      return { ...state }\n  }\n}","const initState = {\n  account: localStorage.getItem('account'),\n  slippage: localStorage.getItem('slippage') || '0.1'\n}\n\nexport const wallet = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_ACCOUNT':\n      return { ...state, account: action.account }\n    case 'SET_SLIPPAGE':\n      localStorage.setItem('slippage', action.slippage)\n      return { ...state, slippage: action.slippage }\n    default:\n      return { ...state }\n  }\n}","const initState = {\n  isUpgrading: false,\n  loadingToken: true,\n  stopInterval: false,\n  tokens: []\n}\n\nexport const common = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_IS_UPGRADING':\n      return { ...state, isUpgrading: action.isUpgrading }\n    case 'SET_LOADING_TOKEN':\n      return { ...state, loadingToken: action.loadingToken }\n    case 'SET_STOP_INTERVAL':\n      return { ...state, stopInterval: action.stopInterval }\n    case 'SET_TOKENS':\n      return { ...state, tokens: action.tokens }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  poolStat: {\n    distributionInfo: {},\n    pools: {\n      staking: {},\n      swap: {},\n      dex: {},\n      synth: {}\n    },\n    upgrade: false\n  }\n}\n\nexport const gov = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_POOL_STAT':\n      return { ...state, poolStat: action.poolStat }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  tokens: [],\n  pairs: []\n}\n\nexport const swap = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_SWAP_TOKENS':\n      return { ...state, tokens: action.tokens }\n    case 'SET_PAIRS':\n      return { ...state, pairs: action.pairs }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  tokens: []\n}\n\nexport const staking = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_STAKING_TOKENS':\n      return { ...state, tokens: action.tokens }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  stat: {},\n  marketStat: {},\n  availableReward: 0,\n  synthType: 'mint'\n}\n\nexport const synth = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_SYNTH_STAT':\n      return { ...state, stat: action.stat }\n    case 'SET_SYNTH_MARKET_STAT':\n      return { ...state, marketStat: action.marketStat }\n    case 'SET_SYNTH_AVAILABLE_REWARD':\n      return { ...state, availableReward: action.availableReward }\n    case 'SET_SYNTH_TYPE':\n      return { ...state, synthType: action.synthType }\n    default:\n      return { ...state }\n  }\n}\n","import { combineReducers } from 'redux'\nimport { modal } from './modal'\nimport { wallet } from './wallet'\nimport { common } from './common'\nimport { gov } from './gov'\nimport { swap } from './swap'\nimport { staking } from './staking'\nimport { synth } from './synth'\n\nconst reducers = combineReducers({\n  modal,\n  wallet,\n  common,\n  gov,\n  swap,\n  staking,\n  synth\n})\n\nexport default reducers","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as Ontology from '@ont-dev/ontology-dapi';\nimport { positions, Provider } from \"react-alert\";\nimport { createStore } from 'redux';\nimport { StoreContext } from 'redux-react-hook';\nimport AlertTemplate from \"react-alert-template-basic\";\nimport reducers from './reducers';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'rc-tooltip/assets/bootstrap.css'\nimport './styles/font.css';\nimport './styles/common.css';\nimport './index.css';\n\nconst store = createStore(reducers)\n\nOntology.client.registerClient({});\n\nconst options = {\n  timeout: 10000,\n  position: positions.TOP_CENTER\n};\n\nReactDOM.render(\n  <Provider template={AlertTemplate} {...options}>\n    <StoreContext.Provider value={store}>\n      <App />\n    </StoreContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}