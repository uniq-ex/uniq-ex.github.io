{"version":3,"sources":["../node_modules/milagro-crypto-js/src sync /^/.//.*$","components/input/index.js","config.js","utils/common.js","components/header/index.js","components/modal/index.js","utils/request.js","utils/token.js","utils/errorHandle.js","utils/constants.js","pages/transaction/index.js","components/tokenInput/index.js","hooks/usePair.js","utils/swap.js","pages/swap/index.js","pages/pool/index.js","pages/pool/addLiquidity/index.js","pages/pool/removeLiquidity/index.js","pages/staking/index.js","pages/staking/detail/index.js","pages/token/index.js","pages/governance/index.js","hooks/useToken.js","App.js","reducers/modal.js","reducers/wallet.js","reducers/common.js","reducers/gov.js","reducers/swap.js","reducers/index.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Input","props","value","cls","disabled","round","decimals","inline","onChange","useState","val","setVal","useEffect","placeholder","handleInput","formattedValue","v","RegExp","test","formatter","target","className","type","onInput","NETWORK_TYPE","GOVERNANCE_ADDRESS","TRANSACTION_BASE_URL","TRANSACTION_AFTERFIX","READY_TABS","toLocaleFixed","num","n","priceNum","parseFloat","Math","toFixed","toString","indexOf","replace","$0","$1","formatAccount","account","substr","Header","showProfilePanel","setShowProfilePanel","useMappedState","state","wallet","slippage","showSiteIntro","setShowSiteIntro","dispatch","useDispatch","setSlippage","useCallback","toggleShowSiteIntro","show","href","window","location","origin","pathname","onClick","rel","renderSiteIntro","to","onConnectWallet","Number","amount","onSignOut","InfoModal","onCloseModal","text","extraLink","extraText","Modal","infoModal","modal","setModal","modalType","modalDetail","modals","push","assign","buildModals","instance","axios","create","baseURL","timeout","headers","interceptors","response","use","data","error","Promise","reject","reverseHex","utils","getTokenBalance","token","cb","name","param","scriptHash","address","operation","args","invokeMethod","client","api","smartContract","invokeRead","ty","invokeWasmRead","then","bl","parseInt","request","method","url","resp","targetToken","result","find","t","asset_name","toLowerCase","balance","catch","console","log","getTokenIconDom","split","slice","tokenName","handleError","callback","json","JSON","parse","Result","PRICE_DECIMALS","StringReader","Transaction","pairNameKeyword","setPairNameKeyword","pairs","setPairs","tokenPair","setTokenPair","showPairSelectModal","setShowPairSelectModal","tradeType","setTradeType","tokenBalance","setTokenBalance","makes","setMakes","myMakes","setMyMakes","makeView","setMakeView","price","setPrice","setAmount","total","setTotal","pool","setPool","lastPrice","setLastPrice","feeRate","setFeeRate","isValid","setIsValid","stopInterval","common","tokens","CONTRACT_ADDRESS","gov","poolStat","pools","dex","setStopInterval","Alert","useAlert","urlPairName","decodeURIComponent","hash","reg","match","getHashString","getMakes","curMakes","filter","m","asset_token_id","price_token_id","BigNumber","div","pow","onUnmake","make_id","times","a","assetToken","priceToken","tradePrice","tradeAmount","integerValue","ROUND_DOWN","invokeWasm","gasPrice","gasLimit","requireIdentity","makeResult","transaction","makeId","unmakeResult","getPriceHint","getAmountHint","length","p","getMakesOfPair","makeStr","parsedMakes","strReader","pairLastPrice","readUint128","j","makeCount","readNextLen","i","make","errorCode","interval","setInterval","clearInterval","getUserMakes","hexToAddress","read","getStat","statStr","tokenPool","tokenCount","tempToken","tokenPairs","onMake","toUpperCase","tp","generateTokenPool","nameLC","reduce","b","TokenInput","defaultTokenId","inputDisabled","showBalance","withMax","onTokenChange","onAmountChange","balanceChange","setToken","setBalance","label","defaultId","defaultToken","defaultValue","options","isSearchable","components","Option","SingleValue","children","newToken","handleTokenChange","theme","borderRadius","colors","primary","renderTokenSeletion","isNaN","useFetchPairs","swapTokens","swap","SWAP_ADDRESS","setSwapTokens","getSwapStat","pairStr","parsedPairs","pairCount","pair","token1","token2","reserve1","reserve2","lp","tokenIds","tk","REST","findAllPaths","sourceId","targetId","pathArr","findPath","pathNodes","neighborNodes","includes","sort","p1","p2","getInputAmount","output","reverse","ceil","getOutputAmount","input","floor","findNextOutput","findPrevInput","bestSwap","paths","originAmount","maxOutput","minInput","Infinity","path","Swap","swapType","setSwapType","setToken1","setToken2","token1Amount","setToken1Amount","token2Amount","setToken2Amount","isValidPair","setIsValidPair","isValidSwap","setIsValidSwap","bestPath","setBestPath","showPrice","setShowPrice","setBalanceChange","history","useHistory","swapResult","validPair","onChangeToken1","inputAmount","onToken1AmountChange","onChangeToken2","outputAmount","onToken2AmountChange","handleSwap","abs","getPriceImpact","items","index","getBestPath","Pool","liquidityBalance","setLiquidityBalance","all","lb","pairId","shareOfPool","sqrt","onRemoveLiquidity","AddLiquidity","isFirstProvider","setIsFirstProvider","showPriceInfo","setShowPriceInfo","getPairByToken","getPairPrice","ROUND_UP","addResult","goBack","amountProduct","getShareOfPool","onAdd","RemoveLiquidity","setPair","useLocation","getLiquidityBalanceByPairId","onRemove","Staking","stakingTokens","setStakingTokens","STAKING_ADDRESS","staking","getStakingTokenBalance","parsedTokens","weight","totalWeight","filteredTokens","originWeight","getTip","startsWith","placement","overlay","onSelectToken","generateStakingPool","StakingDetail","stakeToken","setStakeToken","myStake","setMyStake","stakeType","setStakeType","claimableWing","setClaimableWing","showStakingModal","setShowStakingModal","tokenId","getAccountStake","stakeStr","interest","stake","handleStakeClick","action","stakeResult","harvestResult","sToken","getClaimableWing","onHarvest","onStake","Token","Governance","distributionInfo","period","width","height","viewBox","role","cx","cy","r","fill","stroke","stroke-width","stroke-dasharray","stroke-dashoffset","style","background","hexstr2str","App","loadingToken","setAccount","provider","getProvider","network","getNetwork","asset","getAccount","accountAddress","localStorage","setItem","setLoadingToken","setTokens","setPoolStat","getGovStat","startTimeStamp","settledTimeStamp","poolCount","nameLength","upgrade","readBoolean","readUint8","useFetchTokens","exact","initState","getItem","reducers","combineReducers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","Ontology","registerClient","position","positions","TOP_CENTER","ReactDOM","render","template","AlertTemplate","Provider","document","getElementById"],"mappings":"yXAAA,IAAIA,EAAM,CACT,QAAS,IACT,WAAY,IACZ,QAAS,IACT,WAAY,IACZ,QAAS,IACT,WAAY,IACZ,SAAU,IACV,YAAa,IACb,QAAS,IACT,WAAY,IACZ,SAAU,IACV,YAAa,IACb,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,SAAU,IACV,YAAa,IACb,QAAS,IACT,WAAY,IACZ,QAAS,IACT,WAAY,IACZ,QAAS,IACT,WAAY,IACZ,YAAa,IACb,eAAgB,IAChB,YAAa,IACb,eAAgB,IAChB,YAAa,IACb,eAAgB,IAChB,SAAU,IACV,YAAa,IACb,YAAa,IACb,eAAgB,IAChB,QAAS,IACT,WAAY,IACZ,SAAU,IACV,YAAa,IACb,SAAU,IACV,YAAa,IACb,cAAe,IACf,iBAAkB,IAClB,cAAe,IACf,iBAAkB,IAClB,QAAS,IACT,WAAY,IACZ,SAAU,IACV,YAAa,IACb,WAAY,IACZ,cAAe,KAIhB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,8cCXLY,EA1DD,SAACC,GAAW,IAAD,EAC8DA,EAA7EC,aADe,MACP,GADO,IAC8DD,EAAjEE,WADG,MACG,GADH,EACcC,GAAgDH,EAAvDI,MAAuDJ,EAAhDG,UAAUE,EAAsCL,EAAtCK,SADxB,EAC8DL,EAA5BM,cADlC,SACiDC,EAAaP,EAAbO,SADjD,EAEDC,mBAAS,IAFR,mBAEhBC,EAFgB,KAEXC,EAFW,KAIvBC,qBAAU,WACRD,EAAOT,KAYN,CAACA,IAEJ,IAAMW,EAAcP,EAAW,EAAI,MAAQ,IAerCQ,EAAc,SAACtB,GACnB,IAAMuB,EAfU,SAACC,GAAqB,IAAlBV,EAAiB,uDAAN,EAC/B,MAAU,KAANU,GAAkB,MAANA,IAGDV,EAAW,EAAK,IAAIW,OAAJ,uCACKX,EADL,gCACqCA,EADrC,UAEzB,IAAIW,OAAO,iBACPC,KAAKF,GALNA,EAQEN,EAKYS,CAAU3B,EAAE4B,OAAOlB,MAAOI,GAEjDK,EAAOI,GACa,oBAAbP,GAA2BA,EAASO,IAO7C,OACE,uBACEM,UAAS,gBAAWd,EAAS,eAAiB,GAArC,YAA2CJ,GACpDmB,KAAK,OACLT,YAAaA,EACbX,MAAOQ,EACPN,SAAUA,EACVmB,QAAS,SAAC/B,GAAD,OAAOsB,EAAYtB,OCtDrBgC,EAAe,OACfC,EAAqB,2CAErBC,EAAuB,uCACvBC,EAAuB,WACvBC,EAAa,CAAC,IAAK,QAAS,SAAU,eCiB5C,SAASC,EAAcC,GAAa,IAARC,EAAO,uDAAH,EAC/BC,EAAWC,WAAiB,IAANF,EAAUG,KAAK7B,MAAMyB,GAAKK,QAAQJ,GAAKE,WAAWH,GAAKK,QAAQJ,IAAIK,WAC/F,OAAOJ,KAAwC,IAA3BA,EAASK,QAAQ,KAAcL,EAASM,QAAQ,uBAAuB,SAACC,EAAIC,GAAL,gBAAeA,EAAf,QAAwBR,EAASM,QAAQ,mBAAoB,MAGnJ,IAAMG,EAAgB,WAAmB,IAAlBC,EAAiB,uDAAP,GACtC,MAAM,GAAN,OAAUA,EAAQC,OAAO,EAAG,GAA5B,cAAoCD,EAAQC,QAAQ,KCoEvCC,G,OAxFA,SAAC3C,GAAW,IAAD,EACwBQ,oBAAS,GADjC,mBACjBoC,EADiB,KACCC,EADD,OAEMC,aAAe,SAACC,GAAD,MAAY,CACvDN,QAASM,EAAMC,OAAOP,QACtBQ,SAAUF,EAAMC,OAAOC,aAFjBR,EAFgB,EAEhBA,QAASQ,EAFO,EAEPA,SAFO,EAMkBzC,oBAAS,GAN3B,mBAMjB0C,EANiB,KAMFC,EANE,KAOlBC,EAAWC,cACXC,EAAcC,uBAAY,SAACN,GAAD,OAAcG,EAAS,CAAE/B,KAAM,eAAgB4B,eAAa,IACtFO,EAAsB,SAACC,GAC3BN,EAAiBM,IAkCnB,OACE,sBAAKrC,UAAU,iBAAf,UAhCsB,WACtB,GAAI8B,EAAe,CACjB,IAAMQ,EAAI,UAAMC,OAAOC,SAASC,QAAtB,OAA+BF,OAAOC,SAASE,SAA/C,2BACV,OACE,qBAAK1C,UAAU,gBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,YAAY2C,QAAS,kBAAMP,GAAoB,MAC9D,mBAAGpC,UAAU,aAAb,0FACA,oBAAGA,UAAU,aAAb,gDAA6D,mBAAGD,OAAO,SAAS6C,IAAI,aAAaN,KAAK,4CAAzC,qBAC7D,mBAAGtC,UAAU,aAAb,0IACA,oBAAGA,UAAU,aAAb,8DAA2E,mBAAGD,OAAO,SAAS6C,IAAI,aAAaN,KAAMA,EAA1C,0BAKnF,OAAO,KAkBJO,GACD,qBAAK7C,UAAU,SAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,eAAf,oBAEE,qBAAKA,UAAU,aAAa2C,QAAS,kBAAMP,GAAoB,SAEjE,sBAAKpC,UAAU,WAAf,UACIO,EAAWS,QAAQ,MAAQ,EAAI,qBAAKhB,UAAU,WAAf,SAA0B,cAAC,IAAD,CAAM8C,GAAG,IAAT,uBAAoC,KAC7FvC,EAAWS,QAAQ,UAAY,EAAI,qBAAKhB,UAAU,WAAf,SAA0B,cAAC,IAAD,CAAM8C,GAAG,QAAT,oBAAqC,KAClGvC,EAAWS,QAAQ,WAAa,EAAI,qBAAKhB,UAAU,WAAf,SAA0B,cAAC,IAAD,CAAM8C,GAAG,SAAT,qBAAuC,KACrGvC,EAAWS,QAAQ,gBAAkB,EAAI,qBAAKhB,UAAU,WAAf,SAA0B,cAAC,IAAD,CAAM8C,GAAG,cAAT,0BAAiD,KACpHvC,EAAWS,QAAQ,WAAa,EAAI,qBAAKhB,UAAU,WAAf,SAA0B,cAAC,IAAD,CAAM8C,GAAG,SAAT,qBAAuC,QAEzG,sBAAK9C,UAAS,UAAKqB,EAAU,SAAW,GAA1B,oBAAd,WACKA,GAAW,sBAAMrB,UAAU,cAAc2C,QAAS,WAxB5B,oBAA1B/D,EAAMmE,iBAAkCnE,EAAMmE,mBAwB/B,4BACZ1B,GAAW,sBAAMrB,UAAU,kBAAkB2C,QAAS,WArBhElB,GAAqBD,IAqBA,SAAwEJ,EAAcC,KAEjGG,EACE,sBAAKxB,UAAU,gBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,wBAAf,sBACA,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAS,wBAAwC,KAArBgD,OAAOnB,GAAoB,WAAa,IAAMc,QAAS,kBAAMT,EAAY,QAA1G,kBACA,qBAAKlC,UAAS,wBAAwC,KAArBgD,OAAOnB,GAAoB,WAAa,IAAMc,QAAS,kBAAMT,EAAY,QAA1G,kBACA,qBAAKlC,UAAS,wBAAwC,IAArBgD,OAAOnB,GAAkB,WAAa,IAAMc,QAAS,kBAAMT,EAAY,QAAxG,kBACA,sBAAKlC,UAAU,yBAAf,UACE,cAAC,EAAD,CAAOnB,MAAOgD,EAAU/C,IAAI,iBAAiBG,SAAS,IAAIO,YAAaqC,EAAU1C,SAAU,SAAC8D,GAAD,OAAYf,EAAYe,MADrH,aAKJ,qBAAKjD,UAAU,cAAc2C,QAAS,kBA7CpDlB,GAAoB,QACO,oBAApB7C,EAAMsE,WAA4BtE,EAAMsE,cA4CjC,yBAEA,kBCnFZC,G,OAAY,SAACvE,GACjB,OACE,qBAAKoB,UAAU,gBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,YAAY2C,QAAS,kBAAM/D,EAAMwE,kBAChD,qBAAKpD,UAAS,qBAAgBpB,EAAMqB,KAAtB,iBACd,qBAAKD,UAAS,qBAAgBpB,EAAMqB,KAAtB,eAAd,SAAwDrB,EAAMyE,OAC9D,qBAAKrD,UAAU,mBAAf,SAEEpB,EAAM0E,UACJ,mBAAGtD,UAAU,mBAAmBD,OAAO,SAAS6C,IAAI,aAAaN,KAAM1D,EAAM0E,UAA7E,SAAyF1E,EAAM2E,YAC7F3E,EAAM2E,mBAkCLC,EA1BD,SAAC5E,GAAW,IAChB6E,EAAc/B,aAAe,SAACC,GAAD,MAAY,CAC/C8B,UAAW9B,EAAM+B,MAAMD,cADjBA,UAGFzB,EAAWC,cACX0B,EAAWxB,uBAAY,SAACyB,EAAWC,GAAZ,OAA4B7B,EAAS,CAAE/B,KAAM,YAAa2D,YAAWC,kBAAgB,IAclH,OACE,qBAAK7D,UAAU,kBAAf,SATkB,WAClB,IAAM8D,EAAS,GAIf,OAHIL,EAAUpB,MACZyB,EAAOC,KAAK,cAAC,EAAD,2BAAeN,GAAf,IAA0BL,aAAc,WANtDO,EAAS,YAAapF,OAAOyF,OAAO,GAAIP,EAAW,CAAEpB,MAAM,UAQpDyB,EAKJG,M,iCCzCDC,E,OAAWC,EAAMC,OAAO,CAC5BC,QJF0B,iCIG1BC,QAAS,IACTC,QAAS,CAAE,eAAgB,sBAG7BL,EAASM,aAAaC,SAASC,KAC7B,SAACD,GAEC,OADYA,EAASE,QAGvB,SAACC,GACC,OAAOC,QAAQC,OAAOF,MAIXV,QCfPa,EAAeC,QAAfD,WAEKE,EAAkB,SAAC5D,EAAS6D,EAAOC,GAE9C,GAAmB,QAAfD,EAAME,MAAiC,QAAfF,EAAME,KAAgB,CAChD,IAAMC,EAAQ,CACZC,WAAYJ,EAAMK,QAClBC,UAAW,YACXC,KAAM,CACJ,CACExF,KAAM,UACNpB,MAAOwC,KAITqE,EAAeC,SAAOC,IAAIC,cAAcC,WAE3B,IAAbZ,EAAMa,IAAyB,IAAbb,EAAMa,KAC1BL,EAAeC,SAAOC,IAAIC,cAAcG,gBAE1CN,EAAaL,GAAOY,MAAK,SAACC,GACpBA,GACFf,EAAGgB,SAASpB,EAAWmB,GAAK,IAAzB,SAAgC,GAAMhB,EAAMjG,mBAInDmH,EAAQ,CACNC,OAAQ,MACRC,IAAI,iBAAD,OAAmBjF,EAAnB,sBACF4E,MAAK,SAACM,GACP,GAAkB,IAAdA,EAAKlI,KAAY,CACnB,IAAMmI,EAAcD,EAAKE,OAAOC,MAAK,SAACC,GAAD,OAAOA,EAAEC,aAAe1B,EAAME,KAAKyB,iBACxE1B,EAAGqB,EAAYM,aAGlBC,OAAM,SAAC5I,GACN6I,QAAQC,IAAI9I,OAKL+I,EAAkB,SAAChC,GAAqB,IAAdpG,EAAa,uDAAP,GAC3C,OAAIoG,EAAMnH,GAEN,qBAAKiC,UAAS,6BAAwBlB,GAAtC,SAEiB,IAAboG,EAAMa,GACFb,EAAME,KAAK+B,MAAM,KAAKC,MAAM,GAAGxJ,KAAI,SAACyJ,GAAD,OAAgB,qBAAwCrH,UAAS,gDAA2CqH,IAA5F,UAAanC,EAAME,KAAnB,YAA2BiC,OAC7E,qBAAKrH,UAAS,+BAA0BkF,EAAME,UAKpD,MCzDIkC,EAAc,SAACnJ,GAA4B,IAAzBoJ,EAAwB,uDAAb,aACxC,IACE,IAAMC,EAAOC,KAAKC,MAAMvJ,GACJ,iCAAhBqJ,EAAKG,QACPJ,EAAS,0BAEX,MAAM3C,MCNGgD,EAAc,SAAG,GAAM,GCc5BC,G,OAAiB7C,QAAjB6C,cA4iBOC,EA1iBK,WAAO,IAAD,EACsB1I,mBAAS,IAD/B,mBACjB2I,EADiB,KACAC,EADA,OAEE5I,mBAAS,IAFX,mBAEjB6I,EAFiB,KAEVC,EAFU,OAGU9I,mBAAS,IAHnB,mBAGjB+I,EAHiB,KAGNC,EAHM,OAI8BhJ,oBAAS,GAJvC,mBAIjBiJ,EAJiB,KAIIC,EAJJ,OAKUlJ,mBAAS,OALnB,mBAKjBmJ,EALiB,KAKNC,EALM,OAMgBpJ,mBAAS,KANzB,mBAMjBqJ,EANiB,KAMHC,EANG,OAOEtJ,mBAAS,IAPX,mBAOjBuJ,EAPiB,KAOVC,EAPU,OAQMxJ,mBAAS,IARf,mBAQjByJ,EARiB,KAQRC,EARQ,OASQ1J,mBAAS,OATjB,mBASjB2J,EATiB,KASPC,EATO,OAUE5J,mBAAS,IAVX,mBAUjB6J,GAViB,KAUVC,GAVU,QAWI9J,mBAAS,IAXb,qBAWjB6D,GAXiB,MAWTkG,GAXS,SAYE/J,mBAAS,IAZX,qBAYjBgK,GAZiB,MAYVC,GAZU,SAaAjK,mBAAS,IAbT,qBAajBkK,GAbiB,MAaXC,GAbW,SAcUnK,mBAAS,GAdnB,qBAcjBoK,GAdiB,MAcNC,GAdM,SAeMrK,mBAAS,GAff,qBAejBsK,GAfiB,MAeRC,GAfQ,SAgBMvK,oBAAS,GAhBf,qBAgBjBwK,GAhBiB,MAgBRC,GAhBQ,SAiBoCnI,aAAe,SAACC,GAAD,MAAY,CACrFN,QAASM,EAAMC,OAAOP,QACtByI,aAAcnI,EAAMoI,OAAOD,aAC3BE,OAAQrI,EAAMoI,OAAOC,OACrBC,iBAAkBtI,EAAMuI,IAAIC,SAASC,MAAMC,IAAI9E,YAJzClE,GAjBgB,GAiBhBA,QAASyI,GAjBO,GAiBPA,aAAcE,GAjBP,GAiBOA,OAAQC,GAjBf,GAiBeA,iBAMjCjI,GAAWC,cACX0B,GAAWxB,uBAAY,SAACyB,EAAWC,GAAZ,OAA4B7B,GAAS,CAAE/B,KAAM,YAAa2D,YAAWC,kBAAgB,IAC5GyG,GAAkBnI,uBAAY,SAAC2H,GAAD,OAAkB9H,GAAS,CAAE/B,KAAM,oBAAqB6J,mBAAiB,IAEvGS,GAAQC,cAERC,GAAcC,mBPlCO,SAACC,EAAMvF,GAClC,IAAMwF,EAAM,IAAIhL,OAAJ,qBAAyBwF,EAAzB,iBAA8C,KACpDvG,EAAQ8L,EAAKrJ,OAAO,GAAGuJ,MAAMD,GAEnC,OAAa,MAAT/L,EACMA,EAAM,GAGT,KO0BgCiM,CAAcvI,OAAOC,SAASmI,KAAM,SAAW,IAkOtF,SAASI,GAAS9K,GAChB,GAAIkI,EAAU/C,KAAM,CAClB,IAAM4F,EAAyB,OAAbjC,EAAoBF,EAAUF,EAChD,MAAa,SAAT1I,EACK+K,EAASC,QAAO,SAACC,GAAD,OAAOA,EAAEC,iBAAmBhD,EAAU6B,OAAO,GAAGjM,IAAMmN,EAAEE,iBAAmBjD,EAAU6B,OAAO,GAAGjM,MAAIH,KAAI,SAACsN,GAC7H,OACE,sBAAqBlL,UAAU,uBAA/B,UACE,qBAAKA,UAAU,6BAAf,SAA6CkL,EAAEjC,MAAQrB,IACvD,qBAAK5H,UAAU,mBAAf,SAAmC,IAAIqL,IAAUH,EAAEjI,QAAQqI,IAAIzK,KAAK0K,IAAI,GAAIpD,EAAU6B,OAAO,GAAG/K,WAAW8B,aAC5F,OAAbgI,GAAqB,qBAAK/I,UAAU,aAAa2C,QAAS,kBAAM6I,GAASN,EAAEO,UAAtD,sBAHfP,EAAEO,YAOTT,EAASC,QAAO,SAACC,GAAD,OAAOA,EAAEC,iBAAmBhD,EAAU6B,OAAO,GAAGjM,IAAMmN,EAAEE,iBAAmBjD,EAAU6B,OAAO,GAAGjM,MAAIH,KAAI,SAACsN,GAC7H,OACE,sBAAqBlL,UAAU,eAA/B,UACE,qBAAKA,UAAU,4BAAf,SAA4C4H,EAAiBsD,EAAEjC,QAC/D,qBAAKjJ,UAAU,mBAAf,SAAmC,IAAIqL,IAAUH,EAAEjI,QAAQyI,MAAMR,EAAEjC,OAAOqC,IAAI1D,GAAgB0D,IAAIzK,KAAK0K,IAAI,GAAIpD,EAAU6B,OAAO,GAAG/K,WAAW8B,aAC/H,OAAbgI,GAAqB,qBAAK/I,UAAU,aAAa2C,QAAS,kBAAM6I,GAASN,EAAEO,UAAtD,sBAHfP,EAAEO,YAQpB,OAAO,KAtRe,8CA2RxB,sCAAAE,EAAA,yDACOtK,GADP,uBAEIkJ,GAAMlI,KAAK,+BAFf,8BAKM8F,EAAU/C,OAAQ6E,GALxB,sBAMQhB,IAAS,GANjB,uBAOMsB,GAAM3F,MAAM,kCAPlB,+BAUQ3B,IAAU,GAVlB,wBAWMsH,GAAM3F,MAAM,mCAXlB,4CAeYgH,EAA2B,QAAdrD,EAAsBJ,EAAU6B,OAAO,GAAK7B,EAAU6B,OAAO,GAC1E6B,EAA2B,QAAdtD,EAAsBJ,EAAU6B,OAAO,GAAK7B,EAAU6B,OAAO,GAC1E8B,EAA2B,QAAdvD,EAAsB,EAAIU,GAAQA,GAC/C8C,EAA4B,QAAdxD,EAAsBa,GAAQnG,GAC5CwC,EAAO,CACX,CACExF,KAAM,UACNpB,MAAOwC,IAET,CACEpB,KAAM,OACNpB,MAAO+M,EAAW7N,IAEpB,CACEkC,KAAM,OACNpB,MAAOgN,EAAW9N,IAEpB,CACEkC,KAAM,OACNpB,MAAO,IAAIwM,IAAUS,GAAYJ,MAAM9D,GAAgBoE,aAAaX,IAAUY,YAAYlL,YAE5F,CACEd,KAAM,OACNpB,MAAO,IAAIwM,IAAUU,GAAaL,MAAM,IAAIL,IAAJ,SAAc,GAAMO,EAAW3M,YAAW+M,aAAaX,IAAUY,YAAYlL,aAtC/H,UAyC+B4E,SAAOC,IAAIC,cAAcqG,WAAW,CAC3D5G,WAAY2E,GACZzE,UAAW,OACXC,OACA0G,SAAU,KACVC,SAAU,IACVC,iBAAiB,IA/CzB,SAyCYC,EAzCZ,QAkDqBC,cACbpD,GAAU,IACVD,GAAS,IACTG,GAAS,IACT1F,GAAS,YAAa,CACpBtB,MAAM,EACNpC,KAAM,UACNoD,KAAM,yBACNE,UAAW,mBACXD,UAAU,GAAD,OAAKjD,GAAL,OAA4BiM,EAAWC,aAAvC,OAAqDjM,MA3DxE,mDA+DMqD,GAAS,YAAa,CACpBtB,MAAM,EACNpC,KAAM,QACNoD,KAAM,qBAENE,UAAW,GACXD,UAAW,KArEnB,4DA3RwB,+BAsWTkI,GAtWS,iFAsWxB,WAAwBgB,GAAxB,eAAAb,EAAA,2DACMtK,IAAWmL,GAAUvC,IAD3B,0CAGiCtE,SAAOC,IAAIC,cAAcqG,WAAW,CAC7D5G,WAAY2E,GACZzE,UAAW,SACXC,KAAM,CACJ,CACExF,KAAM,UACNpB,MAAOwC,IAET,CACEpB,KAAM,OACNpB,MAAO2N,IAGXL,SAAU,KACVC,SAAU,IACVC,iBAAiB,IAlBzB,QAGYI,EAHZ,QAoBuBF,aACf5I,GAAS,YAAa,CACpBtB,MAAM,EACNpC,KAAM,UACNoD,KAAM,yBACNE,UAAW,mBACXD,UAAU,GAAD,OAAKjD,GAAL,OAA4BoM,EAAaF,aAAzC,OAAuDjM,KA1B1E,gDA8BMqD,GAAS,YAAa,CACpBtB,MAAM,EACNpC,KAAM,QACNoD,KAAM,qBAENE,UAAW,GACXD,UAAW,KApCnB,0DAtWwB,sBAgZxB,SAASoJ,KACP,GAAIvE,EAAU/C,KACZ,OAAO+C,EAAU6B,OAAO,GAAG5E,KAI/B,SAASuH,KACP,GAAIxE,EAAU/C,KACZ,OAAO+C,EAAU6B,OAAO,GAAG5E,KAzX/B7F,qBAAU,WACJ0I,EAAM2E,QACRxE,EAAaH,EAAMvB,MAAK,SAACmG,GAAD,OAAOA,EAAEzH,OAAF,UAAcqF,QAAkBxC,EAAM,MAEtE,CAACA,IAEJ1I,qBAAU,WACJ8B,IAAW8G,EAAU/C,OACvBsD,EAAgB,KAChBzD,EAAgB5D,GAAuB,QAAdkH,EAAsBJ,EAAU6B,OAAO,GAAK7B,EAAU6B,OAAO,IAAI,SAAC9D,GACzFwC,EAAgBxC,SAGnB,CAAC7E,GAAS8G,EAAWI,IAExBhJ,qBAAU,WACR,SAASuN,IACP,GAAI3E,EAAU/C,MAAQ6E,GACpB,IACEtE,SAAOC,IAAIC,cAAcG,eAAe,CACtCV,WAAY2E,GACZzE,UAAW,oBACXC,KAAM,CACJ,CACExF,KAAM,OACNpB,MAAOsJ,EAAU6B,OAAO,GAAGjM,IAE7B,CACEkC,KAAM,OACNpB,MAAOsJ,EAAU6B,OAAO,GAAGjM,OAIhCkI,MAAK,SAAC8G,GAKL,IAJA,IAAMC,EAAc,GACdC,EAAY,IAAIpF,EAAakF,GAC7BG,EAAgBD,EAAUE,cAEvBC,EAAI,EAAGA,GAAK,EAAGA,IAEtB,IADA,IAAMC,EAAYJ,EAAUK,cACnBC,EAAI,EAAGA,EAAIF,EAAWE,IAAK,CAClC,IAAMC,EAAO,GACbA,EAAK/B,QAAUwB,EAAUE,cACzBK,EAAKvE,MAAQgE,EAAUE,cACvBK,EAAKvK,OAAS,IAAIoI,IAAU4B,EAAUE,eAAepM,WACrDyM,EAAKrC,eAAwB,IAANiC,EAAUjF,EAAU6B,OAAO,GAAGjM,GAAKoK,EAAU6B,OAAO,GAAGjM,GAC9EyP,EAAKpC,eAAwB,IAANgC,EAAUjF,EAAU6B,OAAO,GAAGjM,GAAKoK,EAAU6B,OAAO,GAAGjM,GAE9EiP,EAAYjJ,KAAKyJ,GAIrB/D,GAAayD,EAAgBA,EAAgBtF,EAAiB,GAC9DgB,EAASoE,MAEVjG,OAAM,SAAC5I,GACNmJ,EAAYnJ,GAAG,SAACsP,GACI,2BAAdA,EACFnD,IAAgB,GAEhBtD,QAAQC,IAAI,oBAAqB9I,SAIvC,MAAOA,GACP6I,QAAQC,IAAI9I,IAIlB2O,IACA,IAAMY,GAAY5D,IAAgB6D,YAAYb,EAAgB,KAC9D,OAAO,WACLY,GAAYE,cAAcF,MAE3B,CAACvF,EAAW9G,GAASyI,GAAcG,KAEtC1K,qBAAU,WACR,SAASsO,IACP,GAAIxM,IAAW4I,GACb,IACEtE,SAAOC,IAAIC,cAAcG,eAAe,CACtCV,WAAY2E,GACZzE,UAAW,iBACXC,KAAM,CACJ,CACExF,KAAM,UACNpB,MAAOwC,OAIZ4E,MAAK,SAAC8G,GAIL,IAHA,IAAMC,EAAc,GACdC,EAAY,IAAIpF,EAAakF,GAC7BM,EAAYJ,EAAUK,cACnBC,EAAI,EAAGA,EAAIF,EAAWE,IAAK,CAClC,IAAMC,EAAO,GACbA,EAAKjI,QAAUI,SAAOC,IAAIZ,MAAM8I,aAAab,EAAUc,KAAK,KAC5DP,EAAKrC,eAAiB8B,EAAUE,cAChCK,EAAKpC,eAAiB6B,EAAUE,cAChCK,EAAKvE,MAAQgE,EAAUE,cACvBK,EAAKvK,OAASgK,EAAUE,cACxBK,EAAK/B,QAAUwB,EAAUE,cAEzBH,EAAYjJ,KAAKyJ,GAGnB1E,EAAWkE,MAEZjG,OAAM,SAAC5I,GACNmJ,EAAYnJ,GAAG,SAACsP,GACI,2BAAdA,EACFnD,IAAgB,GAEhBtD,QAAQC,IAAI,iBAAkB9I,SAIpC,MAAOA,GACP6I,QAAQC,IAAI9I,IAKlB0P,IACA,IAAMH,GAAY5D,IAAgB6D,YAAYE,EAAc,KAC5D,OAAO,WACLH,GAAYE,cAAcF,MAE3B,CAACvF,EAAW9G,GAASyI,GAAcG,KAEtC1K,qBAAU,WAAO,SACAyO,IADD,2EACd,4CAAArC,EAAA,0DACM3B,GAAO4C,SAAU3C,GADvB,0CAG4BtE,SAAOC,IAAIC,cAAcG,eAAe,CAC5DV,WAAY2E,GACZzE,UAAW,OACXC,KAAM,KANd,OAcM,IAXMwI,EAHZ,OASYC,EAAY,GACZjB,EAAY,IAAIpF,EAAaoG,GACnCtE,GAAWsD,EAAUE,eACfgB,EAAalB,EAAUK,cAZnC,WAceC,GACP,IAAMrI,EAAQ,GACdA,EAAMnH,GAAKkP,EAAUE,cACrB,IAAMiB,EAAYpE,GAAOtD,MAAK,SAACC,GAAD,OAAOA,EAAE5I,KAAOmH,EAAMnH,MACpDmH,EAAM4B,QAAU,IAAIuE,IAAU4B,EAAUE,eAAe7B,IAAI,IAAID,IAAJ,SAAc,GAAM+C,EAAUnP,YAAW8B,WAEpGmN,EAAUnK,KAAKxF,OAAOyF,OAAOoK,EAAWlJ,KANjCqI,EAAI,EAAGA,EAAIY,EAAYZ,IAAM,IAStC,IAAKtF,EAAM2E,OAAQ,CAEjB,IADMyB,EAAa,GACVd,EAAI,EAAGA,EAAIW,EAAUtB,OAAQW,IACpC,IAASH,EAAIG,EAAI,EAAGH,EAAIc,EAAUtB,OAAQQ,IACxCiB,EAAWtK,KAAK,CACdqB,KAAK,GAAD,OAAK8I,EAAUX,GAAGnI,KAAlB,YAA0B8I,EAAUd,GAAGhI,MAC3C4E,OAAQ,CAACkE,EAAUX,GAAIW,EAAUd,MAKvClF,EAASmG,GAGX9E,GAAQ2E,GArCd,kDAuCM5G,EAAY,EAAD,IAAI,SAACmG,GACI,2BAAdA,EACFnD,IAAgB,GAEhBtD,QAAQC,IAAI,WAAZ,SA3CV,2DADc,sBAmDd+G,IACA,IAAMN,EAAWC,aAAY,WACvB7D,GACF8D,cAAcF,GAEdM,MAED,KACH,OAAO,kBAAMJ,cAAcF,MAC1B,CAAC1D,GAAQ/B,EAAO6B,GAAcG,KAEjC1K,qBAAU,WACJ0J,GAAQ,GAAKhG,GAAS,GACxBoG,GAASJ,GAAQhG,MAElB,CAACgG,GAAOhG,KAEX1D,qBAAU,WACJ0J,GAAQ,GACVE,IAAWC,IAAS,GAAKH,MAE1B,CAACG,KAEJ7J,qBAAU,WACJ4I,EAAU/C,MAAQ6D,GAAQ,GAAKhG,GAAS,EAC1C4G,IAAW,GAEXA,IAAW,KAEZ,CAAC1B,EAAWlF,GAAQgG,KAEvB1J,qBAAU,WACRyJ,EAAY,SACX,CAAC3H,KAyLJ,OACE,sBAAKrB,UAAU,eAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,mBAAf,kBAEImI,EAAU/C,KACR,qBAAKpF,UAAU,oBAAoB2C,QAAS,kBAAM2F,GAAuB,IAAzE,SACE,qBAAKtI,UAAU,kBAAf,SAAkCmI,EAAU/C,SAE5C,QAGR,sBAAKpF,UAAU,oBAAf,UACE,qBAAKA,UAAS,0BAAmC,QAAduI,EAAsB,YAAc,IAAM5F,QAAS,kBAAM6F,EAAa,QAAzG,iBACA,qBAAKxI,UAAS,0BAAmC,SAAduI,EAAuB,aAAe,IAAM5F,QAAS,kBAAM6F,EAAa,SAA3G,qBAEF,sBAAKxI,UAAU,YAAf,UACE,sBAAKA,UAAU,aAAf,kBACE,sBAAMA,UAAU,OAAhB,SAAwB0M,UAE1B,qBAAK1M,UAAU,gBAAf,SACE,cAAC,EAAD,CAAOR,YAAY,MAAMX,MAAOoK,GAAOhK,SAAS,IAAIE,SAAU,SAAC8D,GAAD,OAAYiG,GAASjG,WAGvF,sBAAKjD,UAAU,YAAf,UACE,sBAAKA,UAAU,aAAf,mBACE,sBAAMA,UAAU,OAAhB,SAAwB2M,UAE1B,qBAAK3M,UAAU,gBAAf,SACE,cAAC,EAAD,CAAOR,YAAY,MAAMX,MAAOoE,GAAQhE,SAAUkJ,EAAU6B,OAAS7B,EAAU6B,OAAO,GAAG/K,SAAW,IAAKE,SAAU,SAAC8D,GAAD,OAAYkG,GAAUlG,WAG7I,sBAAKjD,UAAU,YAAf,UACE,sBAAKA,UAAU,aAAf,mBAAiD,QAAduI,EAAsB,OAAS,UAChE,sBAAMvI,UAAU,OAAhB,SAAwB0M,UAE1B,qBAAK1M,UAAU,gBAAf,SACE,cAAC,EAAD,CAAOR,YAAY,MAAMX,MAAOuK,GAAOnK,SAAS,IAAIE,SAAU,SAAC8D,GAAD,OAAYoG,GAASpG,WAGrFkF,EAAU/C,KAAO,sBAAKpF,UAAU,eAAf,sBAAuC,iCAAOyI,EAAP,IAAoC,QAAdF,EAAsBJ,EAAU6B,OAAO,GAAG5E,KAAO+C,EAAU6B,OAAO,GAAG5E,WAAqB,KACxKsE,GAAU,oBAAG1J,UAAU,WAAb,8CAA0D0J,GAAU,IAApE,OAAgF,KAC1FE,GAAU,sBAAK5J,UAAS,4BAAuBuI,GAAa5F,QAAS,kBAzdvD,2CAyd6D2L,IAAjE,UAA4E/F,EAAUgG,cAAtF,IAAsGpG,EAAU6B,OAAO,GAAG5E,QAAc,sBAAKpF,UAAU,oBAAf,UAAoCuI,EAAUgG,cAA9C,IAA8DpG,EAAU6B,OAAS7B,EAAU6B,OAAO,GAAG5E,KAAO,SAElQ,sBAAKpF,UAAU,cAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,cAAf,wBACA,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAwB,QAAb+I,EAAqB,uBAAyB,cAAepG,QAAS,kBAAMqG,EAAY,QAAxG,iBACA,qBAAKhJ,UAAwB,OAAb+I,EAAoB,uBAAyB,cAAepG,QAAS,WAxO3FtB,GACF2H,EAAY,MAEZuB,GAAMlI,KAAK,gCAqOH,sBAGJ,sBAAKrC,UAAU,aAAf,UACE,qBAAKA,UAAU,sBACf,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,YAAf,oBAAmC0M,KAAnC,OACA,sBAAK1M,UAAU,YAAf,qBAAoC2M,KAApC,OACe,OAAb5D,GAAqB,qBAAK/I,UAAU,2BAG1C,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,gBAAf,kBACA,qBAAKA,UAAU,oBAAf,SACC+K,GAAS,aAII,QAAbhC,GAA4C,IAAtB/F,OAAOwG,IAAoB,sBAAKxJ,UAAU,qBAAf,UAChD,qBAAKA,UAAU,mBAAf,wBACA,qBAAKA,UAAU,aAAf,SAA6BwJ,KAC7B,qBAAKxJ,UAAU,8BACR,KAEX,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,gBAAf,iBACA,qBAAKA,UAAU,YAAf,SACC+K,GAAS,kBAKhB,sBAAK/K,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,2BACA,qBAAKA,UAAU,aAAf,SAtGN,WACE,GAAIsJ,GAAKsD,OACP,OAAOtD,GAAK2B,QAAO,SAACuD,GAAD,OAA+B,IAAvBxL,OAAOwL,EAAG1H,YAAgBlJ,KAAI,SAAC4Q,GACxD,OACE,sBAAKxO,UAAU,YAAf,UACE,qBAAKA,UAAS,eAAUwO,EAAGpJ,KAAb,eAAd,SAA+CoJ,EAAGpJ,OAClD,qBAAKpF,UAAU,gBAAf,SAAgCwO,EAAG1H,YAFL0H,EAAGpJ,SAmGpCqJ,QAIDpG,EACE,qBAAKrI,UAAU,gBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,YAAY2C,QAAS,kBAAM2F,GAAuB,MACjE,sBAAKtI,UAAU,4BAAf,UACE,qBAAKA,UAAU,0BAAf,oBACA,uBAAOC,KAAK,OAAOD,UAAU,0BAA0BnB,MAAOkJ,EAAiB7H,QAAS,SAAC/B,GAAD,OAAO6J,EAAmB7J,EAAE4B,OAAOlB,UAC3H,qBAAKmB,UAAU,yBAAf,SAEIiI,EAAMgD,QAAO,SAAC4B,GACZ,IAAM6B,EAAS7B,EAAEzH,KAAKyB,cAGtB,OAFekB,EAAgBZ,MAAM,KAAK8D,QAAO,SAACvK,GAAD,OAAOA,KAE1CiO,QAAO,SAAChD,EAAGiD,GAAJ,OAAUjD,GAAK+C,EAAO1N,QAAQ4N,IAAM,KAAG,MAC3DhR,KAAI,SAACiP,GACN,OACE,sBAAkB7M,UAAU,8BAA8B2C,QAAS,kBA7GvFyF,EA6G6GyE,QA5G7GvE,GAAuB,IA4GH,UAEIuE,EAAE7C,OAAOpM,KAAI,SAAC+I,GAAD,OAAO,qBAAiC3G,UAAS,gDAA2C2G,EAAEvB,OAAvF,UAAayH,EAAEzH,KAAf,YAAuBuB,EAAEvB,UAE/C,qBAAKpF,UAAU,mCAAf,SAAmD6M,EAAEzH,SAJ7CyH,EAAEzH,mBAaxB,S,0BCpdGyJ,G,OAxFI,SAACjQ,GAAW,IACrBC,EAAsJD,EAAtJC,MAAOG,EAA+IJ,EAA/II,MAAOgL,EAAwIpL,EAAxIoL,OAAQ8E,EAAgIlQ,EAAhIkQ,eADF,EACkIlQ,EAAhHmQ,qBADlB,WACkInQ,EAAzFoQ,mBADzC,WACkIpQ,EAArEqQ,eAD7D,SAC6EC,EAAqDtQ,EAArDsQ,cAAeC,EAAsCvQ,EAAtCuQ,eAD5F,EACkIvQ,EAAtBwQ,qBAD5G,MAC4H,EAD5H,IAEFhQ,mBAAS,IAFP,mBAErB8F,EAFqB,KAEdmK,EAFc,OAGEjQ,mBAAS,KAHX,mBAGrB0H,EAHqB,KAGZwI,EAHY,KAIpBjO,EAAYK,aAAe,SAACC,GAAD,MAAY,CAC7CN,QAASM,EAAMC,OAAOP,YADhBA,QAIR9B,qBAAU,WACJ8B,GAAW2N,GAAe9J,EAAMnH,IAClCkH,EAAgB5D,EAAS6D,EAAOoK,KAEjC,CAACpK,EAAO8J,EAAa3N,EAAS+N,IA8DjC,OACE,sBAAKpP,UAAU,sBAAf,UACE,sBAAKA,UAAU,cAAf,UAA8BpB,EAAM2Q,OAAS,QACzCP,EAAc,uBAAMhP,UAAU,OAAhB,sBAAiC8G,KAAkB,QAErE,sBAAK9G,UAAU,gBAAf,UAxDwB,SAACwP,GAC3B,GAAIxF,EAAO4C,OAAQ,CACjB,IAgBI6C,EAAeD,GAAaxF,EAAOtD,MAAK,SAACC,GAAD,OAAOA,EAAE5I,KAAOyR,MAA2BxF,EAAO,GAM9F,OAJK9E,EAAMnH,IACTsR,EAASI,GAIT,cAAC,IAAD,CACEzP,UAAU,eACV0P,aAAcD,EACdE,QAAS3F,EACT4F,cAAc,EACdC,WAAY,CAAEC,OA5BG,SAAClR,GAAD,OACnB,cAAC,IAAWkR,OAAZ,2BAAuBlR,GAAvB,aACE,sBAAKoB,UAAU,iBAAf,UACE,qBAAKA,UAAS,eAAUpB,EAAM2Q,MAAhB,kBACd,qBAAKvP,UAAU,eAAf,SAA+BpB,EAAM2Q,eAwBHQ,YApBpB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAapR,EAAhB,mCAClB,cAAC,IAAWmR,YAAZ,2BAA4BnR,GAA5B,aACE,sBAAKoB,UAAU,iBAAf,UACE,qBAAKA,UAAS,eAAUgQ,EAAV,kBACd,qBAAKhQ,UAAU,eAAf,SAA+BgQ,YAiBjC7Q,SAAU,SAAChB,GAAD,OAxCQ,SAACA,GACzB,GAAIA,EAAEU,QAAUqG,EAAMnH,GAAI,CACxB,IAAMkS,EAAWjG,EAAOiB,QAAO,SAACtE,GAAD,OAAOA,EAAE5I,KAAOI,EAAEU,SAAO,GAExDwQ,EAASY,GACgB,oBAAlBf,GAAgCA,EAAce,IAmChCC,CAAkB/R,IACnCgS,MAAO,SAAAA,GAAK,kCACPA,GADO,IAEVC,aAAc,EACdC,OAAO,2BACFF,EAAME,QADL,IAEJC,QAAS,kBAoBbC,CAAoBzB,GACtB,cAAC,EAAD,CAAO7P,SAAUiG,EAAMjG,SAAUF,SAAUgQ,EAAelQ,MAAOA,EAAOG,MAAOA,EAAOG,SAAU,SAACN,GAAD,OAAWsQ,EAAetQ,MACxHoQ,GAAW,qBAAKjP,UAAU,gBAAgB2C,QAAS,WAbpD6N,MAAM1J,IAAsC,oBAAnBqI,GAC5BA,EAAerI,IAYA,yBCrFbe,EAA6B7C,QAA7B6C,aAAc9C,EAAeC,QAAfD,WAET0L,EAAgB,WAAO,IAAD,EACqB/O,aAAe,SAACC,GAAD,MAAY,CAC/EN,QAASM,EAAMC,OAAOP,QACtB2I,OAAQrI,EAAMoI,OAAOC,OACrB0G,WAAY/O,EAAMgP,KAAK3G,OACvB4G,aAAcjP,EAAMuI,IAAIC,SAASC,MAAMuG,KAAKpL,YAJtClE,EADyB,EACzBA,QAAS2I,EADgB,EAChBA,OAAQ0G,EADQ,EACRA,WAAYE,EADJ,EACIA,aAM/B5O,EAAWC,cACX4O,EAAgB1O,uBAAY,SAAC6H,GAAD,OAAYhI,EAAS,CAAE/B,KAAM,kBAAmB+J,aAAW,IACvF9B,EAAW/F,uBAAY,SAAC8F,GAAD,OAAWjG,EAAS,CAAE/B,KAAM,YAAagI,YAAU,IAUhF,SAAS6I,IACP,GAAIF,EACF,IACEjL,SAAOC,IAAIC,cAAcG,eAAe,CACtCV,WAAYsL,EACZpL,UAAW,OACXC,KAAM,KAEPQ,MAAK,SAAC8K,GAIL,IAHA,IAAMC,EAAc,GACd/D,EAAY,IAAIpF,EAAakJ,GAC7BE,EAAYhE,EAAUK,cACnBC,EAAI,EAAGA,EAAI0D,EAAW1D,IAAK,CAClC,IAAM2D,EAAO,GACbA,EAAK3L,QAAUR,EAAWkI,EAAUc,KAAK,KACzCmD,EAAKC,OAASlE,EAAUE,cACxB+D,EAAKE,OAASnE,EAAUE,cACxB+D,EAAKnT,GAAKkP,EAAUE,cACpB+D,EAAKG,SAAWpE,EAAUE,cAC1B+D,EAAKI,SAAWrE,EAAUE,cAC1B+D,EAAKK,GAAKtE,EAAUE,cAEpB6D,EAAYjN,KAAKmN,GAKnB,IAFA,IAAMM,EAAW,GACXrD,EAAalB,EAAUK,cACpBC,EAAI,EAAGA,EAAIY,EAAYZ,IAC9BiE,EAASzN,KAAKkJ,EAAUE,eAG1BjF,EAAS8I,GACLhH,EAAO4C,SAAW8D,EAAW9D,QAC/BiE,EAAcW,EAAS5T,KAAI,SAAC+I,GAAD,OAAOqD,EAAOtD,MAAK,SAAC+K,GAAD,OAAQA,EAAG1T,KAAO4I,YAGnEI,OAAM,SAAC5I,GACN6I,QAAQC,IAAI9I,MAEd,MAAOA,GACP6I,QAAQC,IAAI9I,IAKlB,OArDAoB,qBAAU,WACRuR,IACA,IAAIpD,EAAWC,YAAYmD,EAAa,KACxC,OAAO,WACLpD,GAAYE,cAAcF,MAE3B,CAACrM,EAAS2I,EAAQ0G,EAAYE,IA+C1B,M,SCvEHc,EAAO,KAEAC,EAAe,SAAC1J,EAAO2J,EAAUC,GAC5C,IAAIC,EAAU,GAgCd,OA/BiB,SAAXC,EAAYH,EAAUC,GAA8B,IAApBG,EAAmB,uDAAP,GAIhD,IAHAA,EAAS,YAAOA,IACNjO,KAAK6N,GAEXA,IAAaC,EAAjB,CAKA,IAAII,EAAgB,GACpBhK,EAAMrK,KAAI,SAACiP,GACLA,EAAEsE,SAAWS,EACfK,EAAclO,KAAK8I,EAAEuE,QACZvE,EAAEuE,SAAWQ,GACtBK,EAAclO,KAAK8I,EAAEsE,WAIzB,cAAec,EAAf,eAA8B,CAAzB,IAAIlU,EAAE,KACJiU,EAAUE,SAASnU,IACtBgU,EAAShU,EAAI8T,EAAUG,SAfzBF,EAAQ/N,KAAKiO,GAoBjBD,CAASH,EAAUC,GAEnBC,EAAQK,MAAK,SAACC,EAAIC,GAChB,OAAOD,EAAGxF,OAASyF,EAAGzF,UAGjBkF,GAGHQ,EAAiB,SAACC,EAAQrB,GAA2B,IACrDjO,EADgCuP,EAAoB,wDAOxD,OAJEvP,EADEuP,GACQtB,EAAKG,SAAWH,EAAKI,UAAYJ,EAAKG,SAAWkB,GAAUrB,EAAKI,UAAYI,GAE5ER,EAAKG,SAAWH,EAAKI,UAAYJ,EAAKI,SAAWiB,GAAUrB,EAAKG,UAAYK,EAEjF7Q,KAAK4R,KAAKxP,IAGbyP,EAAkB,SAACC,EAAOzB,GAA2B,IACrDjO,EADgCuP,EAAoB,wDAOxD,OAJEvP,EADEuP,EACOtB,EAAKG,SAAWH,EAAKG,SAAWH,EAAKI,UAAYJ,EAAKI,SAAWI,EAAOiB,GAExEzB,EAAKI,SAAWJ,EAAKG,SAAWH,EAAKI,UAAYJ,EAAKG,SAAWK,EAAOiB,GAE5E9R,KAAK+R,MAAM3P,IAGd4P,EAAiB,SAACF,EAAO1K,EAAOkJ,EAAQC,GAC5C,IAAIF,EAAOjJ,EAAMvB,MAAK,SAACmG,GAAD,OAAOA,EAAEsE,SAAWA,GAAUtE,EAAEuE,SAAWA,KAEjE,OAAIF,EACKwB,EAAgBC,EAAOzB,IAGhCA,EAAOjJ,EAAMvB,MAAK,SAACmG,GAAD,OAAOA,EAAEsE,SAAWC,GAAUvE,EAAEuE,SAAWD,MAGpDuB,EAAgBC,EAAOzB,GAAM,QADtC,GAKI4B,GAAgB,SAACP,EAAQtK,EAAOkJ,EAAQC,GAC5C,IAAIF,EAAOjJ,EAAMvB,MAAK,SAACmG,GAAD,OAAOA,EAAEsE,SAAWA,GAAUtE,EAAEuE,SAAWA,KAEjE,OAAIF,EACKoB,EAAeC,EAAQrB,IAGhCA,EAAOjJ,EAAMvB,MAAK,SAACmG,GAAD,OAAOA,EAAEsE,SAAWC,GAAUvE,EAAEuE,SAAWD,MAGpDmB,EAAeC,EAAQrB,GAAM,QADtC,GAKW6B,GAAW,WAOtB,IAP4E,IAArD9S,EAAoD,uDAA7C,UAAWgD,EAAkC,uCAA1BgF,EAA0B,uCAAnBkJ,EAAmB,uCAAXC,EAAW,uCACrE4B,EAAQrB,EAAa1J,EAAOkJ,EAAQC,GACpC6B,EAAehQ,EACjBiQ,EAAY,EACZC,EAAWC,IACXC,EAAO,GAEF9F,EAAI,EAAGA,EAAIyF,EAAMpG,OAAQW,IAEhC,GADAtK,EAASgQ,EACI,YAAThT,EAAoB,CACtB,IAAK,IAAImN,EAAI,EAAGA,EAAI4F,EAAMzF,GAAGX,OAAS,EAAGQ,IACvCnK,EAAS4P,EAAe5P,EAAQgF,EAAO+K,EAAMzF,GAAGH,GAAI4F,EAAMzF,GAAGH,EAAI,IAG/DnK,EAASiQ,IACXA,EAAYjQ,EACZoQ,EAAOL,EAAMzF,QAEV,CACL,IAAK,IAAIH,EAAI4F,EAAMzF,GAAGX,OAAS,EAAGQ,EAAI,EAAGA,IACvCnK,EAAS6P,GAAc7P,EAAQgF,EAAO+K,EAAMzF,GAAGH,EAAI,GAAI4F,EAAMzF,GAAGH,IAG9DnK,EAASkQ,GAAYlQ,EAAS,IAChCkQ,EAAWlQ,EACXoQ,EAAOL,EAAMzF,IAKnB,MAAa,YAATtN,EACK,CAACiT,EAAWG,GACD,aAATpT,EACF,CAACkT,EAAUE,QADb,GC+KMC,I,OAxRF,WAAO,IAAD,EACelU,mBAAS,WADxB,mBACVmU,EADU,KACAC,EADA,OAEWpU,mBAAS,IAFpB,mBAEV+R,EAFU,KAEFsC,EAFE,OAGWrU,mBAAS,IAHpB,mBAGVgS,EAHU,KAGFsC,EAHE,OAIuBtU,mBAAS,IAJhC,mBAIVuU,EAJU,KAIIC,EAJJ,OAKuBxU,mBAAS,IALhC,mBAKVyU,EALU,KAKIC,EALJ,OAMqB1U,oBAAS,GAN9B,mBAMV2U,EANU,KAMGC,EANH,OAOqB5U,oBAAS,GAP9B,mBAOV6U,EAPU,KAOGC,EAPH,OAQe9U,mBAAS,IARxB,mBAQV+U,EARU,KAQAC,EARA,OASiBhV,oBAAS,GAT1B,mBASViV,EATU,KASCC,EATD,OAUyBlV,mBAAS,GAVlC,mBAUVgQ,EAVU,KAUKmF,GAVL,QAW8C7S,aAAe,SAACC,GAAD,MAAY,CACxFN,QAASM,EAAMC,OAAOP,QACtBQ,SAAUF,EAAMC,OAAOC,SACvBoG,MAAOtG,EAAMgP,KAAK1I,MAClByI,WAAY/O,EAAMgP,KAAK3G,OACvB4G,aAAcjP,EAAMuI,IAAIC,SAASC,MAAMuG,KAAKpL,YALtClE,GAXS,GAWTA,QAASQ,GAXA,GAWAA,SAAUoG,GAXV,GAWUA,MAAOyI,GAXjB,GAWiBA,WAAYE,GAX7B,GAW6BA,aAOxC5O,GAAWC,cACX0B,GAAWxB,uBAAY,SAACyB,EAAWC,GAAZ,OAA4B7B,GAAS,CAAE/B,KAAM,YAAa2D,YAAWC,kBAAgB,IAC5G0G,GAAQC,cACRgK,GAAUC,cArBC,8CAmHjB,8BAAA9I,EAAA,yDACOtK,GADP,uBAEIkJ,GAAMlI,KAAK,+BAFf,+BAKMsR,GAAgB,GAAKE,GAAgB,GAL3C,uBAMItJ,GAAM3F,MAAM,mCANhB,8BASMuM,EAAOpT,IAAMoT,EAAOpT,KAAOqT,EAAOrT,GATxC,uBAUIwM,GAAM3F,MAAM,6BAVhB,8BAcMgM,GAdN,kCAgBYnL,EAAO,CACX,CACExF,KAAM,UACNpB,MAAOwC,IAET,CACEpB,KAAM,OACNpB,MAAO,IAAIwM,IAAUsI,GAAcjI,MAAM,IAAIL,IAAJ,SAAc,GAAM8F,EAAOlS,YAAW+M,aAAaX,IAAUY,YAAYlL,YAEpH,CACEd,KAAM,OACNpB,MAAO,IAAIwM,IAAUwI,GAAcnI,MAAM,IAAIL,IAAJ,SAAc,GAAM+F,EAAOnS,YAAW+M,aAAaX,IAAUY,YAAYlL,YAEpH,CACEd,KAAM,QACNpB,MAAOsV,EAASvW,KAAI,SAACiP,GAAD,MAAQ,CAAE5M,KAAM,OAAQpB,MAAOgO,OAErD,CACE5M,KAAM,UACNpB,MAAOwC,KAnCjB,UAsC+BsE,SAAOC,IAAIC,cAAcqG,WAAW,CAC3D5G,WAAYsL,GACZpL,UAAwB,YAAb+N,EAAyB,+BAAiC,+BACrE9N,OACA0G,SAAU,KACVC,SAAU,IACVC,iBAAiB,IA5CzB,SAsCYqI,EAtCZ,QA+CqBnI,cACbgI,GAAiBnF,EAAgB,GACjCwE,EAAgB,IAChBE,EAAgB,IAChBnQ,GAAS,YAAa,CACpBtB,MAAM,EACNpC,KAAM,UACNoD,KAAM,yBACNE,UAAW,mBACXD,UAAU,GAAD,OAAKjD,GAAL,OAA4BqU,EAAWnI,aAAvC,OAAqDjM,MAxDxE,mDA4DMqD,GAAS,YAAa,CACpBtB,MAAM,EACNpC,KAAM,QACNoD,KAAM,qBAENE,UAAW,GACXD,UAAW,KAlEnB,4DAnHiB,sBAuOjB,OAhNAmN,IAEAlR,qBAAU,WACJ4R,EAAOpT,KAAOqT,EAAOrT,IAAM4V,EAAe,GAAKE,EAAe,GAAKM,EAASvH,QAC9E0H,GAAa,GACbJ,GAAe,KAEfI,GAAa,GACbJ,GAAe,MAEhB,CAAC/C,EAAQC,EAAQuC,EAAcE,EAAcM,IAEhD5U,qBAAU,WACJmR,GAAW9D,SACb6G,EAAU/C,GAAW,IACrBgD,EAAUhD,GAAW,OAEtB,CAACA,KAEJnR,qBAAU,WACJ4R,EAAOpT,IAAMqT,EAAOrT,IAO1B,SAAmBoT,EAAQC,GACzB,GAAInJ,GAAM2E,QACJuE,GAAUC,GAAUnJ,GAAMvB,MAAK,SAACmG,GAAD,OAAQA,EAAEsE,SAAWA,GAAUtE,EAAEuE,SAAWA,GAAYvE,EAAEsE,SAAWC,GAAUvE,EAAEuE,SAAWD,KAC7H,OAAO,EAGX,OAAO,EAbuBwD,CAAUxD,EAAOpT,GAAIqT,EAAOrT,IACxDiW,GAAe,GAEfA,GAAe,KAEhB,CAAC7C,EAAQC,IAwLV,qBAAKpR,UAAU,aAAf,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,gBAAf,kBACA,qBAAKA,UAAU,SAAS2C,QAAS,WA5HvC6R,GAAQzQ,KAAK,UA4HP,qBAEF,sBAAK/D,UAAU,aAAf,UACE,cAAC,EAAD,CACEoP,cAAeA,EACfG,MAAM,OACNvF,OAAQ0G,GACR7R,MAAO8U,EACP3U,MAAM,KACNkQ,cAAe,SAAChK,GAAD,OA1LzB,SAAwBA,GAClBA,EAAMnH,KAAOoT,EAAOpT,KACtB0V,EAAUvO,GACV0O,EAAgB,IAChBE,EAAgB,KAsLgBc,CAAe1P,IACzCiK,eAAgB,SAAClM,GAAD,OA3K1B,SAA8BA,GAC5B,GAAIA,IAAW0Q,EAGb,GAFAH,EAAY,WACZI,EAAgB3Q,GACZgF,GAAM2E,QAAU3J,EAAQ,CAC1B,IAAM4R,EAAc5R,EAAM,SAAI,GAAMkO,EAAOlS,UADjB,EAEA8T,GAAS,UAAW8B,EAAa5M,GAAOkJ,EAAOpT,GAAIqT,EAAOrT,IAF1D,mBAEnBmV,EAFmB,KAERG,EAFQ,KAI1BS,EAAgB,IAAIzI,IAAU6H,GAAW5H,IAAzB,SAA6B,GAAM8F,EAAOnS,WAAU8B,YACpEqT,EAAYf,QACgB,IAAnBrQ,OAAOC,IAChB6Q,EAAgB,IAgKgBgB,CAAqB7R,MACnD,qBAAKjD,UAAU,oBACf,cAAC,EAAD,CACEoP,cAAeA,EACfG,MAAM,KACNvF,OAAQ0G,GACR7R,MAAOgV,EACP7U,MAAM,OACN8P,eAAgB4B,GAAW9D,QAAU8D,GAAW,GAAG3S,GACnDmR,cAAe,SAAChK,GAAD,OA5LzB,SAAwBA,GAClBA,EAAMnH,KAAOqT,EAAOrT,KACtB2V,EAAUxO,GACV0O,EAAgB,IAChBE,EAAgB,KAwLgBiB,CAAe7P,IACzCiK,eAAgB,SAAClM,GAAD,OArK1B,SAA8BA,GAC5B,GAAIA,IAAW4Q,EAGb,GAFAL,EAAY,YACZM,EAAgB7Q,GACZgF,GAAM2E,QAAU3J,EAAQ,CAC1B,IAAM+R,EAAe/R,EAAM,SAAI,GAAMmO,EAAOnS,UADlB,EAED8T,GAAS,WAAYiC,EAAc/M,GAAOkJ,EAAOpT,GAAIqT,EAAOrT,IAF3D,mBAEnBoV,EAFmB,KAETE,EAFS,KAKxBO,EADET,IAAaC,IACC,GAEA,IAAI/H,IAAU8H,GAAU7H,IAAxB,SAA4B,GAAM6F,EAAOlS,WAAU8B,YAErEqT,EAAYf,QACgB,IAAnBrQ,OAAOC,IAChB2Q,EAAgB,IAsJgBqB,CAAqBhS,MACjDoR,EAAY,sBAAKrU,UAAU,mBAAf,kBAAuC,sBAAMA,UAAU,gBAAhB,SArErD,GAAN,OAAUQ,EAAcqT,EAAeF,EAAc,GAArD,YAA2DvC,EAAOhM,KAAlE,gBAA8E+L,EAAO/L,WAqEkC,KAC/G2O,EAAc,KAAO,qBAAK/T,UAAU,qBAAf,0DACrB+T,EAAgBE,EAAc,qBAAKjU,UAAU,cAAc2C,QAAS,kBAnQ7D,2CAmQmEuS,IAA5C,kBAAuE,qBAAKlV,UAAU,uBAAf,kBAAqD,qBAAKA,UAAU,uBAAf,kCAG5J+T,GAAeE,EACb,sBAAKjU,UAAU,kBAAf,UACE,qBAAKA,UAAU,kBAAf,SAxEO,YAAbuT,EACK,kDAAoB,iCAAO/S,EAAcqT,GAAgB,EAAIhS,GAAW,KAAM,GAA1D,IAA+DuP,EAAOhM,WAE1F,8CAAgB,iCAAO5E,EAAcmT,GAAgB,EAAI9R,GAAW,KAAM,GAA1D,IAA+DsP,EAAO/L,aAsErF,qBAAKpF,UAAU,kBAAf,SAlEZ,WACE,IAAIiJ,EACAiI,EAAOjJ,GAAMvB,MAAK,SAACmG,GAAD,OAAOA,EAAEsE,SAAWA,EAAOpT,IAAM8O,EAAEuE,SAAWA,EAAOrT,MAY3E,OAVImT,EACFjI,EAASiI,EAAKI,SAAL,SAAiB,GAAMF,EAAOnS,WAAciS,EAAKG,SAAL,SAAiB,GAAMF,EAAOlS,YAEnFiS,EAAOjJ,GAAMvB,MAAK,SAACmG,GAAD,OAAOA,EAAEsE,SAAWC,EAAOrT,IAAM8O,EAAEuE,SAAWD,EAAOpT,SAGrEkL,EAASiI,EAAKG,SAAL,SAAiB,GAAMF,EAAOlS,WAAciS,EAAKI,SAAL,SAAiB,GAAMF,EAAOnS,YAIhF,8CAAgB,iCAAO4B,KAAKsU,KAAKtB,EAAeF,EAAe1K,GAASA,EAAQ,KAAKnI,QAAQ,GAA7E,UAoDqBsU,KAClC,sBAAKpV,UAAU,eAAf,UACE,uCACA,qBAAKA,UAAU,oBAAf,SApDd,WACE,GAAImU,EAASvH,OAAQ,CACnB,IAAMyI,EAAQ,GASd,OARAlB,EAASvW,KAAI,SAAC+I,EAAG2O,GACf,IAAMpQ,EAAQwL,GAAWhK,MAAK,SAAC+K,GAAD,OAAQA,EAAG1T,KAAO4I,KAIhD,OAHA2O,EAAQ,GAAKD,EAAMtR,KAAM,qBAAK/D,UAAU,sBACxCqV,EAAMtR,KAAM,qBAAK/D,UAAS,yBAAoBkF,EAAME,MAAxC,SAAiDF,EAAME,QAE5DuB,KAGF0O,GA0CME,WAIL,Y,SCtRN1N,I,OAAiB7C,QAAjB6C,cAyGO2N,GAvGF,WAAO,IAAD,EAC+BpW,mBAAS,IADxC,mBACVqW,EADU,KACQC,EADR,OAEgChU,aAAe,SAACC,GAAD,MAAY,CAC1EN,QAASM,EAAMC,OAAOP,QACtB2I,OAAQrI,EAAMoI,OAAOC,OACrB/B,MAAOtG,EAAMgP,KAAK1I,MAClB2I,aAAcjP,EAAMuI,IAAIC,SAASC,MAAMuG,KAAKpL,YAJtClE,EAFS,EAETA,QAAS2I,EAFA,EAEAA,OAAQ/B,EAFR,EAEQA,MAAO2I,EAFf,EAEeA,aAO1B4D,EAAUC,cA2EhB,OAzEAhE,IAEAlR,qBAAU,WACR,GAAI8B,GAAW4G,EAAM2E,QAAUgE,EAAc,CAsB3C/L,QAAQ8Q,IAAI1N,EAAMrK,KAAI,SAACiP,GAAD,OArBe9O,EAqBoB8O,EAAE9O,GApBlD4H,SAAOC,IAAIC,cAAcG,eAAe,CAC7CV,WAAYsL,EACZpL,UAAW,YACXC,KAAM,CACJ,CACExF,KAAM,OACNpB,MAAOd,GAET,CACEkC,KAAM,UACNpB,MAAOwC,MAGV4E,MAAK,SAACM,GACP,IACMO,EADY,IAAIe,GAAatB,GACT4G,cAE1B,OAAO,gBAAGpP,EAAK+I,MAlBiB,IAAC/I,MAqB4BkI,MAAK,SAACM,GACrEmP,EAAoBnP,SAGvB,CAAClF,EAAS4G,EAAO2I,IA6ClB,qBAAK5Q,UAAU,eAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAS2C,QAAS,WA7CvC6R,EAAQzQ,KAAK,UA6CP,kBACA,qBAAK/D,UAAU,gBAAf,qBAEF,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,yBAAyB2C,QAAS,WA7CvD6R,EAAQzQ,KAAK,cA6CP,2BACA,sBAAK/D,UAAU,sBAAf,UACE,qBAAKA,UAAU,eAAf,4BAvCJyV,EAAiB7I,QAAU3E,EAAM2E,QAAU5C,EAAO4C,OAC7C6I,EAAiB7X,KAAI,SAACgY,GAC3B,IAAMC,EAAStX,OAAOD,KAAKsX,GAAI,GACzB1E,EAAOjJ,EAAMvB,MAAK,SAACmG,GAAD,MAAO,UAAGA,EAAE9O,MAAS8X,KACvC1E,EAASnH,EAAOtD,MAAK,SAACC,GAAD,OAAOA,EAAE5I,KAAOmT,EAAKC,UAC1CC,EAASpH,EAAOtD,MAAK,SAACC,GAAD,OAAOA,EAAE5I,KAAOmT,EAAKE,UAC1CtK,EAAU8O,EAAGC,GAAH,SAAc,GAAM,IAC9BC,EAAcjV,KAAKkV,KAAKlV,KAAK0K,IAAIzE,EAAS,IAAMoK,EAAKG,SAAWH,EAAKI,SAArB,SAAiC,GAAOH,EAAOlS,SAAWmS,EAAOnS,YACjH0U,GAAgBzC,EAAKG,SAAWyE,EAAhB,SAA+B,GAAM3E,EAAOlS,WAAW6B,QAAQqQ,EAAOlS,UACtF4U,GAAgB3C,EAAKI,SAAWwE,EAAhB,SAA+B,GAAM1E,EAAOnS,WAAW6B,QAAQsQ,EAAOnS,UAE5F,OACE,sBAAKe,UAAU,sBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAS,0BAAqBmR,EAAO/L,QAC1C,qBAAKpF,UAAS,0BAAqBoR,EAAOhM,QAC1C,qBAAKpF,UAAU,aAAf,SAA4B,mCAASmR,EAAO/L,KAAhB,IAAuBgM,EAAOhM,UAC1D,sBAAKpF,UAAU,gBAAf,UAA+B,4CAA/B,KAAyD2T,EAAzD,MAA0EE,KAC1E,sBAAK7T,UAAU,cAAf,UAA6B,iDAA7B,KAA4D8G,EAAQhG,QAAQ,SAE9E,qBAAKd,UAAU,uBAAuB2C,QAAS,kBAzBzD,SAA2BkT,GACzBrB,EAAQzQ,KAAR,uBAA6B8R,IAwBgCG,CAAkBH,IAAvE,0BAKC,qBAAK7V,UAAU,gBAAf,wCCyLEiW,I,OAxQM,WAAO,IAAD,EACG7W,mBAAS,IADZ,mBAClB+R,EADkB,KACVsC,EADU,OAEGrU,mBAAS,IAFZ,mBAElBgS,EAFkB,KAEVsC,EAFU,OAGetU,mBAAS,IAHxB,mBAGlBuU,EAHkB,KAGJC,EAHI,OAIexU,mBAAS,IAJxB,mBAIlByU,EAJkB,KAIJC,EAJI,OAKa1U,oBAAS,GALtB,mBAKlB2U,EALkB,KAKLC,EALK,OAMqB5U,oBAAS,GAN9B,mBAMlB8W,EANkB,KAMDC,EANC,OAOiB/W,oBAAS,GAP1B,mBAOlBgX,EAPkB,KAOHC,EAPG,OAQiBjX,mBAAS,GAR1B,mBAQlBgQ,EARkB,KAQHmF,EARG,OASsC7S,aAAe,SAACC,GAAD,MAAY,CACxFN,QAASM,EAAMC,OAAOP,QACtBQ,SAAUF,EAAMC,OAAOC,SACvBoG,MAAOtG,EAAMgP,KAAK1I,MAClByI,WAAY/O,EAAMgP,KAAK3G,OACvB4G,aAAcjP,EAAMuI,IAAIC,SAASC,MAAMuG,KAAKpL,YALtClE,EATiB,EASjBA,QAASQ,EATQ,EASRA,SAAUoG,EATF,EASEA,MAAOyI,EATT,EASSA,WAAYE,EATrB,EASqBA,aAOxC5O,EAAWC,cACX0B,EAAWxB,uBAAY,SAACyB,EAAWC,GAAZ,OAA4B7B,EAAS,CAAE/B,KAAM,YAAa2D,YAAWC,kBAAgB,IAC5G0G,GAAQC,cACRgK,GAAUC,cAmChB,SAAS6B,KACP,OAAOrO,EAAMvB,MAAK,SAACmG,GAAD,OAAQA,EAAEsE,SAAWA,EAAOpT,IAAM8O,EAAEuE,SAAWA,EAAOrT,IAAQ8O,EAAEsE,SAAWC,EAAOrT,IAAM8O,EAAEuE,SAAWD,EAAOpT,MAyChI,SAASwY,KACP,GAAIpF,EAAOpT,IAAMqT,EAAOrT,IAAMkK,EAAM2E,OAAQ,CAC1C,IAAIsE,EAAOjJ,EAAMvB,MAAK,SAACmG,GAAD,OAAOA,EAAEsE,SAAWA,EAAOpT,IAAM8O,EAAEuE,SAAWA,EAAOrT,MAC3E,GAAImT,EACF,OAAQA,EAAKI,SAAL,SAAiB,GAAMF,EAAOnS,WAAciS,EAAKG,SAAL,SAAiB,GAAMF,EAAOlS,WAGpF,GADAiS,EAAOjJ,EAAMvB,MAAK,SAACmG,GAAD,OAAOA,EAAEsE,SAAWC,EAAOrT,IAAM8O,EAAEuE,SAAWD,EAAOpT,MAErE,OAAQmT,EAAKG,SAAL,SAAiB,GAAMF,EAAOlS,WAAciS,EAAKI,SAAL,SAAiB,GAAMF,EAAOnS,WAItF,OAAO,EA5GgB,8CAiIzB,8BAAA0M,EAAA,yDACOtK,EADP,uBAEIkJ,GAAMlI,KAAK,+BAFf,+BAKMsR,GAAgB,GAAKE,GAAgB,GAL3C,uBAMItJ,GAAM3F,MAAM,mCANhB,8BASMuM,EAAOpT,IAAMoT,EAAOpT,KAAOqT,EAAOrT,GATxC,uBAUIwM,GAAM3F,MAAM,6BAVhB,8BAcMgM,EAdN,kCAgBYnL,EAAO,CACX,CACExF,KAAM,UACNpB,MAAOwC,GAET,CACEpB,KAAM,OACNpB,MAAOsS,EAAOpT,IAEhB,CACEkC,KAAM,OACNpB,MAAOuS,EAAOrT,IAEhB,CACEkC,KAAM,OACNpB,MAAO,IAAIwM,IAAUsI,GAAcjI,MAAM,IAAIL,IAAJ,SAAc,GAAM8F,EAAOlS,YAAW+M,aAAaX,IAAUmL,UAAUzV,YAElH,CACEd,KAAM,OACNpB,MAAO,IAAIwM,IAAUwI,GAAcnI,MAAM,IAAIL,IAAJ,SAAc,GAAM+F,EAAOnS,YAAW+M,aAAaX,IAAUmL,UAAUzV,YAElH,CACEd,KAAM,OACNpB,MAAO,IAAIwM,IAAUsI,GAAcjI,MAAM,IAAIL,IAAJ,SAAc,GAAM8F,EAAOlS,YAAWyM,MAAM,EAAI7J,EAAW,KAAKmK,aAAaX,IAAUmL,UAAUzV,YAE5I,CACEd,KAAM,OACNpB,MAAO,IAAIwM,IAAUwI,GAAcnI,MAAM,IAAIL,IAAJ,SAAc,GAAM+F,EAAOnS,YAAWyM,MAAM,EAAI7J,EAAW,KAAKmK,aAAaX,IAAUmL,UAAUzV,YAE5I,CACEd,KAAM,UACNpB,MAAOwC,IA/CjB,UAkD8BsE,SAAOC,IAAIC,cAAcqG,WAAW,CAC1D5G,WAAYsL,EACZpL,UAAW,gBACXC,OACA0G,SAAU,KACVC,SAAU,IACVC,iBAAiB,IAxDzB,SAkDYoK,EAlDZ,QA2DoBlK,cACZgI,EAAiBnF,EAAgB,GACjCwE,EAAgB,IAChBE,EAAgB,IAChBnQ,EAAS,YAAa,CACpBtB,MAAM,EACNpC,KAAM,UACNoD,KAAM,yBACNE,UAAW,mBACXD,UAAU,GAAD,OAAKjD,GAAL,OAA4BoW,EAAUlK,aAAtC,OAAoDjM,MApEvE,mDAwEMqD,EAAS,YAAa,CACpBtB,MAAM,EACNpC,KAAM,QACNoD,KAAM,qBAENE,UAAW,GACXD,UAAW,KA9EnB,4DAjIyB,sBAqNzB,OAhMAmN,IAEAlR,qBAAU,WACH4R,EAAOpT,IAAOqT,EAAOrT,IAAOoT,EAAOpT,KAAOqT,EAAOrT,GAGpDiW,GAAe,GAFfA,GAAe,KAIhB,CAAC7C,EAAQC,IAEZ7R,qBAAU,YACJ4R,EAAOpT,KAAMqT,EAAOrT,IAAMoT,EAAOpT,IAAMqT,EAAOrT,IAAQkK,EAAM2E,QAAW0J,KAGzEH,GAAmB,GAFnBA,GAAmB,KAIpB,CAAClO,EAAOkJ,EAAQC,IAEnB7R,qBAAU,WACJ4R,EAAOpT,IAAMqT,EAAOrT,GACtBsY,GAAiB,GAEjBA,GAAiB,KAElB,CAACpO,EAAOkJ,EAAQC,EAAQuC,EAAcE,IAEzCtU,qBAAU,WACJmR,EAAW9D,SACb6G,EAAU/C,EAAW,IACrBgD,EAAUhD,EAAW,OAEtB,CAACrP,EAASqP,IAkKX,sBAAK1Q,UAAU,wBAAf,UACE,sBAAKA,UAAU,YAAf,0BACE,qBAAKA,UAAU,YAAY2C,QAAS,WA1FxC6R,GAAQkC,eA4FN,sBAAK1W,UAAU,aAAf,UAEI+T,GAAemC,EACb,qBAAKlW,UAAU,sBAAf,SACE,gCAAK,2EAAsD,uBAAM,uBAAjE,oEAEA,KAEN,cAAC,EAAD,CACEoP,cAAeA,EACfpF,OAAQ0G,EACR7R,MAAO8U,EACPzE,cAAe,SAAChK,GAAD,OA5KvB,SAAwBA,GAClBA,EAAMnH,KAAOoT,EAAOpT,KACtB0V,EAAUvO,GACV0O,EAAgB,IAChBE,EAAgB,KAwKcc,CAAe1P,IACzCiK,eAAgB,SAAClM,GAAD,OA7JxB,SAA8BA,GAC5B2Q,EAAgB3Q,GACZgF,EAAM2E,QAAY0J,OAChBrT,EACF6Q,EAAgBjT,KAAK4R,KAAKxP,EAASsT,KAAT,SAA2B,GAAMnF,EAAOnS,WAAlD4B,KAAA,IAAgE,GAAMuQ,EAAOnS,WACjE,IAAnB+D,OAAOC,IAChB6Q,EAAgB,KAuJcgB,CAAqB7R,MACnD,qBAAKjD,UAAU,cACf,cAAC,EAAD,CACEoP,cAAeA,EACfpF,OAAQ0G,EACR7R,MAAOgV,EACP/E,eAAgB4B,EAAW9D,QAAU8D,EAAW,GAAG3S,GACnDmR,cAAe,SAAChK,GAAD,OA5KvB,SAAwBA,GAClBA,EAAMnH,KAAOqT,EAAOrT,KACtB2V,EAAUxO,GACV0O,EAAgB,IAChBE,EAAgB,KAwKciB,CAAe7P,IACzCiK,eAAgB,SAAClM,GAAD,OA1JxB,SAA8BA,GAC5B6Q,EAAgB7Q,GACZgF,EAAM2E,QAAY0J,OAChBrT,EACF2Q,EAAgB/S,KAAK4R,KAAKxP,EAASsT,KAAT,SAA2B,GAAMpF,EAAOlS,WAAlD4B,KAAA,IAAgE,GAAMsQ,EAAOlS,WACjE,IAAnB+D,OAAOC,IAChB2Q,EAAgB,KAoJcqB,CAAqBhS,MAEjD8Q,GAAeqC,EACb,sBAAKpW,UAAU,mBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,oBAAf,SAAoCuW,KAAezV,QAAQ,KAC3D,sBAAKd,UAAU,mBAAf,UAAmCoR,EAAOhM,KAA1C,QAAqD+L,EAAO/L,WAE9D,sBAAKpF,UAAU,gBAAf,UACE,qBAAKA,UAAU,oBAAf,UAAqC,EAAIuW,MAAgBzV,QAAQ,KACjE,sBAAKd,UAAU,mBAAf,UAAmCmR,EAAO/L,KAA1C,QAAqDgM,EAAOhM,WAE9D,sBAAKpF,UAAU,gBAAf,UACE,qBAAKA,UAAU,oBAAf,SA7Id,WACE,GAAIkW,EACF,MAAO,OAEP,IAAMhF,EAAOoF,KACPK,EAAgBhD,EAAY,SAAI,GAAMxC,EAAOlS,UAAY4U,EAAzC,SAAyD,GAAMzC,EAAOnS,UAE5F,OAAIiS,EACI,GAAN,QAAWyF,GAAiBA,EAAgBzF,EAAKG,SAAWH,EAAKI,UAAY,KAAKxQ,QAAQ,GAA1F,KAEI,KAmIwC8V,KACpC,qBAAK5W,UAAU,mBAAf,iCAGF,KAEN,qBAAKA,UAAU,aAAa2C,QAAS,kBAlQlB,2CAkQwBkU,IAA3C,yB,UChQAhP,I,cAAiB7C,QAAjB6C,cAwMOiP,GAtMS,WAAO,IAAD,EACoB1X,mBAAS,GAD7B,mBACrBqW,EADqB,KACHC,EADG,OAEAtW,mBAAS,IAFT,mBAErB+R,EAFqB,KAEbsC,EAFa,OAGArU,mBAAS,IAHT,mBAGrBgS,EAHqB,KAGbsC,EAHa,OAIYtU,mBAAS,GAJrB,mBAIrBuU,EAJqB,KAIPC,EAJO,OAKYxU,mBAAS,GALrB,mBAKrByU,EALqB,KAKPC,EALO,OAMJ1U,mBAAS,IANL,mBAMrB8R,EANqB,KAMf6F,EANe,OAOA3X,mBAAS,GAPT,mBAOrB6D,EAPqB,KAObkG,EAPa,OAQM/J,oBAAS,GARf,mBAQrBiV,EARqB,KAQVC,EARU,OAS+B5S,aAAe,SAACC,GAAD,MAAY,CACpFN,QAASM,EAAMC,OAAOP,QACtBQ,SAAUF,EAAMC,OAAOC,SACvBmI,OAAQrI,EAAMoI,OAAOC,OACrB/B,MAAOtG,EAAMgP,KAAK1I,MAClB2I,aAAcjP,EAAMuI,IAAIC,SAASC,MAAMuG,KAAKpL,YALtClE,EAToB,EASpBA,QAASQ,EATW,EASXA,SAAUmI,EATC,EASDA,OAAQ/B,EATP,EASOA,MAAO2I,EATd,EAScA,aAOpC5O,EAAWC,cACX0B,EAAWxB,uBAAY,SAACyB,EAAWC,GAAZ,OAA4B7B,EAAS,CAAE/B,KAAM,YAAa2D,YAAWC,kBAAgB,IAC5G0G,EAAQC,cACRgK,GAAUC,cAEVoB,GADWmB,cACOtU,SAASmI,MAAM,cAAc,GA0DrD,SAAS0L,KACP,OAAQrF,EAAKI,SAAL,SAAiB,GAAMF,EAAOnS,WAAciS,EAAKG,SAAL,SAAiB,GAAMF,EAAOlS,WAhFxD,8CAuF5B,8BAAA0M,EAAA,yDACOtK,EADP,uBAEIkJ,EAAMlI,KAAK,+BAFf,8BAMMuO,EANN,iCAQYnL,EAAO,CACX,CACExF,KAAM,UACNpB,MAAOwC,GAET,CACEpB,KAAM,OACNpB,MAAOsS,EAAOpT,IAEhB,CACEkC,KAAM,OACNpB,MAAOuS,EAAOrT,IAEhB,CACEkC,KAAM,OACNpB,MAAO,IAAIwM,IAAUoK,GAAkB/J,MAAMzI,EAAS,KAAK+I,aAAaX,IAAUmL,UAAUzV,YAE9F,CACEd,KAAM,OACNpB,MAAO,IAAIwM,IAAUsI,GAAcjI,MAA5B,SAAkC,GAAMyF,EAAOlS,WAAUyM,MAAM,EAAI7J,EAAW,KAAKmK,aAAaX,IAAUmL,UAAUzV,YAE7H,CACEd,KAAM,OACNpB,MAAO,IAAIwM,IAAUwI,GAAcnI,MAA5B,SAAkC,GAAM0F,EAAOnS,WAAUyM,MAAM,EAAI7J,EAAW,KAAKmK,aAAaX,IAAUmL,UAAUzV,YAE7H,CACEd,KAAM,UACNpB,MAAOwC,IAnCjB,SAsC8BsE,SAAOC,IAAIC,cAAcqG,WAAW,CAC1D5G,WAAYsL,EACZpL,UAAW,mBACXC,OACA0G,SAAU,KACVC,SAAU,IACVC,iBAAiB,IA5CzB,QAsCYoK,EAtCZ,QA+CoBlK,aACZ5I,EAAS,YAAa,CACpBtB,MAAM,EACNpC,KAAM,UACNoD,KAAM,yBACNE,UAAW,mBACXD,UAAU,GAAD,OAAKjD,GAAL,OAA4BoW,EAAUlK,aAAtC,OAAoDjM,KArDvE,kDAyDMqD,EAAS,YAAa,CACpBtB,MAAM,EACNpC,KAAM,QACNoD,KAAM,qBAENE,UAAW,GACXD,UAAW,KA/DnB,2DAvF4B,sBA4J5B,OArIAmN,IAEAlR,qBAAU,WACJ8B,GAAW4G,EAAM2E,QAAUiJ,IA6BjC,SAAqC9X,GACnC,GAAI6S,EACF,OAAOjL,SAAOC,IAAIC,cAAcG,eAAe,CAC7CV,WAAYsL,EACZpL,UAAW,YACXC,KAAM,CACJ,CACExF,KAAM,OACNpB,MAAOd,GAET,CACEkC,KAAM,UACNpB,MAAOwC,MAGV4E,MAAK,SAACM,GAIP,OAHkB,IAAIsB,GAAatB,GACT4G,iBA7C5B8J,CAA4BpB,IAAQ5P,MAAK,SAACM,GACxCmP,EAAoBnP,QAGvB,CAAClF,EAAS4G,EAAO2I,IAEpBrR,qBAAU,WACR,GAAIyK,EAAO4C,QAAU3E,EAAM2E,QAAUiJ,GAAQ,CAC3C,IAAM3E,EAAOjJ,EAAMvB,MAAK,SAACmG,GAAD,MAAO,UAAGA,EAAE9O,MAAS8X,MAC7CkB,EAAQ7F,GACRuC,EAAUzJ,EAAOtD,MAAK,SAACC,GAAD,OAAOA,EAAE5I,KAAOmT,EAAKC,WAC3CuC,EAAU1J,EAAOtD,MAAK,SAACC,GAAD,OAAOA,EAAE5I,KAAOmT,EAAKE,WAC3CkD,GAAa,MAEd,CAACrM,EAAO+B,IAEXzK,qBAAU,WACR,GAAI2R,GAAQC,EAAOpT,IAAMqT,EAAOrT,IAAM8X,IAAUJ,EAAkB,CAChE,IAAM3O,EAAU2O,EAAgB,SAAI,GAAM,IACpCK,EAAcjV,KAAKkV,KAAKlV,KAAK0K,IAAIzE,EAAS,IAAMoK,EAAKG,SAAWH,EAAKI,SAArB,SAAiC,GAAOH,EAAOlS,SAAWmS,EAAOnS,YACjH0U,EAAgBzC,EAAKG,SAAWyE,EAAhB,SAA+B,GAAM3E,EAAOlS,UAC5D4U,EAAgB3C,EAAKI,SAAWwE,EAAhB,SAA+B,GAAM1E,EAAOnS,UAElE2U,EAAgB3Q,EAAS,IAAM0Q,GAC/BG,EAAgB7Q,EAAS,IAAM4Q,MAEhC,CAAC5Q,EAAQiO,EAAMC,EAAQC,IAwGxB,sBAAKpR,UAAU,2BAAf,UACE,sBAAKA,UAAU,YAAf,6BACE,qBAAKA,UAAU,YAAY2C,QAAS,WA3ExC6R,GAAQkC,eA6EN,sBAAK1W,UAAU,aAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,kBAAf,mBAAuC,iCAAOiD,EAAP,UACvC,cAAC,KAAD,CAAQpE,MAAOoE,EAAQ9D,SAAU,SAAChB,GAAD,OAAOgL,EAAUhL,MAClD,sBAAK6B,UAAU,cAAf,UACE,qBAAKA,UAAU,aAAa2C,QAAS,kBAAMwG,EAAU,KAArD,iBACA,qBAAKnJ,UAAU,aAAa2C,QAAS,kBAAMwG,EAAU,KAArD,iBACA,qBAAKnJ,UAAU,aAAa2C,QAAS,kBAAMwG,EAAU,KAArD,iBACA,qBAAKnJ,UAAU,aAAa2C,QAAS,kBAAMwG,EAAU,MAArD,uBAGJ,qBAAKnJ,UAAU,oBACf,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAS,kCAA6BmR,EAAO/L,MAAlD,UACG+L,EAAO/L,KACR,+BAAOuO,OAET,sBAAK3T,UAAS,kCAA6BoR,EAAOhM,MAAlD,UACGgM,EAAOhM,KACR,+BAAOyO,UAITQ,EACE,sBAAKrU,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,mBACA,sBAAKA,UAAU,QAAf,eAA0BmR,EAAO/L,KAAjC,MAA0CmR,KAA1C,IAA2DnF,EAAOhM,QAClE,sBAAKpF,UAAU,gBAAf,eAAkCoR,EAAOhM,KAAzC,MAAkD,EAAImR,KAAtD,IAAuEpF,EAAO/L,WAE9E,KAEJnC,EAAS,qBAAKjD,UAAU,gBAAgB2C,QAAS,kBAhM7B,2CAgMmCuU,IAA9C,oBAAyE,qBAAKlX,UAAU,yBAAf,2B,SClMpF6H,I,cAAiB7C,QAAjB6C,cAuJOsP,GArJC,WAAO,IAAD,EACsB/X,mBAAS,IAD/B,mBACbgY,EADa,KACEC,EADF,OAEyB3V,aAAe,SAACC,GAAD,MAAY,CACtEN,QAASM,EAAMC,OAAOP,QACtB2I,OAAQrI,EAAMoI,OAAOC,OACrBsN,gBAAiB3V,EAAMuI,IAAIC,SAASC,MAAMmN,QAAQhS,YAH5ClE,EAFY,EAEZA,QAAS2I,EAFG,EAEHA,OAAQsN,EAFL,EAEKA,gBAMnB9C,EAAUC,cACVlK,EAAQC,cAUd,SAASgN,IACP,GAAIxN,EAAO4C,QAAU0K,EACnB,IACE3R,SAAOC,IAAIC,cAAcG,eAAe,CACtCV,WAAYgS,EACZ9R,UAAW,OACXC,KAAM,KACLQ,MAAK,SAACgI,GAIP,IAHA,IAAMwJ,EAAe,GACfxK,EAAY,IAAIpF,GAAaoG,GAC7BE,EAAalB,EAAUK,cAHV,WAIVC,GACP,IAAMrI,EAAQ,GACdA,EAAMnH,GAAKkP,EAAUE,cACrB,IAAMiB,EAAYpE,EAAOtD,MAAK,SAACC,GAAD,OAAOA,EAAE5I,KAAOmH,EAAMnH,MACpDmH,EAAMwS,OAASzK,EAAUE,cACzBjI,EAAM4B,QAAUmG,EAAUE,cAE1BsK,EAAa1T,KAAKxF,OAAOyF,OAAOoK,EAAWlJ,KAPpCqI,EAAI,EAAGA,EAAIY,EAAYZ,IAAM,IAUtC,IAAMoK,EAAcF,EAAaxM,QAAO,SAACtE,GAAD,OAAOA,EAAEG,WAAS6H,QAAO,SAAChD,EAAGiD,GAAJ,OAAUjD,EAAIiD,EAAE8I,SAAQ,GACnFE,EAAiBH,EAAa7Z,KAAI,SAAC+I,GACvC,OAAO,2BACFA,GADL,IAEEkR,aAAclR,EAAE+Q,OAChBA,OAAQ/Q,EAAEG,QAAWH,EAAE+Q,OAASC,EAAe,OAInDN,EAAiBO,MAElB7Q,OAAM,SAAC5I,GACN6I,QAAQC,IAAI9I,MAEd,MAAOA,GACP6I,QAAQC,IAAI9I,IAyClB,SAAS2Z,EAAO5S,GACd,MAAM,GAAN,OAAUA,EAAME,KAAhB,2CAAuDF,EAAME,KAAKnE,QAAQ,IAAK,IAA/E,cAwCF,OA9HA1B,qBAAU,WACRiY,IACA,IAAI9J,EAAWC,aAAY,kBAAM6J,IAAwB,KACzD,OAAO,WACL9J,GAAYE,cAAcF,MAE3B,CAAC1D,EAAQsN,IAyHV,qBAAKtX,UAAU,kBAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,UACf,qBAAKA,UAAU,YAAf,SAzCN,WACE,GAAIoX,EAAcxK,OAChB,OAAOwK,EAAcxZ,KAAI,SAACsH,GACxB,OACE,qBAAKlF,UAAU,iBAAf,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,sBAAf,UACiB,IAAbkF,EAAMa,IAAY,qBAAK/F,UAAU,eAAf,iBACpB,sBAAKA,UAAU,gBAAf,UAEiB,IAAbkF,EAAMa,GACJ,sBAAK/F,UAAU,eAAf,oBACGkH,EAAgBhC,EAAO,qBAG1B,qBAAKlF,UAAS,4BAAuBkF,EAAME,MAA3C,qBAIFF,EAAME,KAAK2S,WAAW,KACpB,cAAC,KAAD,CAASC,UAAU,MAAMC,QAASH,EAAO5S,GAAzC,SACE,qBAAKlF,UAAU,qBAAf,SAAqCkF,EAAME,SAE3C,qBAAKpF,UAAU,qBAAf,SAAqCkF,EAAME,UAGnD,sBAAKpF,UAAU,YAAf,iBAA+B,0CAC/B,sBAAKA,UAAU,gBAAf,0BAA4C,+BAAO,IAAIqL,IAAUnG,EAAM4B,SAAW,GAAGwE,IAAlC,SAAsC,GAAMpG,EAAMjG,WAAU8B,gBAC/G,qBAAKf,UAAU,aAAa2C,QAAS,kBAxCnD,SAAuBuC,GAChB7D,EAILmT,EAAQzQ,KAAR,mBAAyBmB,EAAMnH,KAH7BwM,EAAMlI,KAAK,+BAsC0C6V,CAAchT,IAAzD,yBAxB+BA,EAAME,SAsC1C+S,WC/IHtQ,I,OAAiB7C,QAAjB6C,cAqUOuQ,GAnUO,SAACxZ,GAAW,IAAD,EACKQ,mBAAS,IADd,mBACxBiZ,EADwB,KACZC,EADY,OAESlZ,mBAAS,KAFlB,mBAExBqJ,EAFwB,KAEVC,EAFU,OAGHtJ,mBAAS,IAHN,mBAGxB6D,EAHwB,KAGhBkG,EAHgB,OAID/J,mBAAS,IAJR,mBAIxBmZ,EAJwB,KAIfC,EAJe,OAKGpZ,mBAAS,SALZ,mBAKxBqZ,EALwB,KAKbC,EALa,OAMWtZ,mBAAS,GANpB,mBAMxBuZ,EANwB,KAMTC,EANS,OAOiBxZ,oBAAS,GAP1B,mBAOxByZ,EAPwB,KAONC,EAPM,OAQcpX,aAAe,SAACC,GAAD,MAAY,CACtEN,QAASM,EAAMC,OAAOP,QACtB2I,OAAQrI,EAAMoI,OAAOC,OACrBsN,gBAAiB3V,EAAMuI,IAAIC,SAASC,MAAMmN,QAAQhS,YAH5ClE,EARuB,EAQvBA,QAAS2I,EARc,EAQdA,OAAQsN,EARM,EAQNA,gBAKnBtV,EAAWC,cACX0B,EAAWxB,uBAAY,SAACyB,EAAWC,GAAZ,OAA4B7B,EAAS,CAAE/B,KAAM,YAAa2D,YAAWC,kBAAgB,IAE5G0G,EAAQC,cACRhI,EAAWwU,cACXxC,EAAUC,cACVsE,GAAUvW,EAASE,SAASmI,MAAM,cAAc,GAoFtD,SAASmO,KAxBT,IAAkCjb,KAyBPgb,GAxBlBpT,SAAOC,IAAIC,cAAcG,eAAe,CAC7CV,WAAYgS,EACZ9R,UAAW,qBACXC,KAAM,CACJ,CACExF,KAAM,UACNpB,MAAOwC,GAET,CACEpB,KAAM,OACNpB,MAAOd,MAGVkI,MAAK,SAACgT,GACP,IAAMhM,EAAY,IAAIpF,GAAaoR,GACnC,MAAO,CACLlb,KACA+I,QAAS,IAAIuE,IAAU4B,EAAUE,eAAiB,GAAG7B,IAA5C,SAAgD,GAAO+M,EAAWpZ,UAAY,IAAI8B,WAC3FmY,SAAUjM,EAAUE,mBAOvBlH,MAAK,SAACkT,GACLX,EAAWW,MAEZpS,OAAM,SAAC5I,GACN6I,QAAQC,IAAI,qBAAsB9I,MAItC,SAASib,GAAiBC,GACnBhY,GAILqX,EAAaW,GACbP,GAAoB,IAJlBvO,EAAMlI,KAAK,+BAnHgB,8CA0H/B,gCAAAsJ,EAAA,yDACOtK,EADP,uBAEIkJ,EAAMlI,KAAK,+BAFf,8BAKMgW,EAAWta,KAAMuZ,EALvB,sBAMQrU,GAAU,GANlB,uBAOMsH,EAAM3F,MAAM,mCAPlB,+BAUsB,YAAd6T,GAA2BxV,EAASsV,EAAQzR,SAVpD,wBAWMyD,EAAM3F,MAAM,2CAXlB,4CAeYa,EAAO,CACX,CACExF,KAAM,UACNpB,MAAOwC,GAET,CACEpB,KAAM,OACNpB,MAAOwZ,EAAWta,IAEpB,CACEkC,KAAM,OACNpB,MAAO,IAAIwM,IAAUpI,GAAQyI,MAAM,IAAIL,IAAJ,SAAc,GAAMgN,EAAWpZ,YAAW+M,aAAaX,IAAUY,YAAYlL,aAG9GsE,EAAQ,CACZC,WAAYgS,EACZ9R,UAAWiT,EACXhT,OACA0G,SAAU,KACVC,SAAU,IACVC,iBAAiB,GAnCzB,UAsCgC1G,SAAOC,IAAIC,cAAcqG,WAAW7G,GAtCpE,SAsCYiU,EAtCZ,QAwCsB/M,cACduM,GAAoB,GACpBnV,EAAS,YAAa,CACpBtB,MAAM,EACNpC,KAAM,UACNoD,KAAM,yBACNE,UAAW,mBACXD,UAAU,GAAD,OAAKjD,GAAL,OAA4BiZ,EAAY/M,aAAxC,OAAsDjM,MA/CzE,mDAmDMwY,GAAoB,GACpBnV,EAAS,YAAa,CACpBtB,MAAM,EACNpC,KAAM,QACNoD,KAAM,qBAENE,UAAW,GACXD,UAAW,KA1DnB,4DA1H+B,oEA0L/B,gCAAAqI,EAAA,yDACOtK,EADP,uBAEIkJ,EAAMlI,KAAK,+BAFf,8BAMMiV,EANN,iCAQY7R,EAAO,CACX,CACExF,KAAM,UACNpB,MAAOwC,GAET,CACEpB,KAAM,OACNpB,MAAOwZ,EAAWta,KAGhBsH,EAAQ,CACZC,WAAYgS,EACZ9R,UAAW,UACXC,OACA0G,SAAU,KACVC,SAAU,IACVC,iBAAiB,GAxBzB,SA2BkC1G,SAAOC,IAAIC,cAAcqG,WAAW7G,GA3BtE,QA2BYkU,EA3BZ,QA6BwBhN,cAChBuM,GAAoB,GACpBnV,EAAS,YAAa,CACpBtB,MAAM,EACNpC,KAAM,UACNoD,KAAM,yBACNE,UAAW,mBACXD,UAAU,GAAD,OAAKjD,GAAL,OAA4BkZ,EAAchN,aAA1C,OAAwDjM,MApC3E,kDAwCMqD,EAAS,YAAa,CACpBtB,MAAM,EACNpC,KAAM,QACNoD,KAAM,qBAENE,UAAW,GACXD,UAAW,KA9CnB,2DA1L+B,sBAqB/B/D,qBAAU,WACR,GAAI8B,GAAW2I,EAAO4C,OAAQ,CAC5B,IAAM4M,EAASxP,EAAOtD,MAAK,SAACC,GAAD,MAAO,UAAGA,EAAE5I,MAASgb,MAEhDT,EAAckB,GACdvU,EAAgB5D,EAASmY,EAAQ9Q,MAElC,CAACsB,EAAQ3I,IAGZ9B,qBAAU,WACR,IAAMka,EAAmB,WACnBpY,GAA6B,IAAlBgX,EAAWtS,IACxBJ,SAAOC,IAAIC,cAAcG,eAAe,CACtCV,WAAYlF,EACZoF,UAAW,iBACXC,KAAM,CACJ,CACExF,KAAM,UACNpB,MAAOwC,GAET,CACEpB,KAAM,OACNpB,MAAOwZ,EAAWta,OAGrBkI,MAAK,SAACM,GACP,IAAM0G,EAAY,IAAIpF,GAAatB,GAEnCqS,EAAiB3L,EAAUE,mBAKjCsM,IACA,IAAI/L,EAAWC,YAAY8L,EAAkB,KAE7C,OAAO,WACL/L,GAAYE,cAAcF,MAE3B,CAACrM,EAASgX,IAEb9Y,qBAAU,WACR,GAAI8B,GAAWgX,EAAWta,IAAMuZ,EAAiB,CAC/C0B,KACA,IAAMtL,EAAWC,YAAYqL,GAAiB,KAC9C,OAAO,WACLtL,GAAYE,cAAcF,OAG7B,CAAC2K,EAAYhX,EAASiW,IAEzB/X,qBAAU,WACH8B,GACHmX,EAAW,MAEZ,CAACnX,IA6KJ,OACE,sBAAKrB,UAAU,kBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,YAAY2C,QAAS,WAdxC6R,EAAQkC,YAaN,QAEO,sBAAM1W,UAAU,WAAhB,iBAFP,MAGGkH,EAAgBmR,EAAY,wBAC5BA,EAAWjT,MAAQ,MAEtB,sBAAKpF,UAAU,qBAAf,UACE,sBAAKA,UAAU,qBAAf,UACGkH,EAAgBmR,EAAY,uBAC7B,sBAAKrY,UAAU,4BAAf,UACE,qBAAKA,UAAU,2BAAf,4BACA,sBAAKA,UAAU,0BAAf,UAA0CuY,EAAQzR,QAAlD,IAA4DuR,EAAWjT,cAG3E,sBAAKpF,UAAU,sBAAf,UACE,qBAAKA,UAAU,qBAAqB2C,QAAS,kBAAMyW,GAAiB,UAApE,mBACA,qBAAKpZ,UAAU,qBAAqB2C,QAAS,kBAAMyW,GAAiB,YAApE,2BAGJ,sBAAKpZ,UAAU,uBAAf,UACE,sBAAKA,UAAU,gCAAf,UACE,qBAAKA,UAAU,6BAAf,+BACA,sBAAKA,UAAU,4BAAf,UAA4C,IAAIqL,IAAUkN,EAAQW,UAAY,GAAG5N,IAArC,SAAyC,GAAM,IAAGvK,WAA9F,aAEF,qBAAKf,UAAU,wBAAf,SACE,qBAAKA,UAAU,uBAAuB2C,QAAS,kBArRxB,2CAqR8B+W,IAArD,0BAIgB,IAAlBrB,EAAWtS,GACT,qBAAK/F,UAAU,wBAAf,SACE,sBAAKA,UAAU,kCAAf,UAAkD,IAAIqL,IAAUsN,GAAiB,GAAGrN,IAAlC,SAAsC,GAAM,IAAGvK,WAC/F,sBAAKf,UAAU,uBAAf,wBACE,cAAC,KAAD,CAASgY,UAAU,MAAMC,QAAQ,sFAAjC,SACE,+CAKN,KAEJY,EACA,qBAAK7Y,UAAU,gBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,YAAY2C,QAAS,WAAQmW,GAAoB,GAAQ3P,EAAU,OAClF,sBAAKnJ,UAAU,gBAAf,UACE,qBAAKA,UAAS,eAAUqY,EAAWjT,KAArB,wBACd,sBAAKpF,UAAU,YAAf,UACE,sBAAKA,UAAU,cAAf,mBAEkB,UAAdyY,EACE,uBAAMzY,UAAU,OAAhB,sBAAiCyI,KAEjC,uBAAMzI,UAAU,OAAhB,qBAAgCuY,EAAQzR,cAI9C,sBAAK9G,UAAU,gBAAf,UACE,cAAC,EAAD,CAAOR,YAAY,MAAMX,MAAOoE,EAAQhE,SAAUoZ,EAAWpZ,UAAY,EAAGE,SAAU,SAAC8D,GAAD,OAAYkG,EAAUlG,MAC5G,qBAAKjD,UAAU,gBAAgB2C,QAAS,WApEpC,UAAd8V,GAA0BjI,MAAM/H,GAEX,YAAdgQ,GAA4BjI,MAAM+H,EAAQzR,UACnDqC,EAAUoP,EAAQzR,SAFlBqC,EAAUV,IAmEE,uBAGJ,qBAAKzI,UAAU,YAAY2C,QAAS,kBA1TjB,2CA0TuBgX,IAA1C,SAAqE,UAAdlB,EAAwB,QAAU,oBAI7F,SCrUKmB,I,OAND,SAAChb,GACb,OACE,qBAAKoB,UAAU,8BCsEJ6Z,I,OAtEI,SAACjb,GAAW,IACrBuL,EAAazI,aAAe,SAACC,GAAD,MAAY,CAC9CwI,SAAUxI,EAAMuI,IAAIC,aADdA,SAIR,OACE,sBAAKnK,UAAU,qBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,iBAAf,sBACA,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,mBAAGA,UAAU,yBAAb,uBACA,mBAAGA,UAAU,kBAAb,SAAgCQ,EAAc2J,EAAS2P,iBAAiB7W,QAAU,QAEpF,sBAAKjD,UAAU,iBAAf,UACE,mBAAGA,UAAU,yBAAb,gCACA,oBAAGA,UAAU,kBAAb,UAAgCQ,IAAgB2J,EAAS2P,iBAAiB7W,QAAU,IAAMkH,EAAS2P,iBAAiBC,QAAU,GAAK,OAAOjZ,QAAQ,IAAlJ,IAAuJ,mDAI7J,sBAAKd,UAAU,uBAAf,UACE,qBAAKA,UAAU,iBAAf,0BACA,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,QAAQga,MAAM,QAAQC,OAAO,QAAQC,QAAQ,YAAYC,KAAK,MAA7E,UACE,wBAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,qBAAqBC,KAAK,OAAOC,OAAO,UAAUC,eAAa,IAAIC,mBAAiB,SAASC,oBAAkB,QACzI,wBAAQP,GAAG,KAAKC,GAAG,KAAKC,EAAE,qBAAqBC,KAAK,OAAOC,OAAO,UAAUC,eAAa,IAAIC,mBAAiB,YAAYC,oBAAkB,QAC5I,wBAAQP,GAAG,KAAKC,GAAG,KAAKC,EAAE,qBAAqBC,KAAK,OAAOC,OAAO,UAAUC,eAAa,IAAIC,mBAAiB,QAAQC,oBAAkB,UACxI,wBAAQP,GAAG,KAAKC,GAAG,KAAKC,EAAE,qBAAqBC,KAAK,OAAOC,OAAO,UAAUC,eAAa,IAAIC,mBAAiB,YAAYC,oBAAkB,UAC5I,wBAAQP,GAAG,KAAKC,GAAG,KAAKC,EAAE,qBAAqBC,KAAK,OAAOC,OAAO,UAAUC,eAAa,IAAIC,mBAAiB,QAAQC,oBAAkB,QACxI,wBAAQP,GAAG,KAAKC,GAAG,KAAKC,EAAE,qBAAqBC,KAAK,OAAOC,OAAO,UAAUC,eAAa,IAAIC,mBAAiB,YAAYC,oBAAkB,QAC5I,wBAAQP,GAAG,KAAKC,GAAG,KAAKC,EAAE,qBAAqBC,KAAK,OAAOC,OAAO,UAAUC,eAAa,IAAIC,mBAAiB,QAAQC,oBAAkB,UACxI,wBAAQP,GAAG,KAAKC,GAAG,KAAKC,EAAE,qBAAqBC,KAAK,OAAOC,OAAO,UAAUC,eAAa,IAAIC,mBAAiB,YAAYC,oBAAkB,UAC5I,wBAAQP,GAAG,KAAKC,GAAG,KAAKC,EAAE,qBAAqBC,KAAK,OAAOC,OAAO,UAAUC,eAAa,IAAIC,mBAAiB,QAAQC,oBAAkB,QACxI,wBAAQP,GAAG,KAAKC,GAAG,KAAKC,EAAE,qBAAqBC,KAAK,OAAOC,OAAO,UAAUC,eAAa,IAAIC,mBAAiB,YAAYC,oBAAkB,aAGhJ,sBAAK3a,UAAU,WAAf,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,eAAe4a,MAAQ,CAAEC,WAAY,aACpD,qBAAK7a,UAAU,cAAf,uBACA,qBAAKA,UAAU,eAAf,oBAEF,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,eAAe4a,MAAQ,CAAEC,WAAY,aACpD,qBAAK7a,UAAU,cAAf,uBACA,qBAAKA,UAAU,eAAf,mBAEF,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,eAAe4a,MAAQ,CAAEC,WAAY,aACpD,qBAAK7a,UAAU,cAAf,wBACA,qBAAKA,UAAU,eAAf,mBAEF,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,eAAe4a,MAAQ,CAAEC,WAAY,aACpD,qBAAK7a,UAAU,cAAf,gCACA,qBAAKA,UAAU,eAAf,mBAEF,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,eAAe4a,MAAQ,CAAEC,WAAY,aACpD,qBAAK7a,UAAU,cAAf,uBACA,qBAAKA,UAAU,eAAf,iCC3DN6H,GAAyC7C,QAAzC6C,aAAciT,GAA2B9V,QAA3B8V,WAAY/V,GAAeC,QAAfD,WCkBrBgW,I,OAAM,WACjB,IAAMxQ,EAAQC,cADS,EAEW9I,aAAe,SAACC,GAAD,MAAY,CAC3DqZ,aAAcrZ,EAAMoI,OAAOiR,aAC3B3Z,QAASM,EAAMC,OAAOP,YAFhBA,EAFe,EAEfA,QAAS2Z,EAFM,EAENA,aAIXhZ,EAAWC,cACXgZ,EAAa9Y,uBAAY,SAACd,GAAD,OAAaW,EAAS,CAAE/B,KAAM,cAAeoB,cAAY,IAPjE,SAWR0B,IAXQ,2EAWvB,8BAAA4I,EAAA,+EAEUhG,SAAOC,IAAIsV,SAASC,cAF9B,uBAG0BxV,SAAOC,IAAIwV,QAAQC,aAH7C,YAGUD,EAHV,SAImBA,EAAQnb,OAASE,EAJpC,uBAKMoK,EAAM3F,MAAN,gCAAqCzE,EAArC,SALN,2CAQiCwF,SAAOC,IAAI0V,MAAMC,aARlD,QAQUC,EARV,OASIP,EAAWO,GACXC,aAAaC,QAAQ,UAAWF,GAVpC,kDAYc,gBAAN,MACFjR,EAAM3F,MAAM,yCAblB,2DAXuB,sBAgDvB,ODhE4B,WAAO,IAAD,EACDlD,aAAe,SAACC,GAAD,MAAY,CAC1DmI,aAAcnI,EAAMoI,OAAOD,aAC3BE,OAAQrI,EAAMoI,OAAOC,WAFfF,EAD0B,EAC1BA,aAAcE,EADY,EACZA,OAIhBhI,EAAWC,cACX0Z,EAAkBxZ,uBAAY,SAAC6Y,GAAD,OAAkBhZ,EAAS,CAAE/B,KAAM,oBAAqB+a,mBAAiB,IACvGY,EAAYzZ,uBAAY,SAAC6H,GAAD,OAAYhI,EAAS,CAAE/B,KAAM,aAAc+J,aAAW,IAC9EM,EAAkBnI,uBAAY,SAAC2H,GAAD,OAAkB9H,EAAS,CAAE/B,KAAM,oBAAqB6J,mBAAiB,IACvG+R,EAAc1Z,uBAAY,SAACgI,GAAD,OAAcnI,EAAS,CAAE/B,KAAM,gBAAiBkK,eAAa,IAU7F,SAAS2R,IACP,IAAK9R,EAAO4C,OACV,IACEjH,SAAOC,IAAIC,cAAcG,eAAe,CACtCV,WAAYlF,EACZoF,UAAW,OACXC,KAAM,KACLQ,MAAK,SAACgI,GACP,IAAMhB,EAAY,IAAIpF,GAAaoG,GAC7B6L,EAAmB,GACzBA,EAAiB7W,OAASgK,EAAUE,cAAV,SAA2B,GAAM,GAC3D2M,EAAiBC,OAAS9M,EAAUE,cACpC2M,EAAiBiC,eAAiB9O,EAAUE,cAC5C2M,EAAiBkC,iBAAmB/O,EAAUE,cAI9C,IAFA,IAAM/C,EAAQ,GACR6R,EAAYhP,EAAUK,cACnBC,EAAI,EAAGA,EAAI0O,EAAW1O,IAAK,CAClC,IAAMjE,EAAO,GACP4S,EAAajP,EAAUK,cAC7BhE,EAAKlE,KAAO0V,GAAW7N,EAAUc,KAAKmO,IACtC5S,EAAK/D,QAAUR,GAAWkI,EAAUc,KAAK,KACzCzE,EAAKoO,OAASzK,EAAUE,cACxB/C,EAAMd,EAAKlE,MAAQkE,EAMrB,IAHA,IAAM6S,EAAUlP,EAAUmP,cACpB3E,EAAe,GACftJ,EAAalB,EAAUK,cACpBC,EAAI,EAAGA,EAAIY,EAAYZ,IAAK,CACnC,IAAMrI,EAAQ,GACdA,EAAMnH,GAAKkP,EAAUE,cACrB,IAAM+O,EAAajP,EAAUK,cAC7BpI,EAAME,KAAO0V,GAAW7N,EAAUc,KAAKmO,IACvChX,EAAMK,QAAUR,GAAWkI,EAAUc,KAAK,KAC1C7I,EAAMa,GAAKkH,EAAUoP,YACrBnX,EAAMjG,SAAWgO,EAAUE,cAE3BjI,EAAMrG,MAAQqG,EAAMnH,GACpBmH,EAAMqK,MAAQrK,EAAME,KAEpBqS,EAAa1T,KAAKmB,GAGpByW,GAAgB,GAChBC,EAAUnE,GACVoE,EAAY,CACV/B,mBACA1P,QACA+R,eAGHpV,OAAM,SAAC5I,GACN6I,QAAQC,IAAI9I,GACZmJ,EAAYnJ,GAAG,SAACsP,GACdzG,QAAQC,IAAIwG,GACM,2BAAdA,EACFnD,GAAgB,GAEhBtD,QAAQC,IAAI,iBAAkB9I,SAIpC,MAAOA,GACP6I,QAAQC,IAAI9I,IAxElBoB,qBAAU,WACRuc,IACA,IAAIpO,GAAY5D,IAAiBE,EAAO4C,QAAUe,aAAY,kBAAMmO,IAAY,KAChF,OAAO,WACLpO,GAAYE,cAAcF,MAE3B,CAAC1D,EAAQF,ICQZwS,GAwCE,cAAC,IAAD,UACE,sBAAKtc,UAAU,MAAf,UAfEgb,EAEA,qBAAKhb,UAAU,gBAAf,SACE,sBAAKA,UAAU,+BAAf,UACE,qBAAKA,UAAU,kCACf,qBAAKA,UAAU,mBAAf,6BAKD,KAQY,OAAZqB,GAAqB,qBAAKrB,UAAU,yBAAf,SACpB,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,gBAAb,4BACA,qBAAKA,UAAU,cAAc2C,QAAS,kBAAMI,KAA5C,+BAIN,cAAC,EAAD,IACA,cAAC,EAAD,CAAQG,UAAW,kBA/BvB+X,EAAW,SACXQ,aAAaC,QAAQ,UAAW,KA8BU3Y,gBAAiB,kBAAMA,OAC7D,qBAAK/C,UAAU,eAAf,SACE,eAAC,IAAD,WAEIO,EAAWS,QAAQ,MAAQ,EAC3B,cAAC,IAAD,CAAOub,OAAK,EAAClJ,KAAK,IAAlB,SACE,cAAC,GAAD,MACS,KAGX9S,EAAWS,QAAQ,MAAQ,EAC3B,cAAC,IAAD,CAAOub,OAAK,EAAClJ,KAAK,eAAlB,SACE,cAAC,GAAD,MACS,KAGX9S,EAAWS,QAAQ,UAAY,EAC/B,cAAC,IAAD,CAAOub,OAAK,EAAClJ,KAAK,QAAlB,SACE,cAAC,GAAD,MACS,KAGX9S,EAAWS,QAAQ,UAAY,EAC/B,cAAC,IAAD,CAAOub,OAAK,EAAClJ,KAAK,QAAlB,SACE,cAAC,GAAD,MACS,KAGX9S,EAAWS,QAAQ,UAAY,EAC/B,cAAC,IAAD,CAAOub,OAAK,EAAClJ,KAAK,YAAlB,SACE,cAAC,GAAD,MACS,KAGX9S,EAAWS,QAAQ,UAAY,EAC/B,cAAC,IAAD,CAAOub,OAAK,EAAClJ,KAAK,mBAAlB,SACE,cAAC,GAAD,MACS,KAGX9S,EAAWS,QAAQ,WAAa,EAChC,cAAC,IAAD,CAAOub,OAAK,EAAClJ,KAAK,SAAlB,SACE,cAAC,EAAD,MACS,KAGX9S,EAAWS,QAAQ,WAAa,EAChC,cAAC,IAAD,CAAOub,OAAK,EAAClJ,KAAK,SAAlB,SACE,cAAC,GAAD,MACS,KAGX9S,EAAWS,QAAQ,gBAAkB,EACrC,cAAC,IAAD,CAAOub,OAAK,EAAClJ,KAAK,cAAlB,SACE,cAAC,GAAD,MACS,iB,oBC7InBmJ,GAAY,CAChB/Y,UAAW,CACTpB,MAAM,EACNpC,KAAM,GACNoD,KAAM,GACNE,UAAW,GACXD,UAAW,KCNTkZ,GAAY,CAChBnb,QAASoa,aAAagB,QAAQ,WAC9B5a,SAAU4Z,aAAagB,QAAQ,aAAe,OCF1CD,GAAY,CAChBxB,cAAc,EACdlR,cAAc,EACdE,OAAQ,ICHJwS,GAAY,CAChBrS,SAAU,CACR2P,iBAAkB,GAClB1P,MAAO,CACLmN,QAAS,GACT5G,KAAM,GACNtG,IAAK,IAEP8R,SAAS,ICRPK,GAAY,CAChBxS,OAAQ,GACR/B,MAAO,ICaMyU,GAREC,aAAgB,CAC/BjZ,MLEmB,WAAgC,IAA/B/B,EAA8B,uDAAtB6a,GAAWnD,EAAW,uCAClD,OAAQA,EAAOpZ,MACb,IAAK,YACH,OAAO,2BAAK0B,GAAZ,mBAAoB0X,EAAOzV,UAAYyV,EAAOxV,cAChD,QACE,OAAO,eAAKlC,KKNhBC,OJJoB,WAAgC,IAA/BD,EAA8B,uDAAtB6a,GAAWnD,EAAW,uCACnD,OAAQA,EAAOpZ,MACb,IAAK,cACH,OAAO,2BAAK0B,GAAZ,IAAmBN,QAASgY,EAAOhY,UACrC,IAAK,eAEH,OADAoa,aAAaC,QAAQ,WAAYrC,EAAOxX,UACjC,2BAAKF,GAAZ,IAAmBE,SAAUwX,EAAOxX,WACtC,QACE,OAAO,eAAKF,KIHhBoI,OHJoB,WAAgC,IAA/BpI,EAA8B,uDAAtB6a,GAAWnD,EAAW,uCACnD,OAAQA,EAAOpZ,MACb,IAAK,oBACH,OAAO,2BAAK0B,GAAZ,IAAmBqZ,aAAc3B,EAAO2B,eAC1C,IAAK,oBACH,OAAO,2BAAKrZ,GAAZ,IAAmBmI,aAAcuP,EAAOvP,eAC1C,IAAK,aACH,OAAO,2BAAKnI,GAAZ,IAAmBqI,OAAQqP,EAAOrP,SACpC,QACE,OAAO,eAAKrI,KGJhBuI,IFCiB,WAAgC,IAA/BvI,EAA8B,uDAAtB6a,GAAWnD,EAAW,uCAChD,OAAQA,EAAOpZ,MACb,IAAK,gBACH,OAAO,2BAAK0B,GAAZ,IAAmBwI,SAAUkP,EAAOlP,WACtC,QACE,OAAO,eAAKxI,KELhBgP,KDPkB,WAAgC,IAA/BhP,EAA8B,uDAAtB6a,GAAWnD,EAAW,uCACjD,OAAQA,EAAOpZ,MACb,IAAK,kBACH,OAAO,2BAAK0B,GAAZ,IAAmBqI,OAAQqP,EAAOrP,SACpC,IAAK,YACH,OAAO,2BAAKrI,GAAZ,IAAmBsG,MAAOoR,EAAOpR,QACnC,QACE,OAAO,eAAKtG,OEAHib,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7W,MAAK,YAAkD,IAA/C8W,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCQRO,I,qBAAQC,aAAYX,KAE1BY,SAAgBC,eAAe,IAE/B,IAAM5N,GAAU,CACdrL,QAAS,IACTkZ,SAAUC,IAAUC,YAGtBC,IAASC,OACP,cAAC,IAAD,yBAAUC,SAAUC,MAAmBnO,IAAvC,aACE,cAAC,IAAaoO,SAAd,CAAuBlf,MAAOue,GAA9B,SACE,cAAC,GAAD,SAGJY,SAASC,eAAe,SAM1BrB,O","file":"static/js/main.79937bff.chunk.js","sourcesContent":["var map = {\n\t\"./aes\": 269,\n\t\"./aes.js\": 269,\n\t\"./big\": 270,\n\t\"./big.js\": 270,\n\t\"./ctx\": 170,\n\t\"./ctx.js\": 170,\n\t\"./ecdh\": 271,\n\t\"./ecdh.js\": 271,\n\t\"./ecp\": 272,\n\t\"./ecp.js\": 272,\n\t\"./ecp2\": 273,\n\t\"./ecp2.js\": 273,\n\t\"./ff\": 274,\n\t\"./ff.js\": 274,\n\t\"./fp\": 275,\n\t\"./fp.js\": 275,\n\t\"./fp12\": 276,\n\t\"./fp12.js\": 276,\n\t\"./fp2\": 277,\n\t\"./fp2.js\": 277,\n\t\"./fp4\": 278,\n\t\"./fp4.js\": 278,\n\t\"./gcm\": 279,\n\t\"./gcm.js\": 279,\n\t\"./hash256\": 280,\n\t\"./hash256.js\": 280,\n\t\"./hash384\": 281,\n\t\"./hash384.js\": 281,\n\t\"./hash512\": 282,\n\t\"./hash512.js\": 282,\n\t\"./mpin\": 283,\n\t\"./mpin.js\": 283,\n\t\"./newhope\": 284,\n\t\"./newhope.js\": 284,\n\t\"./nhs\": 285,\n\t\"./nhs.js\": 285,\n\t\"./pair\": 286,\n\t\"./pair.js\": 286,\n\t\"./rand\": 287,\n\t\"./rand.js\": 287,\n\t\"./rom_curve\": 288,\n\t\"./rom_curve.js\": 288,\n\t\"./rom_field\": 289,\n\t\"./rom_field.js\": 289,\n\t\"./rsa\": 290,\n\t\"./rsa.js\": 290,\n\t\"./sha3\": 291,\n\t\"./sha3.js\": 291,\n\t\"./uint64\": 292,\n\t\"./uint64.js\": 292\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 593;","import React, { useState, useEffect } from 'react';\n\nconst Input = (props) => {\n  const { value = '', cls = '', round, disabled, decimals, inline = true, onChange } = props\n  const [val, setVal] = useState('')\n\n  useEffect(() => {\n    setVal(value)\n  //   if (value === '') {\n  //     setVal('')\n  //   } else if (`${value}`.endsWith('.')) {\n  //     setVal(value)\n  //   } else {\n  //     if (round === 'down') {\n  //       setVal(Math.floor(value * (10 ** decimals)) / (10 ** decimals))\n  //     } else if (round === 'up') {\n  //       setVal(Math.ceil(value * (10 ** decimals)) / (10 ** decimals))\n  //     }\n  //   }\n  }, [value])\n\n  const placeholder = decimals > 0 ? '0.0' : '0'\n  const formatter = (v, decimals = 9) => {\n    if (v === '' || v === '0') {\n      return v\n    } else {\n      const reg = (decimals > 0) ? new RegExp(\n        `^(([0-9]{0,9})|(([0]\\\\.\\\\d{0,${decimals}}|[0-9]{0,9}\\\\.\\\\d{0,${decimals}})))$`\n      ) : new RegExp('^[0-9]{0,9}$')\n      if (reg.test(v)) {\n        return v\n      } else {\n        return val\n      }\n    }\n  };\n  const handleInput = (e) => {\n    const formattedValue = formatter(e.target.value, decimals)\n\n    setVal(formattedValue)\n    typeof onChange === 'function' && onChange(formattedValue)\n  }\n\n  // const handleChange = (e) => {\n  //   typeof onChange === 'function' && onChange(e.target.value)\n  // }\n\n  return (\n    <input\n      className={`input ${inline ? 'inline-input' : ''} ${cls}`}\n      type=\"text\"\n      placeholder={placeholder}\n      value={val}\n      disabled={disabled}\n      onInput={(e) => handleInput(e)}\n      // onChange={(e) => handleChange(e)}\n    />\n  );\n};\n\nexport default Input;\n","export const NETWORK_TYPE = 'TEST'\nexport const GOVERNANCE_ADDRESS = '88499feea6e3889a07febc1631e3a96ed7c9a073'\nexport const API_BASE_URL = 'https://polarisexplorer.ont.io'\nexport const TRANSACTION_BASE_URL = 'https://explorer.ont.io/transaction/'\nexport const TRANSACTION_AFTERFIX = '/testnet'\nexport const READY_TABS = ['/', '/swap', '/trade', '/governance']","export const getQueryString = (search, name) => {\n  const reg = new RegExp(`(^|&)${name}=([^&]*)(&|$)`, 'i')\n  const value = search.substr(1).match(reg)\n\n  if (value != null) {\n    return (value[2])\n  }\n\n  return null\n}\n\nexport const getHashString = (hash, name) => {\n  const reg = new RegExp(`(^|&|[/?]+)${name}=([^&]*)(&|$)`, 'i')\n  const value = hash.substr(1).match(reg)\n\n  if (value != null) {\n    return (value[2])\n  }\n\n  return null\n}\n\nexport function toLocaleFixed(num, n = 9) {\n  const priceNum = parseFloat(n === 0 ? Math.round(num).toFixed(n) : parseFloat(num).toFixed(n)).toString()\n  return priceNum && (priceNum.indexOf('.') !== -1 ? priceNum.replace(/(\\d)(?=(\\d{3})+\\.)/g, ($0, $1) => `${$1},`) : priceNum.replace(/(?=(\\B\\d{3})+$)/g, ','))\n}\n\nexport const formatAccount = (account = '') => {\n  return `${account.substr(0, 4)}...${account.substr(-4)}`\n}\n","import React, { useState, useCallback } from 'react'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { Link } from 'react-router-dom'\nimport Input from '../input'\nimport { READY_TABS } from '../../config'\nimport { formatAccount } from '../../utils/common'\nimport './index.css'\n\nconst Header = (props) => {\n  const [showProfilePanel, setShowProfilePanel] = useState(false)\n  const { account, slippage } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage\n  }))\n  const [showSiteIntro, setShowSiteIntro] = useState(false)\n  const dispatch = useDispatch()\n  const setSlippage = useCallback((slippage) => dispatch({ type: 'SET_SLIPPAGE', slippage }), [])\n  const toggleShowSiteIntro = (show) => {\n    setShowSiteIntro(show)\n  }\n\n  const renderSiteIntro = () => {\n    if (showSiteIntro) {\n      const href = `${window.location.origin}${window.location.pathname}#/trade?pair=ONTd%2FUNX`\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper\">\n            <div className=\"close-btn\" onClick={() => toggleShowSiteIntro(false)}></div>\n            <p className=\"intro-line\">uniq-ex is a pure github based DAO dex, all activities are logged on github.</p>\n            <p className=\"intro-line\">You can open issues for discussion <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/uniq-ex/uniq-ex/issues\">here</a></p>\n            <p className=\"intro-line\">uniq-ex's future business will not be limited to exchanges though, we may enter various DeFi markets like compound or hegic.</p>\n            <p className=\"intro-line\">You can buy UNX(the governance token of uniq-ex) <a target=\"_blank\" rel=\"noreferrer\" href={href}>here</a></p>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  const onSignOut = () => {\n    setShowProfilePanel(false)\n    typeof props.onSignOut === 'function' && props.onSignOut()\n  }\n\n  const onConnectWallet = () => {\n    typeof props.onConnectWallet === 'function' && props.onConnectWallet()\n  }\n\n  const toggleProfilePanel = () => {\n    setShowProfilePanel(!showProfilePanel)\n  }\n\n  return (\n    <div className=\"header-wrapper\">\n      {renderSiteIntro()}\n      <div className=\"header\">\n        <div className=\"content-wrapper\">\n          <div className=\"logo-wrapper\">\n            UNIQ-EX\n            <div className=\"site-intro\" onClick={() => toggleShowSiteIntro(true)}></div>\n          </div>\n          <div className=\"nav-list\">\n            { READY_TABS.indexOf('/') >= 0 ? <div className=\"nav-item\"><Link to=\"/\">Staking</Link></div> : null }\n            { READY_TABS.indexOf('/swap') >= 0 ? <div className=\"nav-item\"><Link to=\"/swap\">Swap</Link></div> : null }\n            { READY_TABS.indexOf('/trade') >= 0 ? <div className=\"nav-item\"><Link to=\"/trade\">Trade</Link></div> : null }\n            { READY_TABS.indexOf('/governance') >= 0 ? <div className=\"nav-item\"><Link to=\"/governance\">Governance</Link></div> : null }\n            { READY_TABS.indexOf('/token') >= 0 ? <div className=\"nav-item\"><Link to=\"/token\">Token</Link></div> : null }\n          </div>\n          <div className={`${account ? 'active' : ''} profile-wrapper`}>\n            { !account && <span className=\"connect-btn\" onClick={() => onConnectWallet()}>Connect Wallet</span>}\n            { account && <span className=\"account-address\" onClick={() => toggleProfilePanel()}>{formatAccount(account)}</span> }\n            {\n              showProfilePanel ? (\n                <div className=\"profile-panel\">\n                  <div className=\"setting-wrapper\">\n                    <div className=\"setting-section-title\">SLIPPAGE</div>\n                    <div className=\"slippage-setting\">\n                      <div className={`slippage-item ${Number(slippage) === 0.1 ? 'selected' : ''}`} onClick={() => setSlippage('0.1')}>0.1%</div>\n                      <div className={`slippage-item ${Number(slippage) === 0.5 ? 'selected' : ''}`} onClick={() => setSlippage('0.5')}>0.5%</div>\n                      <div className={`slippage-item ${Number(slippage) === 1 ? 'selected' : ''}`} onClick={() => setSlippage('1.0')}>1.0%</div>\n                      <div className=\"slippage-input-wrapper\">\n                        <Input value={slippage} cls=\"slippage-input\" decimals=\"2\" placeholder={slippage} onChange={(amount) => setSlippage(amount)} />%\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"signout-btn\" onClick={() => onSignOut()}>Sign Out</div>\n                </div>\n              ) : null\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import React, { useCallback } from 'react'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport './index.css'\n\nconst InfoModal = (props) => {\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-wrapper\">\n        <div className=\"close-btn\" onClick={() => props.onCloseModal()}></div>\n        <div className={`modal-icon-${props.type} modal-icon`}></div>\n        <div className={`modal-text-${props.type} modal-text`}>{props.text}</div>\n        <div className=\"modal-extra-text\">\n        {\n          props.extraLink ? (\n            <a className=\"transaction-link\" target=\"_blank\" rel=\"noreferrer\" href={props.extraLink}>{props.extraText}</a>\n          ) : props.extraText\n        }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Modal = (props) => {\n  const { infoModal } = useMappedState((state) => ({\n    infoModal: state.modal.infoModal\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const onCloseInfoModal = () => {\n    setModal('infoModal', Object.assign({}, infoModal, { show: false }))\n  }\n\n  const buildModals = () => {\n    const modals = []\n    if (infoModal.show) {\n      modals.push(<InfoModal {...infoModal} onCloseModal={() => onCloseInfoModal()} />)\n    }\n    return modals\n  }\n\n  return (\n    <div className=\"modal-container\">\n      {buildModals()}\n    </div>\n  )\n}\n\nexport default Modal","import axios from 'axios'\nimport { API_BASE_URL } from '../config'\n\nconst instance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: { 'Content-Type': 'application/json' }\n})\n\ninstance.interceptors.response.use(\n  (response) => {\n    const res = response.data;\n    return res;\n  },\n  (error) => {\n    return Promise.reject(error);\n  },\n);\n\nexport default instance","import { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport request from './request'\n\nconst { reverseHex } = utils\n\nexport const getTokenBalance = (account, token, cb) => {\n  \n  if (token.name !== 'ONT' && token.name !== 'ONG') {\n    const param = {\n      scriptHash: token.address,\n      operation: 'balanceOf',\n      args: [\n        {\n          type: 'Address',\n          value: account,\n        },\n      ],\n    }\n    let invokeMethod = client.api.smartContract.invokeRead\n\n    if (token.ty === 2 || token.ty === 3) {\n      invokeMethod = client.api.smartContract.invokeWasmRead\n    }\n    invokeMethod(param).then((bl) => {\n      if (bl) {\n        cb(parseInt(reverseHex(bl), 16) / (10 ** token.decimals))\n      }\n    })\n  } else {\n    request({\n      method: 'get',\n      url: `/v2/addresses/${account}/native/balances`\n    }).then((resp) => {\n      if (resp.code === 0) {\n        const targetToken = resp.result.find((t) => t.asset_name === token.name.toLowerCase())\n        cb(targetToken.balance)\n      }\n    })\n    .catch((e) => {\n      console.log(e)\n    })\n  }\n}\n\nexport const getTokenIconDom = (token, cls = '') => {\n  if (token.id) {\n    return (\n      <div className={`token-icon-wrapper ${cls}`}>\n        {\n          token.ty === 3\n            ? token.name.split('-').slice(1).map((tokenName) => (<div key={`${token.name}-${tokenName}`} className={`token-icon-item with-drop-shadow icon-${tokenName}`} />))\n            : (<div className={`token-icon-item icon-${token.name}`} />)\n        }\n      </div>\n    )\n  }\n  return null\n}","export const handleError = (e, callback = () => {}) => {\n  try {\n    const json = JSON.parse(e)\n    if (json.Result === 'wasm contract does not exist') {\n      callback('CONTRACT_ADDRESS_ERROR')\n    }\n  } catch(error) {\n    // TODO\n  }\n}","export const PRICE_DECIMALS = 10 ** 6","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { getTokenBalance } from '../../utils/token'\nimport Input from '../../components/input'\nimport { handleError } from '../../utils/errorHandle'\nimport { getHashString } from '../../utils/common'\nimport { PRICE_DECIMALS } from '../../utils/constants'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Transaction = () => {\n  const [pairNameKeyword, setPairNameKeyword] = useState('')\n  const [pairs, setPairs] = useState([])\n  const [tokenPair, setTokenPair] = useState({})\n  const [showPairSelectModal, setShowPairSelectModal] = useState(false)\n  const [tradeType, setTradeType] = useState('buy')\n  const [tokenBalance, setTokenBalance] = useState('-')\n  const [makes, setMakes] = useState([])\n  const [myMakes, setMyMakes] = useState([])\n  const [makeView, setMakeView] = useState('all')\n  const [price, setPrice] = useState('')\n  const [amount, setAmount] = useState('')\n  const [total, setTotal] = useState('')\n  const [pool, setPool] = useState([])\n  const [lastPrice, setLastPrice] = useState(0)\n  const [feeRate, setFeeRate] = useState(0)\n  const [isValid, setIsValid] = useState(false)\n  const { account, stopInterval, tokens, CONTRACT_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    stopInterval: state.common.stopInterval,\n    tokens: state.common.tokens,\n    CONTRACT_ADDRESS: state.gov.poolStat.pools.dex.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const setStopInterval = useCallback((stopInterval) => dispatch({ type: 'SET_STOP_INTERVAL', stopInterval }), [])\n\n  const Alert = useAlert()\n\n  const urlPairName = decodeURIComponent(getHashString(window.location.hash, 'pair') || '')\n\n  useEffect(() => {\n    if (pairs.length) {\n      setTokenPair(pairs.find((p) => p.name === `${urlPairName}`) || pairs[0])\n    }\n  }, [pairs])\n\n  useEffect(() => {\n    if (account && tokenPair.name) {\n      setTokenBalance('-')\n      getTokenBalance(account, tradeType === 'buy' ? tokenPair.tokens[1] : tokenPair.tokens[0], (bl) => {\n        setTokenBalance(bl)\n      })\n    }\n  }, [account, tokenPair, tradeType])\n\n  useEffect(() => {\n    function getMakesOfPair() {\n      if (tokenPair.name && CONTRACT_ADDRESS) {\n        try {\n          client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'get_makes_of_pair',\n            args: [\n              {\n                type: 'Long',\n                value: tokenPair.tokens[0].id\n              },\n              {\n                type: 'Long',\n                value: tokenPair.tokens[1].id\n              }\n            ]\n          })\n          .then((makeStr) => {\n            const parsedMakes = []\n            const strReader = new StringReader(makeStr)\n            const pairLastPrice = strReader.readUint128()\n    \n            for (let j = 0; j <= 1; j++) {\n              const makeCount = strReader.readNextLen()\n              for (let i = 0; i < makeCount; i++) {\n                const make = {}\n                make.make_id = strReader.readUint128()\n                make.price = strReader.readUint128()\n                make.amount = new BigNumber(strReader.readUint128()).toString()\n                make.asset_token_id = (j === 0 ? tokenPair.tokens[0].id : tokenPair.tokens[1].id)\n                make.price_token_id = (j === 0 ? tokenPair.tokens[1].id : tokenPair.tokens[0].id)\n        \n                parsedMakes.push(make)\n              }\n            }\n    \n            setLastPrice(pairLastPrice ? pairLastPrice / PRICE_DECIMALS : 0)\n            setMakes(parsedMakes)\n          })\n          .catch((e) => {\n            handleError(e, (errorCode) => {\n              if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n                setStopInterval(true)\n              } else {\n                console.log('get makes of pair', e)\n              }\n            })\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n    getMakesOfPair()\n    const interval = !stopInterval && setInterval(getMakesOfPair, 2000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokenPair, account, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    function getUserMakes() {\n      if (account && CONTRACT_ADDRESS) {\n        try {\n          client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'get_user_makes',\n            args: [\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n          .then((makeStr) => {\n            const parsedMakes = []\n            const strReader = new StringReader(makeStr)\n            const makeCount = strReader.readNextLen()\n            for (let i = 0; i < makeCount; i++) {\n              const make = {}\n              make.address = client.api.utils.hexToAddress(strReader.read(20))\n              make.asset_token_id = strReader.readUint128()\n              make.price_token_id = strReader.readUint128()\n              make.price = strReader.readUint128()\n              make.amount = strReader.readUint128()\n              make.make_id = strReader.readUint128()\n    \n              parsedMakes.push(make)\n            }\n    \n            setMyMakes(parsedMakes)\n          })\n          .catch((e) => {\n            handleError(e, (errorCode) => {\n              if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n                setStopInterval(true)\n              } else {\n                console.log('get user makes', e)\n              }\n            })\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getUserMakes()\n    const interval = !stopInterval && setInterval(getUserMakes, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokenPair, account, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    async function getStat() {\n      if (tokens.length && CONTRACT_ADDRESS) {\n        try {\n          const statStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'stat',\n            args: []\n          })\n          \n          const tokenPool = []\n          const strReader = new StringReader(statStr)\n          setFeeRate(strReader.readUint128())\n          const tokenCount = strReader.readNextLen()\n  \n          for (let i = 0; i < tokenCount; i++) {\n            const token = {}\n            token.id = strReader.readUint128()\n            const tempToken = tokens.find((t) => t.id === token.id)\n            token.balance = new BigNumber(strReader.readUint128()).div(new BigNumber(10 ** tempToken.decimals)).toString()\n  \n            tokenPool.push(Object.assign(tempToken, token))\n          }\n\n          if (!pairs.length) {\n            const tokenPairs = []\n            for (let i = 0; i < tokenPool.length; i++) {\n              for (let j = i + 1; j < tokenPool.length; j++) {\n                tokenPairs.push({\n                  name: `${tokenPool[i].name}/${tokenPool[j].name}`,\n                  tokens: [tokenPool[i], tokenPool[j]]\n                })\n              }\n            }\n\n            setPairs(tokenPairs)\n          }\n\n          setPool(tokenPool)\n        } catch (e) {\n          handleError(e, (errorCode) => {\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get stat', e)\n            }\n          })\n        }\n      }\n    }\n\n    getStat()\n    const interval = setInterval(() => {\n      if (stopInterval) {\n        clearInterval(interval)\n      } else {\n        getStat()\n      }\n    }, 5000)\n    return () => clearInterval(interval)\n  }, [tokens, pairs, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    if (price > 0 && amount > 0) {\n      setTotal(price * amount)\n    }\n  }, [price, amount])\n\n  useEffect(() => {\n    if (price > 0) {\n      setAmount((total || 0) / price)\n    }\n  }, [total])\n\n  useEffect(() => {\n    if (tokenPair.name && price > 0 && amount > 0) {\n      setIsValid(true)\n    } else {\n      setIsValid(false)\n    }\n  }, [tokenPair, amount, price])\n\n  useEffect(() => {\n    setMakeView('all')\n  }, [account])\n\n  function onChangeToUserMakeView() {\n    if (account) {\n      setMakeView('my')\n    } else {\n      Alert.show('Please Connect Wallet First')\n    }\n  }\n\n  function getMakes(type) {\n    if (tokenPair.name) {\n      const curMakes = (makeView === 'my' ? myMakes : makes)\n      if (type === 'sell') {\n        return curMakes.filter((m) => m.asset_token_id === tokenPair.tokens[0].id && m.price_token_id === tokenPair.tokens[1].id).map((m) => {\n          return (\n            <div key={m.make_id} className=\"my-make-item reverse\">\n              <div className=\"make-item-detail make-sell\">{m.price / PRICE_DECIMALS}</div>\n              <div className=\"make-item-detail\">{new BigNumber(m.amount).div(Math.pow(10, tokenPair.tokens[0].decimals)).toString()}</div>\n              { makeView === 'my' && <div className=\"unmake-btn\" onClick={() => onUnmake(m.make_id)}>Cancel</div> }\n            </div>)\n        })\n      } else {\n        return curMakes.filter((m) => m.asset_token_id === tokenPair.tokens[1].id && m.price_token_id === tokenPair.tokens[0].id).map((m) => {\n          return (\n            <div key={m.make_id} className=\"my-make-item\">\n              <div className=\"make-item-detail make-buy\">{PRICE_DECIMALS / m.price}</div>\n              <div className=\"make-item-detail\">{new BigNumber(m.amount).times(m.price).div(PRICE_DECIMALS).div(Math.pow(10, tokenPair.tokens[1].decimals)).toString()}</div>\n              { makeView === 'my' && <div className=\"unmake-btn\" onClick={() => onUnmake(m.make_id)}>Cancel</div> }\n            </div>)\n        })\n      }\n    }\n    return null\n  }\n\n\n\n  async function onMake() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (tokenPair.name && CONTRACT_ADDRESS) {\n      if (price <= 0) {\n        Alert.error('Price should be greater than 0')\n        return\n      }\n      if (amount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const assetToken = tradeType === 'buy' ? tokenPair.tokens[1] : tokenPair.tokens[0]\n        const priceToken = tradeType === 'buy' ? tokenPair.tokens[0] : tokenPair.tokens[1]\n        const tradePrice = tradeType === 'buy' ? 1 / price : price\n        const tradeAmount = tradeType === 'buy' ? total : amount\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: assetToken.id\n          },\n          {\n            type: 'Long',\n            value: priceToken.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(tradePrice).times(PRICE_DECIMALS).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(tradeAmount).times(new BigNumber(10 ** assetToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const makeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: CONTRACT_ADDRESS,\n          operation: 'make',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (makeResult.transaction) {\n          setAmount('')\n          setPrice('')\n          setTotal('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${makeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onUnmake(makeId) {\n    if (account && makeId && CONTRACT_ADDRESS) {\n      try {\n        const unmakeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: CONTRACT_ADDRESS,\n          operation: 'unmake',\n          args: [\n            {\n              type: 'Address',\n              value: account\n            },\n            {\n              type: 'Long',\n              value: makeId\n            }\n          ],\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n        if (unmakeResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${unmakeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function getPriceHint() {\n    if (tokenPair.name) {\n      return tokenPair.tokens[1].name\n    }\n  }\n\n  function getAmountHint() {\n    if (tokenPair.name) {\n      return tokenPair.tokens[0].name\n    }\n  }\n\n  function generateTokenPool() {\n    if (pool.length) {\n      return pool.filter((tp) => Number(tp.balance) !== 0).map((tp) => {\n        return (\n          <div className=\"pool-item\" key={tp.name}>\n            <div className={`icon-${tp.name} token-name`}>{tp.name}</div>\n            <div className=\"token-balance\">{tp.balance}</div>\n          </div>\n        )\n      })\n    }\n  }\n\n  const handlePairClick = (pair) => {\n    setTokenPair(pair)\n    setShowPairSelectModal(false)\n  }\n\n  return (\n    <div className=\"swap-wrapper\">\n      <div className=\"trade-container\">\n        <div className=\"make-wrapper\">\n          <div className=\"container-header\">Trade\n            {\n              tokenPair.name ? (\n                <div className=\"token-pair-select\" onClick={() => setShowPairSelectModal(true)}>\n                  <div className=\"token-pair-name\">{tokenPair.name}</div>\n                </div>\n              ) : null\n            }\n          </div>\n          <div className=\"trade-type-switch\">\n            <div className={`trade-type-item ${tradeType === 'buy' ? 'trade-buy' : ''}`} onClick={() => setTradeType('buy')}>Buy</div>\n            <div className={`trade-type-item ${tradeType === 'sell' ? 'trade-sell' : ''}`} onClick={() => setTradeType('sell')}>Sell</div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Price\n              <span className=\"hint\">{getPriceHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={price} decimals=\"9\" onChange={(amount) => setPrice(amount)} />\n            </div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Amount\n              <span className=\"hint\">{getAmountHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={amount} decimals={tokenPair.tokens ? tokenPair.tokens[0].decimals : '9'} onChange={(amount) => setAmount(amount)} />\n            </div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Total {tradeType === 'buy' ? 'Need' : 'Receive'}\n              <span className=\"hint\">{getPriceHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={total} decimals=\"9\" onChange={(amount) => setTotal(amount)} />\n            </div>\n          </div>\n          { tokenPair.name ? <div className=\"balance-line\">Balance: <span>{tokenBalance} {tradeType === 'buy' ? tokenPair.tokens[1].name : tokenPair.tokens[0].name}</span></div> : null }\n          { feeRate ? <p className=\"fee-rate\">* The fee rate of transaction is {feeRate / 100}%</p> : null }\n          { isValid ? <div className={`make-btn make-btn-${tradeType}`} onClick={() => onMake()}>{tradeType.toUpperCase()} {tokenPair.tokens[0].name}</div> : <div className=\"make-btn disabled\">{tradeType.toUpperCase()} {tokenPair.tokens ? tokenPair.tokens[0].name : ''}</div> }\n        </div>\n        <div className=\"trade-panel\">\n          <div className=\"panel-header\">\n            <div className=\"panel-title\">Order Book</div>\n            <div className=\"tabs\">\n              <div className={makeView === 'all' ? \"tab-wrapper selected\" : \"tab-wrapper\"} onClick={() => setMakeView('all')}>All</div>\n              <div className={makeView === 'my' ? \"tab-wrapper selected\" : \"tab-wrapper\"} onClick={() => onChangeToUserMakeView()}>My</div>\n            </div>\n          </div>\n          <div className=\"list-title\">\n            <div className=\"blank-placeholder\"></div>\n            <div className=\"title-items\">\n              <div className=\"item-text\">Price ({getPriceHint()})</div>\n              <div className=\"item-text\">Amount ({getAmountHint()})</div>\n              { makeView === 'my' && <div className=\"item-placeholder\"></div> }\n            </div>\n          </div>\n          <div className=\"sell-section\">\n            <div className=\"section-title\">Sell</div>\n            <div className=\"make-list reverse\">\n            {getMakes('sell')}\n            </div>\n          </div>\n          {\n            (makeView === 'all' && Number(lastPrice) !== 0) ? <div className=\"last-price-wrapper\">\n              <div className=\"last-price-label\">Last Price</div>\n              <div className=\"last-price\">{lastPrice}</div>\n              <div className=\"last-price-placeholder\"></div>\n            </div> : null\n          }\n          <div className=\"buy-section\">\n            <div className=\"section-title\">Buy</div>\n            <div className=\"make-list\">\n            {getMakes('buy')}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"token-pool\">\n        <div className=\"container-header\">Token Balance</div>\n        <div className=\"pool-items\">\n        {generateTokenPool()}\n        </div>\n      </div>\n      {\n        showPairSelectModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => setShowPairSelectModal(false)}></div>\n              <div className=\"pair-select-modal-wrapper\">\n                <div className=\"pair-select-modal-title\">Select</div>\n                <input type=\"text\" className=\"pair-select-modal-input\" value={pairNameKeyword} onInput={(e) => setPairNameKeyword(e.target.value)} />\n                <div className=\"pair-select-modal-list\">\n                  {\n                    pairs.filter((p) => {\n                      const nameLC = p.name.toLowerCase()\n                      const tNames = pairNameKeyword.split(' ').filter((n) => n)\n                      \n                      return tNames.reduce((a, b) => a && nameLC.indexOf(b) >= 0, true)\n                    }).map((p) => {\n                      return (\n                        <div key={p.name} className=\"pair-select-modal-list-item\" onClick={() => handlePairClick(p)}>\n                          {\n                            p.tokens.map((t) => <div key={`${p.name}-${t.name}`} className={`pair-select-modal-list-item-icon icon-${t.name}`}></div>)\n                          }\n                          <div className=\"pair-select-modal-list-item-name\">{p.name}</div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n    </div>\n  )\n}\n\nexport default Transaction","import React, { useState, useEffect } from 'react'\nimport { useMappedState } from 'redux-react-hook';\nimport Select, { components } from 'react-select'\nimport Input from '../input'\nimport { getTokenBalance } from '../../utils/token'\n\nimport './index.css'\n\nconst TokenInput = (props) => {\n  const { value, round, tokens, defaultTokenId, inputDisabled = false, showBalance = true, withMax = true, onTokenChange, onAmountChange, balanceChange = 0 } = props\n  const [token, setToken] = useState({})\n  const [balance, setBalance] = useState('-')\n  const { account } = useMappedState((state) => ({\n    account: state.wallet.account\n  }))\n\n  useEffect(() => {\n    if (account && showBalance && token.id) {\n      getTokenBalance(account, token, setBalance)\n    }\n  }, [token, showBalance, account, balanceChange])\n\n  const handleTokenChange = (e) => {\n    if (e.value !== token.id) {\n      const newToken = tokens.filter((t) => t.id === e.value)[0]\n\n      setToken(newToken)\n      typeof onTokenChange === 'function' && onTokenChange(newToken)\n    }\n  }\n\n  const renderTokenSeletion = (defaultId) => {\n    if (tokens.length) {\n      const CustomOption = (props) => (\n        <components.Option {...props}>\n          <div className=\"option-wrapper\">\n            <div className={`icon-${props.label} option-icon`}></div>\n            <div className=\"option-label\">{props.label}</div>\n          </div>\n        </components.Option>\n      )\n      const SingleValue = ({ children, ...props }) => (\n        <components.SingleValue {...props}>\n          <div className=\"option-wrapper\">\n            <div className={`icon-${children} option-icon`}></div>\n            <div className=\"option-label\">{children}</div>\n          </div>\n        </components.SingleValue>\n      )\n      let defaultToken = defaultId ? (tokens.find((t) => t.id === defaultId) || tokens[0]) : tokens[0]\n\n      if (!token.id) {\n        setToken(defaultToken)\n      }\n\n      return (\n        <Select\n          className=\"token-select\"\n          defaultValue={defaultToken}\n          options={tokens}\n          isSearchable={false}\n          components={{ Option: CustomOption, SingleValue }}\n          onChange={(e) => handleTokenChange(e)}\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            colors: {\n              ...theme.colors,\n              primary: '#2c2c2c',\n            },\n          })}\n        />\n      )\n    }\n  }\n\n  const maxInput = () => {\n    if (!isNaN(balance) && typeof onAmountChange === 'function') {\n      onAmountChange(balance)\n    }\n  }\n\n  return (\n    <div className=\"token-input-wrapper\">\n      <div className=\"input-label\">{props.label || 'Input'}\n        { showBalance ? <span className=\"hint\">Balance: {balance}</span> : null }\n      </div>\n      <div className=\"input-wrapper\">\n        { renderTokenSeletion(defaultTokenId) }\n        <Input decimals={token.decimals} disabled={inputDisabled} value={value} round={round} onChange={(value) => onAmountChange(value)} />\n        { withMax && <div className=\"input-max-btn\" onClick={() => maxInput()}>MAX</div> }\n      </div>\n    </div>\n  )\n}\n\nexport default TokenInput\n","import { useEffect, useCallback } from 'react'\nimport { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\n\nconst { StringReader, reverseHex } = utils\n\nexport const useFetchPairs = () => {\n  const { account, tokens, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setSwapTokens = useCallback((tokens) => dispatch({ type: 'SET_SWAP_TOKENS', tokens }), [])\n  const setPairs = useCallback((pairs) => dispatch({ type: 'SET_PAIRS', pairs }), [])\n\n  useEffect(() => {\n    getSwapStat()\n    let interval = setInterval(getSwapStat, 3000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, tokens, swapTokens, SWAP_ADDRESS])\n\n  function getSwapStat() {\n    if (SWAP_ADDRESS) {\n      try {\n        client.api.smartContract.invokeWasmRead({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'stat',\n          args: []\n        })\n        .then((pairStr) => {\n          const parsedPairs = []\n          const strReader = new StringReader(pairStr)\n          const pairCount = strReader.readNextLen()\n          for (let i = 0; i < pairCount; i++) {\n            const pair = {}\n            pair.address = reverseHex(strReader.read(20))\n            pair.token1 = strReader.readUint128()\n            pair.token2 = strReader.readUint128()\n            pair.id = strReader.readUint128()\n            pair.reserve1 = strReader.readUint128()\n            pair.reserve2 = strReader.readUint128()\n            pair.lp = strReader.readUint128()\n\n            parsedPairs.push(pair)\n          }\n\n          const tokenIds = []\n          const tokenCount = strReader.readNextLen()\n          for (let i = 0; i < tokenCount; i++) {\n            tokenIds.push(strReader.readUint128())\n          }\n\n          setPairs(parsedPairs)\n          if (tokens.length && !swapTokens.length) {\n            setSwapTokens(tokenIds.map((t) => tokens.find((tk) => tk.id === t)))\n          }\n        })\n        .catch((e) => {\n          console.log(e)\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  return null\n}","const REST = 0.997\n\nexport const findAllPaths = (pairs, sourceId, targetId) => {\n  let pathArr = []\n  const findPath = (sourceId, targetId, pathNodes = []) => {\n    pathNodes = [...pathNodes]\n    pathNodes.push(sourceId)\n\n    if (sourceId === targetId) {\n      pathArr.push(pathNodes)\n      return\n    }\n\n    let neighborNodes = []\n    pairs.map((p) => {\n      if (p.token1 === sourceId) {\n        neighborNodes.push(p.token2)\n      } else if (p.token2 === sourceId) {\n        neighborNodes.push(p.token1)\n      }\n    })\n\n    for (let id of neighborNodes) {\n      if (!pathNodes.includes(id)) {\n        findPath(id, targetId, pathNodes)\n      }\n    }\n  }\n\n  findPath(sourceId, targetId)\n\n  pathArr.sort((p1, p2) => {\n    return p1.length - p2.length\n  })\n  \n  return pathArr\n}\n\nconst getInputAmount = (output, pair, reverse = false) => {\n  let amount\n  if (reverse) {\n    amount = (pair.reserve1 * pair.reserve2 / (pair.reserve1 - output) - pair.reserve2) / REST\n  } else {\n    amount = (pair.reserve1 * pair.reserve2 / (pair.reserve2 - output) - pair.reserve1) / REST\n  }\n  return Math.ceil(amount)\n}\n\nconst getOutputAmount = (input, pair, reverse = false) => {\n  let amount\n  if (reverse) {\n    amount = pair.reserve1 - pair.reserve1 * pair.reserve2 / (pair.reserve2 + REST * input)\n  } else {\n    amount = pair.reserve2 - pair.reserve1 * pair.reserve2 / (pair.reserve1 + REST * input)\n  }\n  return Math.floor(amount)\n}\n\nconst findNextOutput = (input, pairs, token1, token2) => {\n  let pair = pairs.find((p) => p.token1 === token1 && p.token2 === token2)\n\n  if (pair) {\n    return getOutputAmount(input, pair)\n  }\n\n  pair = pairs.find((p) => p.token1 === token2 && p.token2 === token1)\n\n  if (pair) {\n    return getOutputAmount(input, pair, true)\n  }\n}\n\nconst findPrevInput = (output, pairs, token1, token2) => {\n  let pair = pairs.find((p) => p.token1 === token1 && p.token2 === token2)\n\n  if (pair) {\n    return getInputAmount(output, pair)\n  }\n\n  pair = pairs.find((p) => p.token1 === token2 && p.token2 === token1)\n\n  if (pair) {\n    return getInputAmount(output, pair, true)\n  }\n}\n\nexport const bestSwap = (type = 'exactin', amount, pairs, token1, token2) => {\n  const paths = findAllPaths(pairs, token1, token2)\n  const originAmount = amount\n  let maxOutput = 0\n  let minInput = Infinity\n  let path = []\n  \n  for (let i = 0; i < paths.length; i++) {\n    amount = originAmount\n    if (type === 'exactin') {\n      for (let j = 0; j < paths[i].length - 1; j++) {\n        amount = findNextOutput(amount, pairs, paths[i][j], paths[i][j + 1])\n      }\n  \n      if (amount > maxOutput) {\n        maxOutput = amount\n        path = paths[i]\n      }\n    } else {\n      for (let j = paths[i].length - 1; j > 0; j--) {\n        amount = findPrevInput(amount, pairs, paths[i][j - 1], paths[i][j])\n      }\n  \n      if (amount < minInput && amount > 0) {\n        minInput = amount\n        path = paths[i]\n      }\n    }\n  }\n\n  if (type === 'exactin') {\n    return [maxOutput, path]\n  } else if (type === 'exactout') {\n    return [minInput, path]\n  }\n}\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport TokenInput from '../../components/tokenInput'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport { toLocaleFixed } from '../../utils/common'\nimport { bestSwap } from '../../utils/swap'\nimport './index.css'\n\nconst Swap = () => {\n  const [swapType, setSwapType] = useState('exactin')\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState('')\n  const [token2Amount, setToken2Amount] = useState('')\n  const [isValidPair, setIsValidPair] = useState(false)\n  const [isValidSwap, setIsValidSwap] = useState(false)\n  const [bestPath, setBestPath] = useState([])\n  const [showPrice, setShowPrice] = useState(false)\n  const [balanceChange, setBalanceChange] = useState(0)\n  const { account, slippage, pairs, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    pairs: state.swap.pairs,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (token1.id !== token2.id && token1Amount > 0 && token2Amount > 0 && bestPath.length) {\n      setShowPrice(true)\n      setIsValidSwap(true)\n    } else {\n      setShowPrice(false)\n      setIsValidSwap(false)\n    }\n  }, [token1, token2, token1Amount, token2Amount, bestPath])\n\n  useEffect(() => {\n    if (swapTokens.length) {\n      setToken1(swapTokens[0])\n      setToken2(swapTokens[1])\n    }\n  }, [swapTokens])\n\n  useEffect(() => {\n    if (token1.id && token2.id && validPair(token1.id, token2.id)) {\n      setIsValidPair(true)\n    } else {\n      setIsValidPair(false)\n    }\n  }, [token1, token2])\n\n  function validPair(token1, token2) {\n    if (pairs.length) {\n      if (token1 && token2 && pairs.find((p) => (p.token1 === token1 && p.token2 === token2) || (p.token1 === token2 && p.token2 === token1))) {\n        return true\n      }\n    }\n    return false\n  }\n\n  function onChangeToken1(token) {\n    if (token.id !== token1.id) {\n      setToken1(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onChangeToken2(token) {\n    if (token.id !== token2.id) {\n      setToken2(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onToken1AmountChange(amount) {\n    if (amount !== token1Amount) {\n      setSwapType('exactin')\n      setToken1Amount(amount)\n      if (pairs.length && amount) {\n        const inputAmount = amount * (10 ** token1.decimals)\n        const [maxOutput, path] = bestSwap('exactin', inputAmount, pairs, token1.id, token2.id)\n\n        setToken2Amount(new BigNumber(maxOutput).div(10 ** token2.decimals).toString())\n        setBestPath(path)\n      } else if (Number(amount) === 0) {\n        setToken2Amount('')\n      }\n    }\n  }\n\n  function onToken2AmountChange(amount) {\n    if (amount !== token2Amount) {\n      setSwapType('exactout')\n      setToken2Amount(amount)\n      if (pairs.length && amount) {\n        const outputAmount = amount * (10 ** token2.decimals)\n        const [minInput, path] = bestSwap('exactout', outputAmount, pairs, token1.id, token2.id)\n\n        if (minInput === Infinity) {\n          setToken1Amount('')\n        } else {\n          setToken1Amount(new BigNumber(minInput).div(10 ** token1.decimals).toString())\n        }\n        setBestPath(path)\n      } else if (Number(amount) === 0) {\n        setToken1Amount('')\n      }\n    }\n  }\n\n  function onNavigateToPool() {\n    history.push('/pool')\n  }\n\n  async function handleSwap() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (token1Amount <= 0 || token2Amount <= 0) {\n      Alert.error('Amount should be greater than 0')\n      return\n    }\n    if (token1.id && token1.id === token2.id) {\n      Alert.error('Input should be different')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Array',\n            value: bestPath.map((p) => ({ type: 'Long', value: p }))\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const swapResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: swapType === 'exactin' ? 'swap_exact_tokens_for_tokens' : 'swap_tokens_for_exact_tokens',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (swapResult.transaction) {\n          setBalanceChange(balanceChange + 1)\n          setToken1Amount('')\n          setToken2Amount('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${swapResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function getPrice() {\n    return `${toLocaleFixed(token2Amount / token1Amount, 6)} ${token2.name} per ${token1.name}`\n  }\n\n  function getMinReceiveOrMaxSold() {\n    if (swapType === 'exactin') {\n      return <p>Minimum Received:<span>{toLocaleFixed(token2Amount * (1 - slippage / 100), 6)} {token2.name}</span></p>\n    } else {\n      return <p>Maximum Sold:<span>{toLocaleFixed(token1Amount * (1 + slippage / 100), 6)} {token1.name}</span></p>\n    }\n  }\n\n  function getPriceImpact() {\n    let price\n    let pair = pairs.find((p) => p.token1 === token1.id && p.token2 === token2.id)\n\n    if (pair) {\n      price = (pair.reserve2 / (10 ** token2.decimals)) / (pair.reserve1 / (10 ** token1.decimals))\n    } else {\n      pair = pairs.find((p) => p.token1 === token2.id && p.token2 === token1.id)\n\n      if (pair) {\n        price = (pair.reserve1 / (10 ** token1.decimals)) / (pair.reserve2 / (10 ** token2.decimals))\n      }\n    }\n\n    return <p>Price Impact:<span>{Math.abs((token2Amount / token1Amount - price) / price * 100).toFixed(2)}%</span></p>\n  }\n\n  function getBestPath() {\n    if (bestPath.length) {\n      const items = []\n      bestPath.map((t, index) => {\n        const token = swapTokens.find((tk) => tk.id === t)\n        index > 0 && items.push((<div className=\"icon-arrow-right\"></div>))\n        items.push((<div className={`path-icon icon-${token.name}`}>{token.name}</div>))\n\n        return t\n      })\n\n      return items\n    }\n  }\n\n  return (\n    <div className=\"sw-wrapper\">\n      <div className=\"sw-container\">\n        <div className=\"sw-tabs\">\n          <div className=\"sw-tab active\">Swap</div>\n          <div className=\"sw-tab\" onClick={() => onNavigateToPool()}>Pool</div>\n        </div>\n        <div className=\"sw-content\">\n          <TokenInput\n            balanceChange={balanceChange}\n            label=\"From\"\n            tokens={swapTokens}\n            value={token1Amount}\n            round='up'\n            onTokenChange={(token) => onChangeToken1(token)}\n            onAmountChange={(amount) => onToken1AmountChange(amount)} />\n          <div className=\"icon-arrow-down\"></div>\n          <TokenInput\n            balanceChange={balanceChange}\n            label=\"To\"\n            tokens={swapTokens}\n            value={token2Amount}\n            round='down'\n            defaultTokenId={swapTokens.length && swapTokens[1].id}\n            onTokenChange={(token) => onChangeToken2(token)}\n            onAmountChange={(amount) => onToken2AmountChange(amount)} />\n          { showPrice ? <div className=\"sw-price-wrapper\">Price<span className=\"sw-price-info\">{getPrice()}</span></div> : null }\n          { isValidPair ? null : <div className=\"add-liquidity-hint\">Add liquidity to enable swaps for this pair.</div> }\n          { isValidPair ? ( isValidSwap ? <div className=\"sw-swap-btn\" onClick={() => handleSwap()}>Swap</div> : <div className=\"sw-swap-btn disabled\">Swap</div> ) : <div className=\"sw-swap-btn disabled\">Invalid Liquidity</div> }\n        </div>\n        {\n          isValidPair && isValidSwap ? (\n            <div className=\"sw-hint-wrapper\">\n              <div className=\"sw-input-output\">{getMinReceiveOrMaxSold()}</div>\n              <div className=\"sw-price-impact\">{getPriceImpact()}</div>\n              <div className=\"sw-best-path\">\n                <p>Route:</p>\n                <div className=\"sw-best-path-list\">\n                  {getBestPath()}\n                </div>\n              </div>\n            </div>\n          ) : null\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Swap\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState } from 'redux-react-hook';\nimport { utils } from 'ontology-ts-sdk'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Pool = () => {\n  const [liquidityBalance, setLiquidityBalance] = useState([])\n  const { account, tokens, pairs, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (account && pairs.length && SWAP_ADDRESS) {\n      const getLiquidityBalanceByPairId = (id) => {\n        return client.api.smartContract.invokeWasmRead({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'balanceOf',\n          args: [\n            {\n              type: 'Long',\n              value: id\n            },\n            {\n              type: 'Address',\n              value: account\n            }\n          ]\n        }).then((resp) => {\n          const strReader = new StringReader(resp)\n          const balance = strReader.readUint128()\n          \n          return { [id]: balance }\n        })\n      }\n      Promise.all(pairs.map((p) => getLiquidityBalanceByPairId(p.id))).then((resp) => {\n        setLiquidityBalance(resp)\n      })\n    }\n  }, [account, pairs, SWAP_ADDRESS])\n\n  function onNavigateToSwap() {\n    history.push('/swap')\n  }\n\n  function onNavigateToAddLiquidity() {\n    history.push('/pool/add')\n  }\n\n  function onRemoveLiquidity(pairId) {\n    history.push(`/pool/remove/${pairId}`)\n  }\n\n  function generateLiquidityList() {\n    if (liquidityBalance.length && pairs.length && tokens.length) {\n      return liquidityBalance.map((lb) => {\n        const pairId = Object.keys(lb)[0]\n        const pair = pairs.find((p) => `${p.id}` === pairId)\n        const token1 = tokens.find((t) => t.id === pair.token1)\n        const token2 = tokens.find((t) => t.id === pair.token2)\n        const balance = lb[pairId] / (10 ** 18)\n        const shareOfPool = Math.sqrt(Math.pow(balance, 2) / (pair.reserve1 * pair.reserve2 / (10 ** (token1.decimals + token2.decimals))))\n        const token1Amount = (pair.reserve1 * shareOfPool / (10 ** token1.decimals)).toFixed(token1.decimals)\n        const token2Amount = (pair.reserve2 * shareOfPool / (10 ** token2.decimals)).toFixed(token2.decimals)\n        \n        return (\n          <div className=\"pool-liquidity-item\">\n            <div className=\"liquidity-item-detail\">\n              <div className={`token-icon icon-${token1.name}`}></div>\n              <div className={`token-icon icon-${token2.name}`}></div>\n              <div className=\"token-pair\"><strong>{token1.name}/{token2.name}</strong></div>\n              <div className=\"pair-position\"><strong>Pooled</strong>: {token1Amount} / {token2Amount}</div>\n              <div className=\"pool-tokens\"><strong>Pool Tokens</strong>: {balance.toFixed(9)}</div>\n            </div>\n            <div className=\"remove-liquidity-btn\" onClick={() => onRemoveLiquidity(pairId)}>Remove</div>\n          </div>\n        )\n      })\n    } else {\n      return <div className=\"pool-empty-lp\">No Liquidities</div>\n    }\n  }\n\n  return (\n    <div className=\"pool-wrapper\">\n      <div className=\"pool-container\">\n        <div className=\"sw-tabs\">\n          <div className=\"sw-tab\" onClick={() => onNavigateToSwap()}>Swap</div>\n          <div className=\"sw-tab active\">Pool</div>\n        </div>\n        <div className=\"pool-content\">\n          <div className=\"pool-add-liquidity-btn\" onClick={() => onNavigateToAddLiquidity()}>Add Liquidity</div>\n          <div className=\"pool-liquidity-list\">\n            <div className=\"my-liquidity\">Your Liquidity</div>\n            {generateLiquidityList()}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Pool","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport TokenInput from '../../../components/tokenInput'\nimport { useFetchPairs } from '../../../hooks/usePair';\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\nimport './index.css'\n\nconst AddLiquidity = () => {\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState('')\n  const [token2Amount, setToken2Amount] = useState('')\n  const [isValidPair, setIsValidPair] = useState(true)\n  const [isFirstProvider, setIsFirstProvider] = useState(false)\n  const [showPriceInfo, setShowPriceInfo] = useState(false)\n  const [balanceChange, setBalanceChange] = useState(0)\n  const { account, slippage, pairs, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    pairs: state.swap.pairs,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (!token1.id || !token2.id || (token1.id === token2.id)) {\n      setIsValidPair(false)\n    } else {\n      setIsValidPair(true)\n    }\n  }, [token1, token2])\n\n  useEffect(() => {\n    if (token1.id && token2.id && token1.id != token2.id && (!pairs.length || !getPairByToken())) {\n      setIsFirstProvider(true)\n    } else {\n      setIsFirstProvider(false)\n    }\n  }, [pairs, token1, token2])\n\n  useEffect(() => {\n    if (token1.id && token2.id) {\n      setShowPriceInfo(true)\n    } else {\n      setShowPriceInfo(false)\n    }\n  }, [pairs, token1, token2, token1Amount, token2Amount])\n\n  useEffect(() => {\n    if (swapTokens.length) {\n      setToken1(swapTokens[0])\n      setToken2(swapTokens[1])\n    }\n  }, [account, swapTokens])\n\n  function getPairByToken() {\n    return pairs.find((p) => (p.token1 === token1.id && p.token2 === token2.id) || (p.token1 === token2.id && p.token2 === token1.id))\n  }\n\n  function onChangeToken1(token) {\n    if (token.id !== token1.id) {\n      setToken1(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onChangeToken2(token) {\n    if (token.id !== token2.id) {\n      setToken2(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onToken1AmountChange(amount) {\n    setToken1Amount(amount)\n    if (pairs.length && !!getPairByToken()) {\n      if (amount) {\n        setToken2Amount(Math.ceil(amount * getPairPrice() * (10 ** token2.decimals)) / (10 ** token2.decimals))\n      } else if (Number(amount) === 0) {\n        setToken2Amount('')\n      }\n    }\n  }\n\n  function onToken2AmountChange(amount) {\n    setToken2Amount(amount)\n    if (pairs.length && !!getPairByToken()) {\n      if (amount) {\n        setToken1Amount(Math.ceil(amount / getPairPrice() * (10 ** token1.decimals)) / (10 ** token1.decimals))\n      } else if (Number(amount) === 0) {\n        setToken1Amount('')\n      }\n    }\n  }\n\n  function getPairPrice() {\n    if (token1.id && token2.id && pairs.length) {\n      let pair = pairs.find((p) => p.token1 === token1.id && p.token2 === token2.id)\n      if (pair) {\n        return (pair.reserve2 / (10 ** token2.decimals)) / (pair.reserve1 / (10 ** token1.decimals))\n      }\n      pair = pairs.find((p) => p.token1 === token2.id && p.token2 === token1.id)\n      if (pair) {\n        return (pair.reserve1 / (10 ** token1.decimals)) / (pair.reserve2 / (10 ** token2.decimals))\n      }\n    }\n\n    return 0\n  }\n\n  function getShareOfPool() {\n    if (isFirstProvider) {\n      return '100%'\n    } else {\n      const pair = getPairByToken()\n      const amountProduct = token1Amount * (10 ** token1.decimals) * token2Amount * (10 ** token2.decimals)\n\n      if (pair) {\n        return `${(amountProduct / (amountProduct + pair.reserve1 * pair.reserve2) * 100).toFixed(2)}%`\n      }\n      return `0%`\n    }\n  }\n\n  function onNavigateToPool() {\n    history.goBack()\n  }\n\n  async function onAdd() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (token1Amount <= 0 || token2Amount <= 0) {\n      Alert.error('Amount should be greater than 0')\n      return\n    }\n    if (token1.id && token1.id === token2.id) {\n      Alert.error('Input should be different')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: token1.id\n          },\n          {\n            type: 'Long',\n            value: token2.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const addResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'add_liquidity',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (addResult.transaction) {\n          setBalanceChange(balanceChange + 1)\n          setToken1Amount('')\n          setToken2Amount('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${addResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"add-liquidity-wrapper\">\n      <div className=\"al-header\">Add Liquidity\n        <div className=\"back-icon\" onClick={() => onNavigateToPool()}></div>\n      </div>\n      <div className=\"al-wrapper\">\n        {\n          isValidPair && isFirstProvider ? (\n            <div className=\"first-provider-hint\">\n              <div><strong>You are the first liquidity provider.</strong><br /><br />The ratio of tokens you add will set the price of this pool.</div>\n            </div>\n          ) : null\n        }\n        <TokenInput\n          balanceChange={balanceChange}\n          tokens={swapTokens}\n          value={token1Amount}\n          onTokenChange={(token) => onChangeToken1(token)}\n          onAmountChange={(amount) => onToken1AmountChange(amount)} />\n        <div className=\"icon-plus\"></div>\n        <TokenInput\n          balanceChange={balanceChange}\n          tokens={swapTokens}\n          value={token2Amount}\n          defaultTokenId={swapTokens.length && swapTokens[1].id}\n          onTokenChange={(token) => onChangeToken2(token)}\n          onAmountChange={(amount) => onToken2AmountChange(amount)} />\n        {\n          isValidPair && showPriceInfo ? (\n            <div className=\"al-price-wrapper\">\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{getPairPrice().toFixed(4)}</div>\n                <div className=\"price-item-label\">{token2.name} per {token1.name}</div>\n              </div>\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{(1 / getPairPrice()).toFixed(4)}</div>\n                <div className=\"price-item-label\">{token1.name} per {token2.name}</div>\n              </div>\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{getShareOfPool()}</div>\n                <div className=\"price-item-label\">Share of Pool</div>\n              </div>\n            </div>\n          ) : null\n        }\n        <div className=\"al-add-btn\" onClick={() => onAdd()}>Add</div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddLiquidity\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { utils } from 'ontology-ts-sdk'\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport Slider from 'rc-slider'\nimport { useFetchPairs } from '../../../hooks/usePair';\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\nimport 'rc-slider/assets/index.css'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst RemoveLiquidity = () => {\n  const [liquidityBalance, setLiquidityBalance] = useState(0)\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState(0)\n  const [token2Amount, setToken2Amount] = useState(0)\n  const [pair, setPair] = useState({})\n  const [amount, setAmount] = useState(0)\n  const [showPrice, setShowPrice] = useState(false)\n  const { account, slippage, tokens, pairs, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n  const location = useLocation()\n  const pairId = location.pathname.match(/\\/([^/]+)$/)[1]\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (account && pairs.length && pairId) {\n      getLiquidityBalanceByPairId(pairId).then((resp) => {\n        setLiquidityBalance(resp)\n      })\n    }\n  }, [account, pairs, SWAP_ADDRESS])\n\n  useEffect(() => {\n    if (tokens.length && pairs.length && pairId) {\n      const pair = pairs.find((p) => `${p.id}` === pairId)\n      setPair(pair)\n      setToken1(tokens.find((t) => t.id === pair.token1))\n      setToken2(tokens.find((t) => t.id === pair.token2))\n      setShowPrice(true)\n    }\n  }, [pairs, tokens])\n\n  useEffect(() => {\n    if (pair && token1.id && token2.id && pairId && liquidityBalance) {\n      const balance = liquidityBalance / (10 ** 18)\n      const shareOfPool = Math.sqrt(Math.pow(balance, 2) / (pair.reserve1 * pair.reserve2 / (10 ** (token1.decimals + token2.decimals))))\n      const token1Amount = (pair.reserve1 * shareOfPool / (10 ** token1.decimals))\n      const token2Amount = (pair.reserve2 * shareOfPool / (10 ** token2.decimals))\n\n      setToken1Amount(amount / 100 * token1Amount)\n      setToken2Amount(amount / 100 * token2Amount)\n    }\n  }, [amount, pair, token1, token2])\n\n  function getLiquidityBalanceByPairId(id) {\n    if (SWAP_ADDRESS) {\n      return client.api.smartContract.invokeWasmRead({\n        scriptHash: SWAP_ADDRESS,\n        operation: 'balanceOf',\n        args: [\n          {\n            type: 'Long',\n            value: id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n      }).then((resp) => {\n        const strReader = new StringReader(resp)\n        const balance = strReader.readUint128()\n        \n        return balance\n      })\n    }\n  }\n\n  function getPairPrice() {\n    return (pair.reserve2 / (10 ** token2.decimals)) / (pair.reserve1 / (10 ** token1.decimals))\n  }\n\n  function onNavigateToPool() {\n    history.goBack()\n  }\n\n  async function onRemove() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: token1.id\n          },\n          {\n            type: 'Long',\n            value: token2.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(liquidityBalance).times(amount / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(10 ** token1.decimals).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(10 ** token2.decimals).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const addResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'remove_liquidity',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (addResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${addResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"remove-liquidity-wrapper\">\n      <div className=\"rl-header\">Remove Liquidity\n        <div className=\"back-icon\" onClick={() => onNavigateToPool()}></div>\n      </div>\n      <div className=\"rl-wrapper\">\n        <div className=\"rl-amount\">\n          <div className=\"rl-amount-label\">Amount<span>{amount}%</span></div>\n          <Slider value={amount} onChange={(e) => setAmount(e)} />\n          <div className=\"quick-items\">\n            <div className=\"quick-item\" onClick={() => setAmount(25)}>25%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(50)}>50%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(75)}>75%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(100)}>Max</div>\n          </div>\n        </div>\n        <div className=\"icon-arrow-down\"></div>\n        <div className=\"rl-receive-wrapper\">\n          <div className={`receive-token-item icon-${token1.name}`}>\n            {token1.name}\n            <span>{token1Amount}</span>\n          </div>\n          <div className={`receive-token-item icon-${token2.name}`}>\n            {token2.name}\n            <span>{token2Amount}</span>\n          </div>\n        </div>\n        {\n          showPrice ? (\n            <div className=\"rl-price-wrapper\">\n              <div className=\"price-wrapper-lable\">Price</div>\n              <div className=\"price\">1 {token1.name} = {getPairPrice()} {token2.name}</div>\n              <div className=\"price-reverse\">1 {token2.name} = {1 / getPairPrice()} {token1.name}</div>\n            </div>\n          ) : null\n        }\n        { amount ? <div className=\"rl-remove-btn\" onClick={() => onRemove()}>Remove</div> : <div className=\"rl-remove-btn disabled\">Remove</div> }\n      </div>\n    </div>\n  )\n}\n\nexport default RemoveLiquidity","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport Tooltip from 'rc-tooltip'\nimport { useAlert } from 'react-alert'\nimport { useMappedState } from 'redux-react-hook'\nimport { getTokenIconDom } from '../../utils/token'\n\nimport 'rc-tooltip/assets/bootstrap.css'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Staking = () => {\n  const [stakingTokens, setStakingTokens] = useState([])\n  const { account, tokens, STAKING_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    STAKING_ADDRESS: state.gov.poolStat.pools.staking.address\n  }))\n\n  const history = useHistory()\n  const Alert = useAlert()\n\n  useEffect(() => {\n    getStakingTokenBalance()\n    let interval = setInterval(() => getStakingTokenBalance, 2000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokens, STAKING_ADDRESS])\n\n  function getStakingTokenBalance() {\n    if (tokens.length && STAKING_ADDRESS) {\n      try {\n        client.api.smartContract.invokeWasmRead({\n          scriptHash: STAKING_ADDRESS,\n          operation: 'stat',\n          args: []\n        }).then((statStr) => {\n          const parsedTokens = []\n          const strReader = new StringReader(statStr)\n          const tokenCount = strReader.readNextLen()\n          for (let i = 0; i < tokenCount; i++) {\n            const token = {}\n            token.id = strReader.readUint128()\n            const tempToken = tokens.find((t) => t.id === token.id)\n            token.weight = strReader.readUint128()\n            token.balance = strReader.readUint128()\n\n            parsedTokens.push(Object.assign(tempToken, token))\n          }\n\n          const totalWeight = parsedTokens.filter((t) => t.balance).reduce((a, b) => a + b.weight, 0)\n          const filteredTokens = parsedTokens.map((t) => {\n            return {\n              ...t,\n              originWeight: t.weight,\n              weight: t.balance ? (t.weight / totalWeight) : 0\n            }\n          })\n\n          setStakingTokens(filteredTokens)\n        })\n        .catch((e) => {\n          console.log(e)\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  // useEffect(() => {\n  //   client.api.smartContract.invokeWasmRead({\n  //     scriptHash: STAKING_ADDRESS,\n  //     operation: 'staking_info',\n  //     args: []\n  //   })\n  //   .then((infoStr) => {\n  //     const info = {}\n  //     const strReader = new StringReader(infoStr)\n  //     info.amount = strReader.readUint128()\n  //     info.period = strReader.readUint128()\n  //     info.start_time = strReader.readUint128()\n  //     info.settled_time = strReader.readUint128()\n  //     info.interest = info.amount / info.period\n\n  //     setStakingInfo(info)\n  //   })\n  //   .catch((e) => {\n  //     handleError(e, (errorCode) => {\n  //       if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n  //         setStopStakingInterval(true)\n  //       } else {\n  //         console.log('get staking info', e)\n  //       }\n  //     })\n  //   })\n  // }, [])\n\n  function onSelectToken(token) {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    history.push(`/staking/${token.id}`)\n  }\n\n  function getTip(token) {\n    return `${token.name} is the hidden receipt for WING ${token.name.replace('f', '')} suppliers`\n  }\n\n  function generateStakingPool() {\n    if (stakingTokens.length) {\n      return stakingTokens.map((token) => {\n        return (\n          <div className=\"pool-list-item\" key={token.name}>\n            <div className=\"item-detail\">\n              <div className=\"item-detail-wrapper\">\n                { token.ty === 3 && <div className=\"corner-badge\">10X</div> }\n                <div className=\"staking-token\">\n                  {\n                    token.ty === 3 ? (\n                      <div className=\"staking-text\">Deposit\n                        {getTokenIconDom(token, 'stake-lp-token')}\n                      </div>\n                    ) : (\n                      <div className={`staking-text icon-${token.name}`}>Deposit</div>\n                    )\n                  }\n                  {\n                    token.name.startsWith('f') ? (\n                      <Tooltip placement=\"top\" overlay={getTip(token)}>\n                        <div className=\"staking-token-name\">{token.name}</div>\n                      </Tooltip>\n                    ) : <div className=\"staking-token-name\">{token.name}</div>\n                  }\n                </div>\n                <div className=\"earn-line\">Earn<span>UNX</span></div>\n                <div className=\"total-staking\">Total Staking<span>{new BigNumber(token.balance || 0).div(10 ** token.decimals).toString()}</span></div>\n                <div className=\"select-btn\" onClick={() => onSelectToken(token)}>Stake</div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    }\n  }\n\n  return (\n    <div className=\"stake-container\">\n      <div className=\"stake-pool\">\n        <div className=\"title\"></div>\n        <div className=\"pool-list\">\n          {generateStakingPool()}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Staking","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport Tooltip from 'rc-tooltip';\nimport Input from '../../../components/input'\nimport { getTokenBalance, getTokenIconDom } from '../../../utils/token'\nimport { GOVERNANCE_ADDRESS, TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\n\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst StakingDetail = (props) => {\n  const [stakeToken, setStakeToken] = useState({})\n  const [tokenBalance, setTokenBalance] = useState('-')\n  const [amount, setAmount] = useState('')\n  const [myStake, setMyStake] = useState({})\n  const [stakeType, setStakeType] = useState('stake')\n  const [claimableWing, setClaimableWing] = useState(0)\n  const [showStakingModal, setShowStakingModal] = useState(false)\n  const { account, tokens, STAKING_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    STAKING_ADDRESS: state.gov.poolStat.pools.staking.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const Alert = useAlert()\n  const location = useLocation()\n  const history = useHistory()\n  const tokenId = location.pathname.match(/\\/([^/]+)$/)[1]\n\n  useEffect(() => {\n    if (account && tokens.length) {\n      const sToken = tokens.find((t) => `${t.id}` === tokenId)\n\n      setStakeToken(sToken)\n      getTokenBalance(account, sToken, setTokenBalance)\n    }\n  }, [tokens, account])\n\n\n  useEffect(() => {\n    const getClaimableWing = () => {\n      if (account && stakeToken.ty === 2) {\n        client.api.smartContract.invokeWasmRead({\n          scriptHash: GOVERNANCE_ADDRESS,\n          operation: 'claimable_wing',\n          args: [\n            {\n              type: 'Address',\n              value: account\n            },\n            {\n              type: 'Long',\n              value: stakeToken.id\n            }\n          ]\n        }).then((resp) => {\n          const strReader = new StringReader(resp)\n\n          setClaimableWing(strReader.readUint128())\n        })\n      }\n    }\n\n    getClaimableWing()\n    let interval = setInterval(getClaimableWing, 10000)\n\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, stakeToken])\n\n  useEffect(() => {\n    if (account && stakeToken.id && STAKING_ADDRESS) {\n      getAccountStake()\n      const interval = setInterval(getAccountStake, 10000)\n      return () => {\n        interval && clearInterval(interval)\n      }\n    }\n  }, [stakeToken, account, STAKING_ADDRESS])\n\n  useEffect(() => {\n    if (!account) {\n      setMyStake({})\n    }\n  }, [account])\n\n  function getAccountStakeByTokenId(id) {\n    return client.api.smartContract.invokeWasmRead({\n      scriptHash: STAKING_ADDRESS,\n      operation: 'account_stake_info',\n      args: [\n        {\n          type: 'Address',\n          value: account\n        },\n        {\n          type: 'Long',\n          value: id\n        }\n      ]\n    }).then((stakeStr) => {\n      const strReader = new StringReader(stakeStr)\n      return {\n        id,\n        balance: new BigNumber(strReader.readUint128() || 0).div(10 ** (stakeToken.decimals || 0)).toString(),\n        interest: strReader.readUint128()\n      }\n    })\n  }\n\n  function getAccountStake() {\n    getAccountStakeByTokenId(tokenId)\n    .then((stake) => {\n      setMyStake(stake)\n    })\n    .catch((e) => {\n      console.log('get account stakes', e)\n    })\n  }\n\n  function handleStakeClick(action) {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    setStakeType(action)\n    setShowStakingModal(true)\n  }\n\n  async function onStake() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (stakeToken.id && STAKING_ADDRESS) {\n      if (amount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      if (stakeType === 'unstake' && amount > myStake.balance) {\n        Alert.error('Amount should be less than your balance')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: stakeToken.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(amount).times(new BigNumber(10 ** stakeToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const param = {\n          scriptHash: STAKING_ADDRESS,\n          operation: stakeType,\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        }\n\n        const stakeResult = await client.api.smartContract.invokeWasm(param)\n\n        if (stakeResult.transaction) {\n          setShowStakingModal(false)\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${stakeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setShowStakingModal(false)\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onHarvest() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (STAKING_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: stakeToken.id\n          }\n        ]\n        const param = {\n          scriptHash: STAKING_ADDRESS,\n          operation: 'harvest',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        }\n\n        const harvestResult = await client.api.smartContract.invokeWasm(param)\n\n        if (harvestResult.transaction) {\n          setShowStakingModal(false)\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${harvestResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function onNavigateToStaking() {\n    history.goBack()\n  }\n\n  const maxInput = () => {\n    if (stakeType === 'stake' && !isNaN(tokenBalance)) {\n      setAmount(tokenBalance)\n    } else if (stakeType === 'unstake' && !isNaN(myStake.balance)) {\n      setAmount(myStake.balance)\n    }\n  }\n\n  return (\n    <div className=\"stake-container\">\n      <div className=\"stake-title\">\n        <div className=\"back-icon\" onClick={() => onNavigateToStaking()} />\n        Earn <span className=\"icon-UNX\">UNX</span> by\n        {getTokenIconDom(stakeToken, 'inline-token-wrapper')}\n        {stakeToken.name || ''}\n      </div>\n      <div className=\"stake-token-detail\">\n        <div className=\"stake-token-amount\">\n          {getTokenIconDom(stakeToken, 'stake-token-wrapper')}\n          <div className=\"stake-token-amount-detail\">\n            <div className=\"stake-token-amount-label\">Current Staked</div>\n            <div className=\"stake-token-amount-info\">{myStake.balance} {stakeToken.name}</div>\n          </div>\n        </div>\n        <div className=\"stake-token-actions\">\n          <div className=\"stake-token-action\" onClick={() => handleStakeClick('stake')}>Stake</div>\n          <div className=\"stake-token-action\" onClick={() => handleStakeClick('unstake')}>Unstake</div>\n        </div>\n      </div>\n      <div className=\"harvest-token-detail\">\n        <div className=\"harvest-token-amount icon-UNX\">\n          <div className=\"harvest-token-amount-label\">Rewards Available</div>\n          <div className=\"harvest-token-amount-info\">{new BigNumber(myStake.interest || 0).div(10 ** 9).toString()} UNX</div>\n        </div>\n        <div className=\"harvest-token-actions\">\n          <div className=\"harvest-token-action\" onClick={() => onHarvest() }>Harvest</div>\n        </div>\n      </div>\n      {\n        stakeToken.ty === 2 ? (\n          <div className=\"claimable-wing-detail\">\n            <div className=\"claimable-wing-amount icon-WING\">{new BigNumber(claimableWing || 0).div(10 ** 9).toString()}\n              <div className=\"claimable-wing-label\">WING Earned\n                <Tooltip placement=\"top\" overlay=\"WING earned by ftoken will be transferred to your account when you stake or unstake\">\n                  <span>?</span>\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      { showStakingModal ? (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper\">\n            <div className=\"close-btn\" onClick={() => { setShowStakingModal(false); setAmount(''); }}></div>\n            <div className=\"stake-wrapper\">\n              <div className={`icon-${stakeToken.name} token-placeholder`}></div>\n              <div className=\"form-item\">\n                <div className=\"input-label\">Amount\n                  {\n                    stakeType === 'stake' ? (\n                      <span className=\"hint\">Balance: {tokenBalance}</span>\n                    ) : (\n                      <span className=\"hint\">Staked: {myStake.balance}</span>\n                    )\n                  }\n                </div>\n                <div className=\"input-wrapper\">\n                  <Input placeholder=\"0.0\" value={amount} decimals={stakeToken.decimals || 0} onChange={(amount) => setAmount(amount)} />\n                  <div className=\"input-max-btn\" onClick={() => maxInput()}>MAX</div>\n                </div>\n              </div>\n              <div className=\"stake-btn\" onClick={() => onStake()}>{ stakeType === 'stake' ? 'Stake' : 'Unstake'}</div>\n            </div>\n          </div>\n        </div>\n      ) : null }\n    </div>\n  )\n}\n\nexport default StakingDetail","import React from 'react'\nimport './index.css'\n\nconst Token = (props) => {\n  return (\n    <div className=\"coming-soon-placeholder\"></div>\n  )\n}\n\nexport default Token","import React from 'react'\nimport { useMappedState } from 'redux-react-hook';\nimport { toLocaleFixed } from '../../utils/common'\nimport './index.css'\n\nconst Governance = (props) => {\n  const { poolStat } = useMappedState((state) => ({\n    poolStat: state.gov.poolStat\n  }))\n\n  return (\n    <div className=\"governance-wrapper\">\n      <div className=\"overview-wrapper\">\n        <div className=\"overview-title\">Overview</div>\n        <div className=\"overview-sections\">\n          <div className=\"overview-left\">\n            <p className=\"overview-section-title\">Total UNX</p>\n            <p className=\"overview-detail\">{toLocaleFixed(poolStat.distributionInfo.amount || 0)}</p>\n          </div>\n          <div className=\"overview-right\">\n            <p className=\"overview-section-title\">Daily Distribution</p>\n            <p className=\"overview-detail\">{toLocaleFixed(((poolStat.distributionInfo.amount || 0) / (poolStat.distributionInfo.period || 1) * 86400).toFixed(9))} <span>UNX</span></p>\n          </div>\n        </div>\n      </div>\n      <div className=\"distribution-wrapper\">\n        <div className=\"overview-title\">Distribution</div>\n        <div className=\"distribution-sections\">\n          <div className=\"pie-svg\">\n            <svg className=\"donut\" width=\"240px\" height=\"240px\" viewBox=\"0 0 42 42\" role=\"img\">\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#2BBE7F\" stroke-width=\"4\" stroke-dasharray=\"80, 20\" stroke-dashoffset=\"100\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"120\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FE332F\" stroke-width=\"4\" stroke-dasharray=\"8, 92\" stroke-dashoffset=\"219.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"311.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#F4BA5E\" stroke-width=\"4\" stroke-dasharray=\"8, 92\" stroke-dashoffset=\"411\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"503\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#2B3962\" stroke-width=\"4\" stroke-dasharray=\"3, 97\" stroke-dashoffset=\"602.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"699.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#F18DA5\" stroke-width=\"4\" stroke-dasharray=\"1, 99\" stroke-dashoffset=\"799\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"898\"></circle>\n            </svg>\n          </div>\n          <div className=\"pie-desc\">\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#2BBE7F' } }></div>\n              <div className=\"d-item-name\">Community</div>\n              <div className=\"d-item-ratio\">80%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#FE332F' } }></div>\n              <div className=\"d-item-name\">Developer</div>\n              <div className=\"d-item-ratio\">8%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#F4BA5E' } }></div>\n              <div className=\"d-item-name\">Foundation</div>\n              <div className=\"d-item-ratio\">8%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#2B3962' } }></div>\n              <div className=\"d-item-name\">Resoucse Extension</div>\n              <div className=\"d-item-ratio\">3%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#F18DA5' } }></div>\n              <div className=\"d-item-name\">Volunteer</div>\n              <div className=\"d-item-ratio\">1%</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Governance","import { useEffect, useCallback } from 'react'\nimport { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport { GOVERNANCE_ADDRESS } from '../config'\nimport { handleError } from '../utils/errorHandle'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\n\nconst { StringReader, hexstr2str, reverseHex } = utils\n\nexport const useFetchTokens = () => {\n  const { stopInterval, tokens } = useMappedState((state) => ({\n    stopInterval: state.common.stopInterval,\n    tokens: state.common.tokens\n  }))\n  const dispatch = useDispatch()\n  const setLoadingToken = useCallback((loadingToken) => dispatch({ type: 'SET_LOADING_TOKEN', loadingToken }), [])\n  const setTokens = useCallback((tokens) => dispatch({ type: 'SET_TOKENS', tokens }), [])\n  const setStopInterval = useCallback((stopInterval) => dispatch({ type: 'SET_STOP_INTERVAL', stopInterval }), [])\n  const setPoolStat = useCallback((poolStat) => dispatch({ type: 'SET_POOL_STAT', poolStat }), [])\n\n  useEffect(() => {\n    getGovStat()\n    let interval = !stopInterval && !tokens.length && setInterval(() => getGovStat, 1000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokens, stopInterval])\n\n  function getGovStat() {\n    if (!tokens.length) {\n      try {\n        client.api.smartContract.invokeWasmRead({\n          scriptHash: GOVERNANCE_ADDRESS,\n          operation: 'stat',\n          args: []\n        }).then((statStr) => {\n          const strReader = new StringReader(statStr)\n          const distributionInfo = {}\n          distributionInfo.amount = strReader.readUint128() / (10 ** 9)\n          distributionInfo.period = strReader.readUint128()\n          distributionInfo.startTimeStamp = strReader.readUint128()\n          distributionInfo.settledTimeStamp = strReader.readUint128()\n    \n          const pools = {}\n          const poolCount = strReader.readNextLen()\n          for (let i = 0; i < poolCount; i++) {\n            const pool = {}\n            const nameLength = strReader.readNextLen()\n            pool.name = hexstr2str(strReader.read(nameLength))\n            pool.address = reverseHex(strReader.read(20))\n            pool.weight = strReader.readUint128()\n            pools[pool.name] = pool\n          }\n    \n          const upgrade = strReader.readBoolean()\n          const parsedTokens = []\n          const tokenCount = strReader.readNextLen()\n          for (let i = 0; i < tokenCount; i++) {\n            const token = {}\n            token.id = strReader.readUint128()\n            const nameLength = strReader.readNextLen()\n            token.name = hexstr2str(strReader.read(nameLength))\n            token.address = reverseHex(strReader.read(20))\n            token.ty = strReader.readUint8()\n            token.decimals = strReader.readUint128()\n\n            token.value = token.id\n            token.label = token.name\n\n            parsedTokens.push(token)\n          }\n\n          setLoadingToken(false)\n          setTokens(parsedTokens)\n          setPoolStat({\n            distributionInfo,\n            pools,\n            upgrade\n          })\n        })\n        .catch((e) => {\n          console.log(e)\n          handleError(e, (errorCode) => {\n            console.log(errorCode)\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get all tokens', e)\n            }\n          })\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  return null\n}","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useCallback } from 'react'\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport Header from './components/header'\nimport Modal from './components/modal'\nimport Transaction from './pages/transaction'\nimport Swap from './pages/swap'\nimport Pool from './pages/pool'\nimport AddLiquidity from './pages/pool/addLiquidity'\nimport RemoveLiquidity from './pages/pool/removeLiquidity'\nimport Staking from './pages/staking'\nimport StakingDetail from './pages/staking/detail'\nimport Token from './pages/token'\nimport Overview from './pages/governance'\nimport { NETWORK_TYPE, READY_TABS } from './config'\nimport { useFetchTokens } from './hooks/useToken'\nimport './App.css'\n\nexport const App = () => {\n  const Alert = useAlert()\n  const { account, loadingToken } = useMappedState((state) => ({\n    loadingToken: state.common.loadingToken,\n    account: state.wallet.account\n  }))\n  const dispatch = useDispatch()\n  const setAccount = useCallback((account) => dispatch({ type: 'SET_ACCOUNT', account }), [])\n\n  useFetchTokens()\n\n  async function onConnectWallet() {\n    try {\n      await client.api.provider.getProvider()\n      const network = await client.api.network.getNetwork()\n      if (network && network.type !== NETWORK_TYPE) {\n        Alert.error(`Please connect to the ${NETWORK_TYPE}-Net`)\n        return\n      }\n      const accountAddress = await client.api.asset.getAccount()\n      setAccount(accountAddress)\n      localStorage.setItem('account', accountAddress)\n    } catch (e) {\n      if (e === 'NO_PROVIDER') {\n        Alert.error('Please install wallet extension first')\n      }\n    }\n  }\n\n  function onSignOut() {\n    setAccount('')\n    localStorage.setItem('account', '')\n  }\n\n  function renderLoading() {\n    if (loadingToken) {\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper transparent-bg\">\n            <div className=\"modal-icon-loading modal-icon\"></div>\n            <div className=\"modal-text light\">Loading...</div>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  return (\n    <Router>\n      <div className=\"app\">\n        {renderLoading()}\n        {\n          (account === null) && <div className=\"connect-wallet-overlay\">\n            <div className=\"connect-wrapper\">\n              <p className=\"connect-title\">Connect Wallet</p>\n              <div className=\"wallet-item\" onClick={() => onConnectWallet()}>Cyano Wallet</div>\n            </div>\n          </div>\n        }\n        <Modal />\n        <Header onSignOut={() => onSignOut()} onConnectWallet={() => onConnectWallet()} />\n        <div className=\"main-wrapper\">\n          <Switch>\n            {\n              READY_TABS.indexOf('/') >= 0 ?\n              <Route exact path=\"/\">\n                <Staking />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/') >= 0 ?\n              <Route exact path=\"/staking/:id\">\n                <StakingDetail />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/swap\">\n                <Swap />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/pool\">\n                <Pool />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/pool/add\">\n                <AddLiquidity />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/pool/remove/:id\">\n                <RemoveLiquidity />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/trade') >= 0 ?\n              <Route exact path=\"/trade\">\n                <Transaction />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/token') >= 0 ?\n              <Route exact path=\"/token\">\n                <Token />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/governance') >= 0 ?\n              <Route exact path=\"/governance\">\n                <Overview />\n              </Route> : null\n            }\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  )\n}\n","const initState = {\n  infoModal: {\n    show: false,\n    type: '',\n    text: '',\n    extraText: '',\n    extraLink: ''\n  },\n}\n\nexport const modal = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_MODAL':\n      return { ...state, [action.modalType]: action.modalDetail }\n    default:\n      return { ...state }\n  }\n}","const initState = {\n  account: localStorage.getItem('account'),\n  slippage: localStorage.getItem('slippage') || '0.1'\n}\n\nexport const wallet = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_ACCOUNT':\n      return { ...state, account: action.account }\n    case 'SET_SLIPPAGE':\n      localStorage.setItem('slippage', action.slippage)\n      return { ...state, slippage: action.slippage }\n    default:\n      return { ...state }\n  }\n}","const initState = {\n  loadingToken: true,\n  stopInterval: false,\n  tokens: []\n}\n\nexport const common = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_LOADING_TOKEN':\n      return { ...state, loadingToken: action.loadingToken }\n    case 'SET_STOP_INTERVAL':\n      return { ...state, stopInterval: action.stopInterval }\n    case 'SET_TOKENS':\n      return { ...state, tokens: action.tokens }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  poolStat: {\n    distributionInfo: {},\n    pools: {\n      staking: {},\n      swap: {},\n      dex: {}\n    },\n    upgrade: false\n  }\n}\n\nexport const gov = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_POOL_STAT':\n      return { ...state, poolStat: action.poolStat }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  tokens: [],\n  pairs: []\n}\n\nexport const swap = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_SWAP_TOKENS':\n      return { ...state, tokens: action.tokens }\n    case 'SET_PAIRS':\n      return { ...state, pairs: action.pairs }\n    default:\n      return { ...state }\n  }\n}\n","import { combineReducers } from 'redux'\nimport { modal } from './modal'\nimport { wallet } from './wallet'\nimport { common } from './common'\nimport { gov } from './gov'\nimport { swap } from './swap'\n\nconst reducers = combineReducers({\n  modal,\n  wallet,\n  common,\n  gov,\n  swap\n})\n\nexport default reducers","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as Ontology from '@ont-dev/ontology-dapi';\nimport { positions, Provider } from \"react-alert\";\nimport { createStore } from 'redux';\nimport { StoreContext } from 'redux-react-hook';\nimport AlertTemplate from \"react-alert-template-basic\";\nimport reducers from './reducers';\nimport reportWebVitals from './reportWebVitals';\n\nimport './styles/font.css';\nimport './styles/common.css';\nimport './index.css';\n\nconst store = createStore(reducers)\n\nOntology.client.registerClient({});\n\nconst options = {\n  timeout: 5000,\n  position: positions.TOP_CENTER\n};\n\nReactDOM.render(\n  <Provider template={AlertTemplate} {...options}>\n    <StoreContext.Provider value={store}>\n      <App />\n    </StoreContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}