{"version":3,"sources":["../node_modules/milagro-crypto-js/src sync /^/.//.*$","components/input/index.js","config.js","utils/common.js","components/header/index.js","components/modal/index.js","utils/request.js","utils/token.js","utils/errorHandle.js","utils/constants.js","pages/transaction/index.js","components/tokenInput/index.js","hooks/usePair.js","utils/swap.js","pages/swap/index.js","pages/pool/index.js","pages/pool/addLiquidity/index.js","pages/pool/removeLiquidity/index.js","pages/staking/index.js","pages/staking/detail/index.js","pages/token/index.js","pages/synth/index.js","pages/governance/index.js","hooks/useToken.js","App.js","reducers/modal.js","reducers/wallet.js","reducers/common.js","reducers/gov.js","reducers/swap.js","reducers/staking.js","reducers/index.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Input","props","value","cls","disabled","round","decimals","inline","onChange","useState","val","setVal","useEffect","placeholder","handleInput","formattedValue","v","RegExp","test","formatter","target","className","type","onInput","NETWORK_TYPE","GOVERNANCE_ADDRESS","TRANSACTION_BASE_URL","TRANSACTION_AFTERFIX","READY_TABS","toLocaleFixed","num","n","priceNum","parseFloat","Math","toFixed","toString","indexOf","replace","$0","$1","formatAccount","account","substr","Header","showProfilePanel","setShowProfilePanel","useMappedState","state","wallet","slippage","showSiteIntro","setShowSiteIntro","dispatch","useDispatch","setSlippage","useCallback","pathname","useLocation","href","window","location","origin","onClick","rel","renderSiteIntro","to","onConnectWallet","Number","amount","onSignOut","InfoModal","onCloseModal","text","extraLink","extraText","Modal","infoModal","modal","setModal","modalType","modalDetail","modals","show","push","assign","buildModals","instance","axios","create","baseURL","timeout","headers","interceptors","response","use","data","error","Promise","reject","reverseHex","utils","getTokenBalance","token","cb","name","param","scriptHash","address","operation","args","invokeMethod","client","api","smartContract","invokeRead","ty","invokeWasmRead","then","bl","str","split","reverse","total","BigNumber","i","length","plus","times","parseInt","div","request","method","url","resp","targetToken","result","find","t","asset_name","toLowerCase","balance","catch","console","log","getTokenIconDom","slice","tokenName","handleError","callback","json","JSON","parse","Result","PRICE_DECIMALS","SYNTH_PRICE_DECIMALS","ASSET_STATUS","LEVERAGE_TYPE","StringReader","Transaction","pairNameKeyword","setPairNameKeyword","pairs","setPairs","tokenPair","setTokenPair","showPairSelectModal","setShowPairSelectModal","tradeType","setTradeType","tokenBalance","setTokenBalance","makes","setMakes","myMakes","setMyMakes","makeView","setMakeView","price","setPrice","setAmount","setTotal","pool","setPool","lastPrice","setLastPrice","feeRate","setFeeRate","isValid","setIsValid","stopInterval","common","tokens","CONTRACT_ADDRESS","gov","poolStat","pools","dex","setStopInterval","Alert","useAlert","urlPairName","decodeURIComponent","hash","reg","match","getHashString","getMakes","curMakes","filter","m","asset_token_id","price_token_id","pow","onUnmake","make_id","a","assetToken","priceToken","tradePrice","tradeAmount","integerValue","ROUND_DOWN","invokeWasm","gasPrice","gasLimit","requireIdentity","makeResult","transaction","makeId","unmakeResult","getPriceHint","getAmountHint","p","getMakesOfPair","makeStr","parsedMakes","strReader","pairLastPrice","readUint128","j","makeCount","readNextLen","make","errorCode","interval","setInterval","clearInterval","getUserMakes","hexToAddress","read","getStat","statStr","tokenPool","tokenCount","tempToken","tokenPairs","onMake","toUpperCase","tp","generateTokenPool","nameLC","reduce","b","TokenInput","defaultTokenId","inputDisabled","showBalance","withMax","onTokenChange","onAmountChange","balanceChange","setToken","setBalance","label","defaultId","defaultToken","defaultValue","options","isSearchable","components","Option","SingleValue","children","newToken","handleTokenChange","theme","borderRadius","colors","primary","renderTokenSeletion","isNaN","useFetchPairs","swapTokens","swap","SWAP_ADDRESS","setSwapTokens","getSwapStat","pairStr","parsedPairs","pairCount","pair","token1","token2","reserve1","reserve2","lp","tokenIds","tk","REST","findAllPaths","sourceId","targetId","pathArr","findPath","pathNodes","neighborNodes","includes","sort","p1","p2","getInputAmount","output","ceil","getOutputAmount","input","floor","findNextOutput","findPrevInput","bestSwap","paths","originAmount","maxOutput","minInput","Infinity","path","Swap","swapType","setSwapType","setToken1","setToken2","token1Amount","setToken1Amount","token2Amount","setToken2Amount","isValidPair","setIsValidPair","isValidSwap","setIsValidSwap","bestPath","setBestPath","showPrice","setShowPrice","setBalanceChange","history","useHistory","swapResult","validPair","st","onChangeToken1","inputAmount","onToken1AmountChange","onChangeToken2","outputAmount","onToken2AmountChange","handleSwap","abs","getPriceImpact","items","index","getBestPath","Pool","liquidityBalance","setLiquidityBalance","all","myLiquidities","l","lb","pairId","shareOfPool","sqrt","onRemoveLiquidity","generateLiquidityList","AddLiquidity","isFirstProvider","setIsFirstProvider","showPriceInfo","setShowPriceInfo","getPairByToken","getPairPrice","ROUND_UP","addResult","goBack","amountProduct","getShareOfPool","onAdd","RemoveLiquidity","setPair","getLiquidityBalanceByPairId","onRemove","Staking","showClosed","setShowClosed","stakingTokens","staking","STAKING_ADDRESS","setStakingTokens","getStakingTokenBalance","parsedTokens","weight","totalWeight","filteredTokens","originWeight","getTip","openStakingTokens","closedStakingTokens","startsWith","placement","overlay","onSelectToken","generateStakingPool","StakingDetail","stakeToken","setStakeToken","tokenWeight","setTokenWeight","myStake","setMyStake","stakeType","setStakeType","claimableWing","setClaimableWing","showStakingModal","setShowStakingModal","tokenId","getAccountStake","stakeStr","interest","stake","handleStakeClick","action","stakeResult","harvestResult","sToken","getClaimableWing","onHarvest","onStake","Token","Synth","synthType","setSynthType","mintAsset","setMintAsset","mintAmount","setMintAmount","unxNeededForMint","setUnxNeededForMint","burnAsset","setBurnAsset","burnAmount","setBurnAmount","unxGetForBurn","setUnxGetForBurn","exchangeAsset","setExchangeAsset","exchangeToAsset","setExchangeToAsset","exchangeAmount","setExchangeAmount","exchangeToAssets","setExchangeToAssets","exchangeToAmount","setExchangeToAmount","unxToken","setUnxToken","unxPrice","setUnxPrice","setRoi","showMintModal","setShowMintModal","showBurnModal","setShowBurnModal","showExchangeModal","setShowExchangeModal","availableReward","setAvailableReward","marketStat","setMarketStat","stat","setStat","synthPoolWeightRatio","synth","ratio","SYNTH_ADDRESS","marketAssetValue","unxTk","marketAssetBalances","marketTokenBalance","daiTk","accountStakeValue","claimed","accountClaimedValue","reward","transferable","minted","withdrawed","accountWithdrawedStakeValue","minus","getAvailableReward","claimStr","liveAssetCount","liveAssets","asset","assetId","leverageType","readNextByte","entryPrice","lowLimit","highLimit","status","frozenBy","frozenTime","readUint64","frozenAssetCount","frozenAssets","tokenPriceCount","tokenPrices","tokenPrice","liveAsset","currentPrice","unprocessedFrozen","frozenAsset","getMarketStat","marketAssetBalanceCount","marketAssetValueSum","assetBalance","assetPrice","la","accountAssetBalanceCount","accountAssetBalances","accountAssetValueSum","marketStakeValue","parsedMarketStat","accountAssetValue","handleBurnAmountChange","handleExchangeAmountChange","mintResult","burnResult","burnAllResult","exchangeResult","handleFreezeAsset","freezeResult","distributionInfo","period","onBurnAll","onClaim","accountAsset","ab","holdings","fa","isFrozen","effectiveLeverage","toAssets","handleMintAmountChange","handleUnxNeededForMintChange","onMint","handleUnxGetForBurnChange","onBurn","handleChangeExchangeToAsset","handleChengeExchangeToAmount","onExchange","Governance","width","height","viewBox","role","cx","cy","r","fill","stroke","stroke-width","stroke-dasharray","stroke-dashoffset","style","background","hexstr2str","App","loadingToken","setAccount","provider","getProvider","network","getNetwork","getAccount","accountAddress","localStorage","setItem","setLoadingToken","setTokens","setPoolStat","getGovStat","startTimeStamp","settledTimeStamp","poolCount","nameLength","poolName","upgrade","readBoolean","readUint8","useFetchTokens","exact","initState","getItem","reducers","combineReducers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","Ontology","registerClient","position","positions","TOP_CENTER","ReactDOM","render","template","AlertTemplate","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.54d97296.chunk.js","sourcesContent":["var map = {\n\t\"./aes\": 270,\n\t\"./aes.js\": 270,\n\t\"./big\": 271,\n\t\"./big.js\": 271,\n\t\"./ctx\": 171,\n\t\"./ctx.js\": 171,\n\t\"./ecdh\": 272,\n\t\"./ecdh.js\": 272,\n\t\"./ecp\": 273,\n\t\"./ecp.js\": 273,\n\t\"./ecp2\": 274,\n\t\"./ecp2.js\": 274,\n\t\"./ff\": 275,\n\t\"./ff.js\": 275,\n\t\"./fp\": 276,\n\t\"./fp.js\": 276,\n\t\"./fp12\": 277,\n\t\"./fp12.js\": 277,\n\t\"./fp2\": 278,\n\t\"./fp2.js\": 278,\n\t\"./fp4\": 279,\n\t\"./fp4.js\": 279,\n\t\"./gcm\": 280,\n\t\"./gcm.js\": 280,\n\t\"./hash256\": 281,\n\t\"./hash256.js\": 281,\n\t\"./hash384\": 282,\n\t\"./hash384.js\": 282,\n\t\"./hash512\": 283,\n\t\"./hash512.js\": 283,\n\t\"./mpin\": 284,\n\t\"./mpin.js\": 284,\n\t\"./newhope\": 285,\n\t\"./newhope.js\": 285,\n\t\"./nhs\": 286,\n\t\"./nhs.js\": 286,\n\t\"./pair\": 287,\n\t\"./pair.js\": 287,\n\t\"./rand\": 288,\n\t\"./rand.js\": 288,\n\t\"./rom_curve\": 289,\n\t\"./rom_curve.js\": 289,\n\t\"./rom_field\": 290,\n\t\"./rom_field.js\": 290,\n\t\"./rsa\": 291,\n\t\"./rsa.js\": 291,\n\t\"./sha3\": 292,\n\t\"./sha3.js\": 292,\n\t\"./uint64\": 293,\n\t\"./uint64.js\": 293\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 593;","import React, { useState, useEffect } from 'react';\n\nconst Input = (props) => {\n  const { value = '', cls = '', round, disabled, decimals, inline = true, onChange } = props\n  const [val, setVal] = useState('')\n\n  useEffect(() => {\n    setVal(value)\n  //   if (value === '') {\n  //     setVal('')\n  //   } else if (`${value}`.endsWith('.')) {\n  //     setVal(value)\n  //   } else {\n  //     if (round === 'down') {\n  //       setVal(Math.floor(value * (10 ** decimals)) / (10 ** decimals))\n  //     } else if (round === 'up') {\n  //       setVal(Math.ceil(value * (10 ** decimals)) / (10 ** decimals))\n  //     }\n  //   }\n  }, [value])\n\n  const placeholder = decimals > 0 ? '0.0' : '0'\n  const formatter = (v, decimals = 9) => {\n    if (v === '' || v === '0') {\n      return v\n    } else {\n      const reg = (decimals > 0) ? new RegExp(\n        `^(([0-9]{0,9})|(([0]\\\\.\\\\d{0,${decimals}}|[0-9]{0,9}\\\\.\\\\d{0,${decimals}})))$`\n      ) : new RegExp('^[0-9]{0,9}$')\n      if (reg.test(v)) {\n        return v\n      } else {\n        return val\n      }\n    }\n  };\n  const handleInput = (e) => {\n    const formattedValue = formatter(e.target.value, decimals)\n\n    setVal(formattedValue)\n    typeof onChange === 'function' && onChange(formattedValue)\n  }\n\n  // const handleChange = (e) => {\n  //   typeof onChange === 'function' && onChange(e.target.value)\n  // }\n\n  return (\n    <input\n      className={`input ${inline ? 'inline-input' : ''} ${cls}`}\n      type=\"text\"\n      placeholder={placeholder}\n      value={val}\n      disabled={disabled}\n      onInput={(e) => handleInput(e)}\n      // onChange={(e) => handleChange(e)}\n    />\n  );\n};\n\nexport default Input;\n","export const NETWORK_TYPE = 'TEST'\nexport const GOVERNANCE_ADDRESS = '7070a32039fc317ba476801971b3c4328db33be9'\nexport const API_BASE_URL = 'https://polarisexplorer.ont.io'\nexport const TRANSACTION_BASE_URL = 'https://explorer.ont.io/transaction/'\nexport const TRANSACTION_AFTERFIX = '/testnet'\nexport const READY_TABS = ['/', '/swap', '/trade', '/governance', '/synth']","export const getQueryString = (search, name) => {\n  const reg = new RegExp(`(^|&)${name}=([^&]*)(&|$)`, 'i')\n  const value = search.substr(1).match(reg)\n\n  if (value != null) {\n    return (value[2])\n  }\n\n  return null\n}\n\nexport const getHashString = (hash, name) => {\n  const reg = new RegExp(`(^|&|[/?]+)${name}=([^&]*)(&|$)`, 'i')\n  const value = hash.substr(1).match(reg)\n\n  if (value != null) {\n    return (value[2])\n  }\n\n  return null\n}\n\nexport function toLocaleFixed(num, n = 9) {\n  const priceNum = parseFloat(n === 0 ? Math.round(num).toFixed(n) : parseFloat(num).toFixed(n)).toString()\n  return priceNum && (priceNum.indexOf('.') !== -1 ? priceNum.replace(/(\\d)(?=(\\d{3})+\\.)/g, ($0, $1) => `${$1},`) : priceNum.replace(/(?=(\\B\\d{3})+$)/g, ','))\n}\n\nexport const formatAccount = (account = '') => {\n  return `${account.substr(0, 4)}...${account.substr(-4)}`\n}\n","import React, { useState, useCallback } from 'react'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { Link, useLocation } from 'react-router-dom'\nimport Input from '../input'\nimport { READY_TABS } from '../../config'\nimport { formatAccount } from '../../utils/common'\nimport './index.css'\n\nconst Header = (props) => {\n  const [showProfilePanel, setShowProfilePanel] = useState(false)\n  const { account, slippage } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage\n  }))\n  const [showSiteIntro, setShowSiteIntro] = useState(false)\n  const dispatch = useDispatch()\n  const setSlippage = useCallback((slippage) => dispatch({ type: 'SET_SLIPPAGE', slippage }), [])\n  const pathname = useLocation().pathname\n\n  const toggleShowSiteIntro = (show) => {\n    setShowSiteIntro(show)\n  }\n\n  const renderSiteIntro = () => {\n    if (showSiteIntro) {\n      const href = `${window.location.origin}${window.location.pathname}#/trade?pair=ONTd%2FUNX`\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper\">\n            <div className=\"close-btn\" onClick={() => toggleShowSiteIntro(false)}></div>\n            <p className=\"intro-line\">uniq-ex is a pure github based DAO dex, all activities are logged on github.</p>\n            <p className=\"intro-line\">You can open issues for discussion <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/uniq-ex/uniq-ex/issues\">here</a></p>\n            <p className=\"intro-line\">uniq-ex's future business will not be limited to exchanges though, we may enter various DeFi markets like compound or hegic.</p>\n            <p className=\"intro-line\">You can buy UNX(the governance token of uniq-ex) <a target=\"_blank\" rel=\"noreferrer\" href={href}>here</a></p>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  const onSignOut = () => {\n    setShowProfilePanel(false)\n    typeof props.onSignOut === 'function' && props.onSignOut()\n  }\n\n  const onConnectWallet = () => {\n    typeof props.onConnectWallet === 'function' && props.onConnectWallet()\n  }\n\n  const toggleProfilePanel = () => {\n    setShowProfilePanel(!showProfilePanel)\n  }\n\n  return (\n    <div className=\"header-wrapper\">\n      {renderSiteIntro()}\n      <div className=\"header\">\n        <div className=\"content-wrapper\">\n          <div className=\"logo-wrapper\">\n            UNIQ-EX\n            {/* <div className=\"site-intro\" onClick={() => toggleShowSiteIntro(true)}></div> */}\n          </div>\n          <div className=\"nav-list\">\n            { READY_TABS.indexOf('/') >= 0 ? <div className={`nav-item ${pathname === '/' ? 'selected' : ''}`}><Link to=\"/\">Staking</Link></div> : null }\n            { READY_TABS.indexOf('/synth') >= 0 ? <div className={`nav-item ${pathname === '/synth' ? 'selected' : ''}`}><Link to=\"/synth\">Synth</Link></div> : null }\n            { READY_TABS.indexOf('/swap') >= 0 ? <div className={`nav-item ${pathname === '/swap' ? 'selected' : ''}`}><Link to=\"/swap\">Swap</Link></div> : null }\n            { READY_TABS.indexOf('/trade') >= 0 ? <div className={`nav-item ${pathname === '/trade' ? 'selected' : ''}`}><Link to=\"/trade\">Trade</Link></div> : null }\n            { READY_TABS.indexOf('/governance') >= 0 ? <div className={`nav-item ${pathname === '/governance' ? 'selected' : ''}`}><Link to=\"/governance\">Governance</Link></div> : null }\n            { READY_TABS.indexOf('/token') >= 0 ? <div className={`nav-item ${pathname === '/token' ? 'selected' : ''}`}><Link to=\"/token\">Token</Link></div> : null }\n          </div>\n          <div className={`${account ? 'active' : ''} profile-wrapper`}>\n            { !account && <span className=\"connect-btn\" onClick={() => onConnectWallet()}>Connect Wallet</span>}\n            { account && <span className=\"account-address\" onClick={() => toggleProfilePanel()}>{formatAccount(account)}</span> }\n            {\n              showProfilePanel ? (\n                <div className=\"profile-panel\">\n                  <div className=\"setting-wrapper\">\n                    <div className=\"setting-section-title\">SLIPPAGE</div>\n                    <div className=\"slippage-setting\">\n                      <div className={`slippage-item ${Number(slippage) === 0.1 ? 'selected' : ''}`} onClick={() => setSlippage('0.1')}>0.1%</div>\n                      <div className={`slippage-item ${Number(slippage) === 0.5 ? 'selected' : ''}`} onClick={() => setSlippage('0.5')}>0.5%</div>\n                      <div className={`slippage-item ${Number(slippage) === 1 ? 'selected' : ''}`} onClick={() => setSlippage('1.0')}>1.0%</div>\n                      <div className=\"slippage-input-wrapper\">\n                        <Input value={slippage} cls=\"slippage-input\" decimals=\"2\" placeholder={slippage} onChange={(amount) => setSlippage(amount)} />%\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"signout-btn\" onClick={() => onSignOut()}>Sign Out</div>\n                </div>\n              ) : null\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import React, { useCallback } from 'react'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport './index.css'\n\nconst InfoModal = (props) => {\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-wrapper\">\n        <div className=\"close-btn\" onClick={() => props.onCloseModal()}></div>\n        <div className={`modal-icon-${props.type} modal-icon`}></div>\n        <div className={`modal-text-${props.type} modal-text`}>{props.text}</div>\n        <div className=\"modal-extra-text\">\n        {\n          props.extraLink ? (\n            <a className=\"transaction-link\" target=\"_blank\" rel=\"noreferrer\" href={props.extraLink}>{props.extraText}</a>\n          ) : props.extraText\n        }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Modal = (props) => {\n  const { infoModal } = useMappedState((state) => ({\n    infoModal: state.modal.infoModal\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const onCloseInfoModal = () => {\n    setModal('infoModal', Object.assign({}, infoModal, { show: false }))\n  }\n\n  const buildModals = () => {\n    const modals = []\n    if (infoModal.show) {\n      modals.push(<InfoModal {...infoModal} onCloseModal={() => onCloseInfoModal()} />)\n    }\n    return modals\n  }\n\n  return (\n    <div className=\"modal-container\">\n      {buildModals()}\n    </div>\n  )\n}\n\nexport default Modal","import axios from 'axios'\nimport { API_BASE_URL } from '../config'\n\nconst instance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: { 'Content-Type': 'application/json' }\n})\n\ninstance.interceptors.response.use(\n  (response) => {\n    const res = response.data;\n    return res;\n  },\n  (error) => {\n    return Promise.reject(error);\n  },\n);\n\nexport default instance","import { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport request from './request'\n\nconst { reverseHex } = utils\n\nexport const getTokenBalance = (account, token, cb) => {\n  \n  if (token.name !== 'ONT' && token.name !== 'ONG') {\n    const param = {\n      scriptHash: token.address,\n      operation: 'balanceOf',\n      args: [\n        {\n          type: 'Address',\n          value: account,\n        },\n      ],\n    }\n    let invokeMethod = client.api.smartContract.invokeRead\n\n    if (token.ty === 2 || token.ty === 3) {\n      invokeMethod = client.api.smartContract.invokeWasmRead\n    }\n    invokeMethod(param).then((bl) => {\n      if (bl) {\n        const str = reverseHex(bl).split('').reverse()\n        let total = new BigNumber(0)\n        \n        for (let i = 0; i < str.length; i++) {\n          total = total.plus(new BigNumber(16 ** i).times(parseInt(str[i], 16)))\n        }\n        \n        cb(total.div(10 ** token.decimals).toString())\n      }\n    })\n  } else {\n    request({\n      method: 'get',\n      url: `/v2/addresses/${account}/native/balances`\n    }).then((resp) => {\n      if (resp.code === 0) {\n        const targetToken = resp.result.find((t) => t.asset_name === token.name.toLowerCase())\n        cb(targetToken.balance)\n      }\n    })\n    .catch((e) => {\n      console.log(e)\n    })\n  }\n}\n\nexport const getTokenIconDom = (token, cls = '') => {\n  if (token.id) {\n    return (\n      <div className={`token-icon-wrapper ${cls}`}>\n        {\n          token.ty === 3\n            ? token.name.split('-').slice(1).map((tokenName) => (<div key={`${token.name}-${tokenName}`} className={`token-icon-item with-drop-shadow icon-${tokenName}`} />))\n            : (<div className={`token-icon-item icon-${token.name}`} />)\n        }\n      </div>\n    )\n  }\n  return null\n}","export const handleError = (e, callback = () => {}) => {\n  try {\n    const json = JSON.parse(e)\n    if (json.Result === 'wasm contract does not exist') {\n      callback('CONTRACT_ADDRESS_ERROR')\n    }\n  } catch(error) {\n    // TODO\n  }\n}","export const PRICE_DECIMALS = 10 ** 6\nexport const SYNTH_PRICE_DECIMALS = 10 ** 12\nexport const DAI_PRICE = 1\nexport const TRANSACTION_FEE_RATE = 0.001\nexport const ASSET_STATUS = {\n  Live: '00',\n  HighLimit: '01',\n  LowLimit: '02'\n}\nexport const LEVERAGE_TYPE = {\n  Positive: '00',\n  Negative: '01'\n}","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { getTokenBalance } from '../../utils/token'\nimport Input from '../../components/input'\nimport { handleError } from '../../utils/errorHandle'\nimport { getHashString } from '../../utils/common'\nimport { PRICE_DECIMALS } from '../../utils/constants'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Transaction = () => {\n  const [pairNameKeyword, setPairNameKeyword] = useState('')\n  const [pairs, setPairs] = useState([])\n  const [tokenPair, setTokenPair] = useState({})\n  const [showPairSelectModal, setShowPairSelectModal] = useState(false)\n  const [tradeType, setTradeType] = useState('buy')\n  const [tokenBalance, setTokenBalance] = useState('-')\n  const [makes, setMakes] = useState([])\n  const [myMakes, setMyMakes] = useState([])\n  const [makeView, setMakeView] = useState('all')\n  const [price, setPrice] = useState('')\n  const [amount, setAmount] = useState('')\n  const [total, setTotal] = useState('')\n  const [pool, setPool] = useState([])\n  const [lastPrice, setLastPrice] = useState(0)\n  const [feeRate, setFeeRate] = useState(0)\n  const [isValid, setIsValid] = useState(false)\n  const { account, stopInterval, tokens, CONTRACT_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    stopInterval: state.common.stopInterval,\n    tokens: state.common.tokens,\n    CONTRACT_ADDRESS: state.gov.poolStat.pools.dex.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const setStopInterval = useCallback((stopInterval) => dispatch({ type: 'SET_STOP_INTERVAL', stopInterval }), [])\n\n  const Alert = useAlert()\n\n  const urlPairName = decodeURIComponent(getHashString(window.location.hash, 'pair') || '')\n\n  useEffect(() => {\n    if (pairs.length && !tokenPair.name) {\n      setTokenPair(pairs.find((p) => p.name === `${urlPairName}`) || pairs.find((p) => p.name === 'pDAI/UNX'))\n    }\n  }, [pairs])\n\n  useEffect(() => {\n    if (account && tokenPair.name) {\n      setTokenBalance('-')\n      getTokenBalance(account, tradeType === 'buy' ? tokenPair.tokens[1] : tokenPair.tokens[0], (bl) => {\n        setTokenBalance(bl)\n      })\n    }\n  }, [account, tokenPair, tradeType])\n\n  useEffect(() => {\n    function getMakesOfPair() {\n      if (tokenPair.name && CONTRACT_ADDRESS) {\n        try {\n          client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'get_makes_of_pair',\n            args: [\n              {\n                type: 'Long',\n                value: tokenPair.tokens[0].id\n              },\n              {\n                type: 'Long',\n                value: tokenPair.tokens[1].id\n              }\n            ]\n          })\n          .then((makeStr) => {\n            const parsedMakes = []\n            const strReader = new StringReader(makeStr)\n            const pairLastPrice = strReader.readUint128()\n    \n            for (let j = 0; j <= 1; j++) {\n              const makeCount = strReader.readNextLen()\n              for (let i = 0; i < makeCount; i++) {\n                const make = {}\n                make.make_id = strReader.readUint128()\n                make.price = strReader.readUint128()\n                make.amount = new BigNumber(strReader.readUint128()).toString()\n                make.asset_token_id = (j === 0 ? tokenPair.tokens[0].id : tokenPair.tokens[1].id)\n                make.price_token_id = (j === 0 ? tokenPair.tokens[1].id : tokenPair.tokens[0].id)\n        \n                parsedMakes.push(make)\n              }\n            }\n    \n            setLastPrice(pairLastPrice ? pairLastPrice / PRICE_DECIMALS : 0)\n            setMakes(parsedMakes)\n          })\n          .catch((e) => {\n            handleError(e, (errorCode) => {\n              if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n                setStopInterval(true)\n              } else {\n                console.log('get makes of pair', e)\n              }\n            })\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n    getMakesOfPair()\n    const interval = !stopInterval && setInterval(getMakesOfPair, 2000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokenPair, account, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    function getUserMakes() {\n      if (account && CONTRACT_ADDRESS) {\n        try {\n          client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'get_user_makes',\n            args: [\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n          .then((makeStr) => {\n            const parsedMakes = []\n            const strReader = new StringReader(makeStr)\n            const makeCount = strReader.readNextLen()\n            for (let i = 0; i < makeCount; i++) {\n              const make = {}\n              make.address = client.api.utils.hexToAddress(strReader.read(20))\n              make.asset_token_id = strReader.readUint128()\n              make.price_token_id = strReader.readUint128()\n              make.price = strReader.readUint128()\n              make.amount = strReader.readUint128()\n              make.make_id = strReader.readUint128()\n    \n              parsedMakes.push(make)\n            }\n    \n            setMyMakes(parsedMakes)\n          })\n          .catch((e) => {\n            handleError(e, (errorCode) => {\n              if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n                setStopInterval(true)\n              } else {\n                console.log('get user makes', e)\n              }\n            })\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getUserMakes()\n    const interval = !stopInterval && setInterval(getUserMakes, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokenPair, account, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    async function getStat() {\n      if (tokens.length && CONTRACT_ADDRESS) {\n        try {\n          const statStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'stat',\n            args: []\n          })\n          \n          const tokenPool = []\n          const strReader = new StringReader(statStr)\n          setFeeRate(strReader.readUint128())\n          const tokenCount = strReader.readNextLen()\n  \n          for (let i = 0; i < tokenCount; i++) {\n            const token = {}\n            token.id = strReader.readUint128()\n            const tempToken = tokens.find((t) => t.id === token.id)\n            token.balance = new BigNumber(strReader.readUint128()).div(new BigNumber(10 ** tempToken.decimals)).toString()\n  \n            tokenPool.push(Object.assign(tempToken, token))\n          }\n\n          if (!pairs.length) {\n            const tokenPairs = []\n            for (let i = 0; i < tokenPool.length; i++) {\n              for (let j = i + 1; j < tokenPool.length; j++) {\n                tokenPairs.push({\n                  name: `${tokenPool[i].name}/${tokenPool[j].name}`,\n                  tokens: [tokenPool[i], tokenPool[j]]\n                })\n              }\n            }\n\n            setPairs(tokenPairs)\n          }\n\n          setPool(tokenPool)\n        } catch (e) {\n          handleError(e, (errorCode) => {\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get stat', e)\n            }\n          })\n        }\n      }\n    }\n\n    getStat()\n    const interval = setInterval(() => {\n      if (stopInterval) {\n        clearInterval(interval)\n      } else {\n        getStat()\n      }\n    }, 5000)\n    return () => clearInterval(interval)\n  }, [tokens, pairs, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    if (price > 0 && amount > 0) {\n      setTotal(price * amount)\n    }\n  }, [price, amount])\n\n  useEffect(() => {\n    if (price > 0) {\n      setAmount((total || 0) / price)\n    }\n  }, [total])\n\n  useEffect(() => {\n    if (tokenPair.name && price > 0 && amount > 0) {\n      setIsValid(true)\n    } else {\n      setIsValid(false)\n    }\n  }, [tokenPair, amount, price])\n\n  useEffect(() => {\n    setMakeView('all')\n  }, [account])\n\n  function onChangeToUserMakeView() {\n    if (account) {\n      setMakeView('my')\n    } else {\n      Alert.show('Please Connect Wallet First')\n    }\n  }\n\n  function getMakes(type) {\n    if (tokenPair.name) {\n      const curMakes = (makeView === 'my' ? myMakes : makes)\n      if (type === 'sell') {\n        return curMakes.filter((m) => m.asset_token_id === tokenPair.tokens[0].id && m.price_token_id === tokenPair.tokens[1].id).map((m) => {\n          return (\n            <div key={m.make_id} className=\"my-make-item reverse\">\n              <div className=\"make-item-detail make-sell\">{m.price / PRICE_DECIMALS}</div>\n              <div className=\"make-item-detail\">{new BigNumber(m.amount).div(Math.pow(10, tokenPair.tokens[0].decimals)).toString()}</div>\n              { makeView === 'my' && <div className=\"unmake-btn\" onClick={() => onUnmake(m.make_id)}>Cancel</div> }\n            </div>)\n        })\n      } else {\n        return curMakes.filter((m) => m.asset_token_id === tokenPair.tokens[1].id && m.price_token_id === tokenPair.tokens[0].id).map((m) => {\n          return (\n            <div key={m.make_id} className=\"my-make-item\">\n              <div className=\"make-item-detail make-buy\">{PRICE_DECIMALS / m.price}</div>\n              <div className=\"make-item-detail\">{new BigNumber(m.amount).times(m.price).div(PRICE_DECIMALS).div(Math.pow(10, tokenPair.tokens[1].decimals)).toString()}</div>\n              { makeView === 'my' && <div className=\"unmake-btn\" onClick={() => onUnmake(m.make_id)}>Cancel</div> }\n            </div>)\n        })\n      }\n    }\n    return null\n  }\n\n\n\n  async function onMake() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (tokenPair.name && CONTRACT_ADDRESS) {\n      if (price <= 0) {\n        Alert.error('Price should be greater than 0')\n        return\n      }\n      if (amount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const assetToken = tradeType === 'buy' ? tokenPair.tokens[1] : tokenPair.tokens[0]\n        const priceToken = tradeType === 'buy' ? tokenPair.tokens[0] : tokenPair.tokens[1]\n        const tradePrice = tradeType === 'buy' ? 1 / price : price\n        const tradeAmount = tradeType === 'buy' ? total : amount\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: assetToken.id\n          },\n          {\n            type: 'Long',\n            value: priceToken.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(tradePrice).times(PRICE_DECIMALS).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(tradeAmount).times(new BigNumber(10 ** assetToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const makeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: CONTRACT_ADDRESS,\n          operation: 'make',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (makeResult.transaction) {\n          setAmount('')\n          setPrice('')\n          setTotal('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${makeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onUnmake(makeId) {\n    if (account && makeId && CONTRACT_ADDRESS) {\n      try {\n        const unmakeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: CONTRACT_ADDRESS,\n          operation: 'unmake',\n          args: [\n            {\n              type: 'Address',\n              value: account\n            },\n            {\n              type: 'Long',\n              value: makeId\n            }\n          ],\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n        if (unmakeResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${unmakeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function getPriceHint() {\n    if (tokenPair.name) {\n      return tokenPair.tokens[1].name\n    }\n  }\n\n  function getAmountHint() {\n    if (tokenPair.name) {\n      return tokenPair.tokens[0].name\n    }\n  }\n\n  function generateTokenPool() {\n    if (pool.length) {\n      return pool.filter((tp) => Number(tp.balance) !== 0).map((tp) => {\n        return (\n          <div className=\"pool-item\" key={tp.name}>\n            <div className={`icon-${tp.name} token-name`}>{tp.name}</div>\n            <div className=\"token-balance\">{tp.balance}</div>\n          </div>\n        )\n      })\n    }\n  }\n\n  const handlePairClick = (pair) => {\n    setTokenPair(pair)\n    setShowPairSelectModal(false)\n  }\n\n  return (\n    <div className=\"swap-wrapper\">\n      <div className=\"trade-container\">\n        <div className=\"make-wrapper\">\n          <div className=\"container-header\">Trade\n            {\n              tokenPair.name ? (\n                <div className=\"token-pair-select\" onClick={() => setShowPairSelectModal(true)}>\n                  <div className=\"token-pair-name\">{tokenPair.name}</div>\n                </div>\n              ) : null\n            }\n          </div>\n          <div className=\"trade-type-switch\">\n            <div className={`trade-type-item ${tradeType === 'buy' ? 'trade-buy' : ''}`} onClick={() => setTradeType('buy')}>Buy</div>\n            <div className={`trade-type-item ${tradeType === 'sell' ? 'trade-sell' : ''}`} onClick={() => setTradeType('sell')}>Sell</div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Price\n              <span className=\"hint\">{getPriceHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={price} decimals=\"9\" onChange={(amount) => setPrice(amount)} />\n            </div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Amount\n              <span className=\"hint\">{getAmountHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={amount} decimals={tokenPair.tokens ? tokenPair.tokens[0].decimals : '9'} onChange={(amount) => setAmount(amount)} />\n            </div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Total {tradeType === 'buy' ? 'Need' : 'Receive'}\n              <span className=\"hint\">{getPriceHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={total} decimals=\"9\" onChange={(amount) => setTotal(amount)} />\n            </div>\n          </div>\n          { tokenPair.name ? <div className=\"balance-line\">Balance: <span>{tokenBalance} {tradeType === 'buy' ? tokenPair.tokens[1].name : tokenPair.tokens[0].name}</span></div> : null }\n          { feeRate ? <p className=\"fee-rate\">* The fee rate of transaction is {feeRate / 100}%</p> : null }\n          { isValid ? <div className={`make-btn make-btn-${tradeType}`} onClick={() => onMake()}>{tradeType.toUpperCase()} {tokenPair.tokens[0].name}</div> : <div className=\"make-btn disabled\">{tradeType.toUpperCase()} {tokenPair.tokens ? tokenPair.tokens[0].name : ''}</div> }\n        </div>\n        <div className=\"trade-panel\">\n          <div className=\"panel-header\">\n            <div className=\"panel-title\">Order Book</div>\n            <div className=\"tabs\">\n              <div className={makeView === 'all' ? \"tab-wrapper selected\" : \"tab-wrapper\"} onClick={() => setMakeView('all')}>All</div>\n              <div className={makeView === 'my' ? \"tab-wrapper selected\" : \"tab-wrapper\"} onClick={() => onChangeToUserMakeView()}>My</div>\n            </div>\n          </div>\n          <div className=\"list-title\">\n            <div className=\"blank-placeholder\"></div>\n            <div className=\"title-items\">\n              <div className=\"item-text\">Price ({getPriceHint()})</div>\n              <div className=\"item-text\">Amount ({getAmountHint()})</div>\n              { makeView === 'my' && <div className=\"item-placeholder\"></div> }\n            </div>\n          </div>\n          <div className=\"sell-section\">\n            <div className=\"section-title\">Sell</div>\n            <div className=\"make-list reverse\">\n            {getMakes('sell')}\n            </div>\n          </div>\n          {\n            (makeView === 'all' && Number(lastPrice) !== 0) ? <div className=\"last-price-wrapper\">\n              <div className=\"last-price-label\">Last Price</div>\n              <div className=\"last-price\">{lastPrice}</div>\n              <div className=\"last-price-placeholder\"></div>\n            </div> : null\n          }\n          <div className=\"buy-section\">\n            <div className=\"section-title\">Buy</div>\n            <div className=\"make-list\">\n            {getMakes('buy')}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"token-pool\">\n        <div className=\"container-header\">Token Balance</div>\n        <div className=\"pool-items\">\n        {generateTokenPool()}\n        </div>\n      </div>\n      {\n        showPairSelectModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => setShowPairSelectModal(false)}></div>\n              <div className=\"pair-select-modal-wrapper\">\n                <div className=\"pair-select-modal-title\">Select</div>\n                <input type=\"text\" className=\"pair-select-modal-input\" value={pairNameKeyword} onInput={(e) => setPairNameKeyword(e.target.value)} />\n                <div className=\"pair-select-modal-list\">\n                  {\n                    pairs.filter((p) => {\n                      const nameLC = p.name.toLowerCase()\n                      const tNames = pairNameKeyword.split(' ').filter((n) => n)\n                      \n                      return tNames.reduce((a, b) => a && nameLC.indexOf(b) >= 0, true)\n                    }).map((p) => {\n                      return (\n                        <div key={p.name} className=\"pair-select-modal-list-item\" onClick={() => handlePairClick(p)}>\n                          {\n                            p.tokens.map((t) => <div key={`${p.name}-${t.name}`} className={`pair-select-modal-list-item-icon icon-${t.name}`}></div>)\n                          }\n                          <div className=\"pair-select-modal-list-item-name\">{p.name}</div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n    </div>\n  )\n}\n\nexport default Transaction","import React, { useState, useEffect } from 'react'\nimport { useMappedState } from 'redux-react-hook';\nimport Select, { components } from 'react-select'\nimport Input from '../input'\nimport { getTokenBalance } from '../../utils/token'\n\nimport './index.css'\n\nconst TokenInput = (props) => {\n  const { cls, value, round, tokens, defaultTokenId, inputDisabled = false, showBalance = true, withMax = true, onTokenChange, onAmountChange, balanceChange = 0 } = props\n  const [token, setToken] = useState({})\n  const [balance, setBalance] = useState('-')\n  const { account } = useMappedState((state) => ({\n    account: state.wallet.account\n  }))\n\n  useEffect(() => {\n    if (account && showBalance && token.id) {\n      getTokenBalance(account, token, setBalance)\n    }\n  }, [tokens, token, showBalance, account, balanceChange])\n\n  const handleTokenChange = (e) => {\n    if (e.value !== token.id) {\n      const newToken = tokens.find((t) => t.id === e.value)\n\n      setToken(newToken)\n      typeof onTokenChange === 'function' && onTokenChange(newToken)\n    }\n  }\n\n  const renderTokenSeletion = (defaultId) => {\n    if (tokens.length) {\n      const CustomOption = (props) => {\n        const label = props.label.split(' ')[0]\n        return (\n          <components.Option {...props}>\n            <div className=\"option-wrapper\">\n              <div className={`icon-${label} option-icon`}></div>\n              <div className=\"option-label\">{props.label}</div>\n            </div>\n          </components.Option>\n        )\n      }\n      const SingleValue = ({ children, ...props }) => {\n        const label = children.split(' ')[0]\n        return (\n          <components.SingleValue {...props}>\n            <div className=\"option-wrapper\">\n              <div className={`icon-${label} option-icon`}></div>\n              <div className=\"option-label\">{children}</div>\n            </div>\n          </components.SingleValue>\n        )\n      }\n      let defaultToken = defaultId ? (tokens.find((t) => t.id === defaultId) || tokens[0]) : tokens[0]\n\n      if (!token.id || !tokens.find((t) => t.id === token.id)) {\n        setToken(defaultToken)\n      }\n\n      return (\n        <Select\n          className={`token-select ${cls}`}\n          defaultValue={defaultToken}\n          options={tokens}\n          isSearchable={false}\n          components={{ Option: CustomOption, SingleValue }}\n          onChange={(e) => handleTokenChange(e)}\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            colors: {\n              ...theme.colors,\n              primary: '#2c2c2c',\n            },\n          })}\n        />\n      )\n    }\n  }\n\n  const maxInput = () => {\n    if (!isNaN(balance) && typeof onAmountChange === 'function') {\n      onAmountChange(balance)\n    }\n  }\n\n  return (\n    <div className=\"token-input-wrapper\">\n      <div className=\"input-label\">{props.label || 'Input'}\n        { showBalance ? <span className=\"hint\">Balance: {balance}</span> : null }\n      </div>\n      <div className=\"input-wrapper\">\n        { renderTokenSeletion(defaultTokenId) }\n        <Input decimals={token.decimals} disabled={inputDisabled} value={value} round={round} onChange={(value) => onAmountChange(value)} />\n        { withMax && <div className=\"input-max-btn\" onClick={() => maxInput()}>MAX</div> }\n      </div>\n    </div>\n  )\n}\n\nexport default TokenInput\n","import { useEffect, useCallback } from 'react'\nimport { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\n\nconst { StringReader, reverseHex } = utils\n\nexport const useFetchPairs = () => {\n  const { account, tokens, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setSwapTokens = useCallback((tokens) => dispatch({ type: 'SET_SWAP_TOKENS', tokens }), [])\n  const setPairs = useCallback((pairs) => dispatch({ type: 'SET_PAIRS', pairs }), [])\n\n  useEffect(() => {\n    getSwapStat()\n    let interval = setInterval(getSwapStat, 3000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, tokens, swapTokens, SWAP_ADDRESS])\n\n  function getSwapStat() {\n    if (SWAP_ADDRESS) {\n      try {\n        client.api.smartContract.invokeWasmRead({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'stat',\n          args: []\n        })\n        .then((pairStr) => {\n          const parsedPairs = []\n          const strReader = new StringReader(pairStr)\n          const pairCount = strReader.readNextLen()\n          for (let i = 0; i < pairCount; i++) {\n            const pair = {}\n            pair.address = reverseHex(strReader.read(20))\n            pair.token1 = strReader.readUint128()\n            pair.token2 = strReader.readUint128()\n            pair.id = strReader.readUint128()\n            pair.reserve1 = strReader.readUint128()\n            pair.reserve2 = strReader.readUint128()\n            pair.lp = strReader.readUint128()\n\n            parsedPairs.push(pair)\n          }\n\n          const tokenIds = []\n          const tokenCount = strReader.readNextLen()\n          for (let i = 0; i < tokenCount; i++) {\n            tokenIds.push(strReader.readUint128())\n          }\n\n          setPairs(parsedPairs)\n          if (tokens.length && !swapTokens.length) {\n            setSwapTokens(tokenIds.map((t) => tokens.find((tk) => tk.id === t)))\n          }\n        })\n        .catch((e) => {\n          console.log(e)\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  return null\n}","const REST = 0.997\n\nexport const findAllPaths = (pairs, sourceId, targetId) => {\n  let pathArr = []\n  const findPath = (sourceId, targetId, pathNodes = []) => {\n    pathNodes = [...pathNodes]\n    pathNodes.push(sourceId)\n\n    if (sourceId === targetId) {\n      pathArr.push(pathNodes)\n      return\n    }\n\n    let neighborNodes = []\n    pairs.map((p) => {\n      if (p.token1 === sourceId) {\n        neighborNodes.push(p.token2)\n      } else if (p.token2 === sourceId) {\n        neighborNodes.push(p.token1)\n      }\n    })\n\n    for (let id of neighborNodes) {\n      if (!pathNodes.includes(id)) {\n        findPath(id, targetId, pathNodes)\n      }\n    }\n  }\n\n  findPath(sourceId, targetId)\n\n  pathArr.sort((p1, p2) => {\n    return p1.length - p2.length\n  })\n  \n  return pathArr\n}\n\nconst getInputAmount = (output, pair, reverse = false) => {\n  let amount\n  if (reverse) {\n    amount = (pair.reserve1 * pair.reserve2 / (pair.reserve1 - output) - pair.reserve2) / REST\n  } else {\n    amount = (pair.reserve1 * pair.reserve2 / (pair.reserve2 - output) - pair.reserve1) / REST\n  }\n  return Math.ceil(amount)\n}\n\nconst getOutputAmount = (input, pair, reverse = false) => {\n  let amount\n  if (reverse) {\n    amount = pair.reserve1 - pair.reserve1 * pair.reserve2 / (pair.reserve2 + REST * input)\n  } else {\n    amount = pair.reserve2 - pair.reserve1 * pair.reserve2 / (pair.reserve1 + REST * input)\n  }\n  return Math.floor(amount)\n}\n\nconst findNextOutput = (input, pairs, token1, token2) => {\n  let pair = pairs.find((p) => p.token1 === token1 && p.token2 === token2)\n\n  if (pair) {\n    return getOutputAmount(input, pair)\n  }\n\n  pair = pairs.find((p) => p.token1 === token2 && p.token2 === token1)\n\n  if (pair) {\n    return getOutputAmount(input, pair, true)\n  }\n}\n\nconst findPrevInput = (output, pairs, token1, token2) => {\n  let pair = pairs.find((p) => p.token1 === token1 && p.token2 === token2)\n\n  if (pair) {\n    return getInputAmount(output, pair)\n  }\n\n  pair = pairs.find((p) => p.token1 === token2 && p.token2 === token1)\n\n  if (pair) {\n    return getInputAmount(output, pair, true)\n  }\n}\n\nexport const bestSwap = (type = 'exactin', amount, pairs, token1, token2) => {\n  const paths = findAllPaths(pairs, token1, token2)\n  const originAmount = amount\n  let maxOutput = 0\n  let minInput = Infinity\n  let path = []\n  \n  for (let i = 0; i < paths.length; i++) {\n    amount = originAmount\n    if (type === 'exactin') {\n      for (let j = 0; j < paths[i].length - 1; j++) {\n        amount = findNextOutput(amount, pairs, paths[i][j], paths[i][j + 1])\n      }\n  \n      if (amount > maxOutput) {\n        maxOutput = amount\n        path = paths[i]\n      }\n    } else {\n      for (let j = paths[i].length - 1; j > 0; j--) {\n        amount = findPrevInput(amount, pairs, paths[i][j - 1], paths[i][j])\n      }\n  \n      if (amount < minInput && amount > 0) {\n        minInput = amount\n        path = paths[i]\n      }\n    }\n  }\n\n  if (type === 'exactin') {\n    return [maxOutput, path]\n  } else if (type === 'exactout') {\n    return [minInput, path]\n  }\n}\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport TokenInput from '../../components/tokenInput'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport { toLocaleFixed } from '../../utils/common'\nimport { bestSwap } from '../../utils/swap'\nimport './index.css'\n\nconst Swap = () => {\n  const [swapType, setSwapType] = useState('exactin')\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState('')\n  const [token2Amount, setToken2Amount] = useState('')\n  const [isValidPair, setIsValidPair] = useState(false)\n  const [isValidSwap, setIsValidSwap] = useState(false)\n  const [bestPath, setBestPath] = useState([])\n  const [showPrice, setShowPrice] = useState(false)\n  const [balanceChange, setBalanceChange] = useState(0)\n  const { account, slippage, pairs, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    pairs: state.swap.pairs,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (token1.id !== token2.id && token1Amount > 0 && token2Amount > 0 && bestPath.length) {\n      setShowPrice(true)\n      setIsValidSwap(true)\n    } else {\n      setShowPrice(false)\n      setIsValidSwap(false)\n    }\n  }, [token1, token2, token1Amount, token2Amount, bestPath])\n\n  useEffect(() => {\n    if (swapTokens.length) {\n      setToken1(swapTokens[0])\n      setToken2(swapTokens[1])\n    }\n  }, [swapTokens])\n\n  useEffect(() => {\n    if (token1.id && token2.id && validPair(token1.id, token2.id)) {\n      setIsValidPair(true)\n    } else {\n      setIsValidPair(false)\n    }\n  }, [token1, token2])\n\n  function validPair(token1, token2) {\n    if (pairs.length) {\n      if (token1 && token2 && pairs.find((p) => (p.token1 === token1 && p.token2 === token2) || (p.token1 === token2 && p.token2 === token1))) {\n        return true\n      }\n    }\n    return false\n  }\n\n  function onChangeToken1(token) {\n    if (token.id !== token1.id) {\n      setToken1(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onChangeToken2(token) {\n    if (token.id !== token2.id) {\n      setToken2(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onToken1AmountChange(amount) {\n    if (amount !== token1Amount) {\n      setSwapType('exactin')\n      setToken1Amount(amount)\n      if (pairs.length && amount) {\n        const inputAmount = amount * (10 ** token1.decimals)\n        const [maxOutput, path] = bestSwap('exactin', inputAmount, pairs, token1.id, token2.id)\n\n        setToken2Amount(new BigNumber(maxOutput).div(10 ** token2.decimals).toString())\n        setBestPath(path)\n      } else if (Number(amount) === 0) {\n        setToken2Amount('')\n      }\n    }\n  }\n\n  function onToken2AmountChange(amount) {\n    if (amount !== token2Amount) {\n      setSwapType('exactout')\n      setToken2Amount(amount)\n      if (pairs.length && amount) {\n        const outputAmount = amount * (10 ** token2.decimals)\n        const [minInput, path] = bestSwap('exactout', outputAmount, pairs, token1.id, token2.id)\n\n        if (minInput === Infinity) {\n          setToken1Amount('')\n        } else {\n          setToken1Amount(new BigNumber(minInput).div(10 ** token1.decimals).toString())\n        }\n        setBestPath(path)\n      } else if (Number(amount) === 0) {\n        setToken1Amount('')\n      }\n    }\n  }\n\n  function onNavigateToPool() {\n    history.push('/pool')\n  }\n\n  async function handleSwap() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (token1Amount <= 0 || token2Amount <= 0) {\n      Alert.error('Amount should be greater than 0')\n      return\n    }\n    if (token1.id && token1.id === token2.id) {\n      Alert.error('Input should be different')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Array',\n            value: bestPath.map((p) => ({ type: 'Long', value: p }))\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const swapResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: swapType === 'exactin' ? 'swap_exact_tokens_for_tokens' : 'swap_tokens_for_exact_tokens',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (swapResult.transaction) {\n          setBalanceChange(balanceChange + 1)\n          setToken1Amount('')\n          setToken2Amount('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${swapResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function getPrice() {\n    return `${toLocaleFixed(token2Amount / token1Amount, 6)} ${token2.name} per ${token1.name}`\n  }\n\n  function getMinReceiveOrMaxSold() {\n    if (swapType === 'exactin') {\n      return <p>Minimum Received:<span>{toLocaleFixed(token2Amount * (1 - slippage / 100), 6)} {token2.name}</span></p>\n    } else {\n      return <p>Maximum Sold:<span>{toLocaleFixed(token1Amount * (1 + slippage / 100), 6)} {token1.name}</span></p>\n    }\n  }\n\n  function getPriceImpact() {\n    let price\n    let pair = pairs.find((p) => p.token1 === token1.id && p.token2 === token2.id)\n\n    if (pair) {\n      price = (pair.reserve2 / (10 ** token2.decimals)) / (pair.reserve1 / (10 ** token1.decimals))\n    } else {\n      pair = pairs.find((p) => p.token1 === token2.id && p.token2 === token1.id)\n\n      if (pair) {\n        price = (pair.reserve1 / (10 ** token1.decimals)) / (pair.reserve2 / (10 ** token2.decimals))\n      }\n    }\n\n    return <p>Price Impact:<span>{Math.abs((token2Amount / token1Amount - price) / price * 100).toFixed(2)}%</span></p>\n  }\n\n  function getBestPath() {\n    if (bestPath.length) {\n      const items = []\n      bestPath.map((t, index) => {\n        const token = swapTokens.find((tk) => tk.id === t)\n        index > 0 && items.push((<div className=\"icon-arrow-right\"></div>))\n        items.push((<div className={`path-icon icon-${token.name}`}>{token.name}</div>))\n\n        return t\n      })\n\n      return items\n    }\n  }\n\n  return (\n    <div className=\"sw-wrapper\">\n      <div className=\"sw-container\">\n        <div className=\"sw-tabs\">\n          <div className=\"sw-tab active\">Swap</div>\n          <div className=\"sw-tab\" onClick={() => onNavigateToPool()}>Pool</div>\n        </div>\n        <div className=\"sw-content\">\n          <TokenInput\n            balanceChange={balanceChange}\n            label=\"From\"\n            tokens={swapTokens}\n            value={token1Amount}\n            round='up'\n            defaultTokenId={swapTokens.length && swapTokens.find((st) => st.name === 'UNX').id}\n            onTokenChange={(token) => onChangeToken1(token)}\n            onAmountChange={(amount) => onToken1AmountChange(amount)} />\n          <div className=\"icon-arrow-down\"></div>\n          <TokenInput\n            balanceChange={balanceChange}\n            label=\"To\"\n            tokens={swapTokens}\n            value={token2Amount}\n            round='down'\n            defaultTokenId={swapTokens.length && swapTokens.find((st) => st.name === 'pDAI').id}\n            onTokenChange={(token) => onChangeToken2(token)}\n            onAmountChange={(amount) => onToken2AmountChange(amount)} />\n          { showPrice ? <div className=\"sw-price-wrapper\">Price<span className=\"sw-price-info\">{getPrice()}</span></div> : null }\n          { isValidPair ? null : <div className=\"add-liquidity-hint\">Add liquidity to enable swaps for this pair.</div> }\n          { isValidPair ? ( isValidSwap ? <div className=\"sw-swap-btn\" onClick={() => handleSwap()}>Swap</div> : <div className=\"sw-swap-btn disabled\">Swap</div> ) : <div className=\"sw-swap-btn disabled\">Invalid Liquidity</div> }\n        </div>\n        {\n          isValidPair && isValidSwap ? (\n            <div className=\"sw-hint-wrapper\">\n              <div className=\"sw-input-output\">{getMinReceiveOrMaxSold()}</div>\n              <div className=\"sw-price-impact\">{getPriceImpact()}</div>\n              <div className=\"sw-best-path\">\n                <p>Route:</p>\n                <div className=\"sw-best-path-list\">\n                  {getBestPath()}\n                </div>\n              </div>\n            </div>\n          ) : null\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Swap\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState } from 'redux-react-hook';\nimport { utils } from 'ontology-ts-sdk'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Pool = () => {\n  const [liquidityBalance, setLiquidityBalance] = useState([])\n  const { account, tokens, pairs, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (account && pairs.length && SWAP_ADDRESS) {\n      const getLiquidityBalanceByPairId = (id) => {\n        return client.api.smartContract.invokeWasmRead({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'balanceOf',\n          args: [\n            {\n              type: 'Long',\n              value: id\n            },\n            {\n              type: 'Address',\n              value: account\n            }\n          ]\n        }).then((resp) => {\n          const strReader = new StringReader(resp)\n          const balance = strReader.readUint128()\n          \n          return { [id]: balance }\n        })\n      }\n      Promise.all(pairs.map((p) => getLiquidityBalanceByPairId(p.id))).then((resp) => {\n        setLiquidityBalance(resp)\n      })\n    }\n  }, [account, pairs, SWAP_ADDRESS])\n\n  function onNavigateToSwap() {\n    history.push('/swap')\n  }\n\n  function onNavigateToAddLiquidity() {\n    history.push('/pool/add')\n  }\n\n  function onRemoveLiquidity(pairId) {\n    history.push(`/pool/remove/${pairId}`)\n  }\n\n  function generateLiquidityList() {\n    const myLiquidities = liquidityBalance.filter((l) => l[Object.keys(l)[0]])\n    if (myLiquidities.length && pairs.length && tokens.length) {\n      return myLiquidities.map((lb) => {\n        const pairId = Object.keys(lb)[0]\n        const pair = pairs.find((p) => `${p.id}` === pairId)\n        const token1 = tokens.find((t) => t.id === pair.token1)\n        const token2 = tokens.find((t) => t.id === pair.token2)\n        const balance = lb[pairId] / (10 ** 18)\n        const shareOfPool = Math.sqrt(Math.pow(balance, 2) / (pair.reserve1 * pair.reserve2 / (10 ** (token1.decimals + token2.decimals))))\n        const token1Amount = (pair.reserve1 * shareOfPool / (10 ** token1.decimals)).toFixed(token1.decimals)\n        const token2Amount = (pair.reserve2 * shareOfPool / (10 ** token2.decimals)).toFixed(token2.decimals)\n        \n        return (\n          <div className=\"pool-liquidity-item\">\n            <div className=\"liquidity-item-detail\">\n              <div className={`token-icon icon-${token1.name}`}></div>\n              <div className={`token-icon icon-${token2.name}`}></div>\n              <div className=\"token-pair\"><strong>{token1.name}/{token2.name}</strong></div>\n              <div className=\"pair-position\"><strong>Pooled</strong>: {token1Amount} / {token2Amount}</div>\n              <div className=\"pool-tokens\"><strong>Pool Tokens</strong>: {balance.toFixed(9)}</div>\n            </div>\n            <div className=\"remove-liquidity-btn\" onClick={() => onRemoveLiquidity(pairId)}>Remove</div>\n          </div>\n        )\n      })\n    } else {\n      return <div className=\"pool-empty-lp\">No Liquidities</div>\n    }\n  }\n\n  return (\n    <div className=\"pool-wrapper\">\n      <div className=\"pool-container\">\n        <div className=\"sw-tabs\">\n          <div className=\"sw-tab\" onClick={() => onNavigateToSwap()}>Swap</div>\n          <div className=\"sw-tab active\">Pool</div>\n        </div>\n        <div className=\"pool-content\">\n          <div className=\"pool-add-liquidity-btn\" onClick={() => onNavigateToAddLiquidity()}>Add Liquidity</div>\n          <div className=\"pool-liquidity-list\">\n            <div className=\"my-liquidity\">Your Liquidity</div>\n            {generateLiquidityList()}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Pool","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport TokenInput from '../../../components/tokenInput'\nimport { useFetchPairs } from '../../../hooks/usePair';\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\nimport './index.css'\n\nconst AddLiquidity = () => {\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState('')\n  const [token2Amount, setToken2Amount] = useState('')\n  const [isValidPair, setIsValidPair] = useState(true)\n  const [isFirstProvider, setIsFirstProvider] = useState(false)\n  const [showPriceInfo, setShowPriceInfo] = useState(false)\n  const [balanceChange, setBalanceChange] = useState(0)\n  const { account, slippage, pairs, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    pairs: state.swap.pairs,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (!token1.id || !token2.id || (token1.id === token2.id)) {\n      setIsValidPair(false)\n    } else {\n      setIsValidPair(true)\n    }\n  }, [token1, token2])\n\n  useEffect(() => {\n    const pair = getPairByToken()\n    if (token1.id && token2.id && token1.id != token2.id && (!pairs.length || !pair || (pair.reserve1 === 0 && pair.reserve2 === 0))) {\n      setIsFirstProvider(true)\n    } else {\n      setIsFirstProvider(false)\n    }\n  }, [pairs, token1, token2])\n\n  useEffect(() => {\n    if (token1.id && token2.id) {\n      setShowPriceInfo(true)\n    } else {\n      setShowPriceInfo(false)\n    }\n  }, [pairs, token1, token2, token1Amount, token2Amount])\n\n  useEffect(() => {\n    if (swapTokens.length) {\n      setToken1(swapTokens[0])\n      setToken2(swapTokens[1])\n    }\n  }, [account, swapTokens])\n\n  function getPairByToken() {\n    return pairs.find((p) => (p.token1 === token1.id && p.token2 === token2.id) || (p.token1 === token2.id && p.token2 === token1.id))\n  }\n\n  function onChangeToken1(token) {\n    if (token.id !== token1.id) {\n      setToken1(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onChangeToken2(token) {\n    if (token.id !== token2.id) {\n      setToken2(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onToken1AmountChange(amount) {\n    setToken1Amount(amount)\n    if (!isFirstProvider) {\n      if (amount) {\n        setToken2Amount(Math.ceil(amount * getPairPrice() * (10 ** token2.decimals)) / (10 ** token2.decimals))\n      } else if (Number(amount) === 0) {\n        setToken2Amount('')\n      }\n    }\n  }\n\n  function onToken2AmountChange(amount) {\n    setToken2Amount(amount)\n    if (!isFirstProvider) {\n      if (amount) {\n        setToken1Amount(Math.ceil(amount / getPairPrice() * (10 ** token1.decimals)) / (10 ** token1.decimals))\n      } else if (Number(amount) === 0) {\n        setToken1Amount('')\n      }\n    }\n  }\n\n  function getPairPrice() {\n    if (token1.id && token2.id && pairs.length) {\n      if (isFirstProvider && token1Amount && token2Amount) {\n        return token2Amount / token1Amount\n      }\n      let pair = pairs.find((p) => p.token1 === token1.id && p.token2 === token2.id)\n      if (pair) {\n        return pair.reserve1 ? (pair.reserve2 / (10 ** token2.decimals)) / (pair.reserve1 / (10 ** token1.decimals)) : 0\n      }\n      pair = pairs.find((p) => p.token1 === token2.id && p.token2 === token1.id)\n      if (pair) {\n        return pair.reserve2 ? (pair.reserve1 / (10 ** token1.decimals)) / (pair.reserve2 / (10 ** token2.decimals)) : 0\n      }\n    }\n\n    return 0\n  }\n\n  function getShareOfPool() {\n    if (isFirstProvider) {\n      return '100%'\n    } else {\n      const pair = getPairByToken()\n      const amountProduct = token1Amount * (10 ** token1.decimals) * token2Amount * (10 ** token2.decimals)\n\n      if (pair) {\n        return `${(amountProduct / (amountProduct + pair.reserve1 * pair.reserve2) * 100).toFixed(2)}%`\n      }\n      return `0%`\n    }\n  }\n\n  function onNavigateToPool() {\n    history.goBack()\n  }\n\n  async function onAdd() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (token1Amount <= 0 || token2Amount <= 0) {\n      Alert.error('Amount should be greater than 0')\n      return\n    }\n    if (token1.id && token1.id === token2.id) {\n      Alert.error('Input should be different')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: token1.id\n          },\n          {\n            type: 'Long',\n            value: token2.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const addResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'add_liquidity',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (addResult.transaction) {\n          setBalanceChange(balanceChange + 1)\n          setToken1Amount('')\n          setToken2Amount('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${addResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"add-liquidity-wrapper\">\n      <div className=\"al-header\">Add Liquidity\n        <div className=\"back-icon\" onClick={() => onNavigateToPool()}></div>\n      </div>\n      <div className=\"al-wrapper\">\n        {\n          isValidPair && isFirstProvider ? (\n            <div className=\"first-provider-hint\">\n              <div><strong>You are the first liquidity provider.</strong><br /><br />The ratio of tokens you add will set the price of this pool.</div>\n            </div>\n          ) : null\n        }\n        <TokenInput\n          balanceChange={balanceChange}\n          tokens={swapTokens}\n          value={token1Amount}\n          defaultTokenId={swapTokens.length && swapTokens.find((st) => st.name === 'UNX').id}\n          onTokenChange={(token) => onChangeToken1(token)}\n          onAmountChange={(amount) => onToken1AmountChange(amount)} />\n        <div className=\"icon-plus\"></div>\n        <TokenInput\n          balanceChange={balanceChange}\n          tokens={swapTokens}\n          value={token2Amount}\n          defaultTokenId={swapTokens.length && swapTokens.find((st) => st.name === 'pDAI').id}\n          onTokenChange={(token) => onChangeToken2(token)}\n          onAmountChange={(amount) => onToken2AmountChange(amount)} />\n        {\n          isValidPair && showPriceInfo ? (\n            <div className=\"al-price-wrapper\">\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{getPairPrice().toFixed(4)}</div>\n                <div className=\"price-item-label\">{token2.name} per {token1.name}</div>\n              </div>\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{(getPairPrice() ? 1 / getPairPrice() : 0).toFixed(4)}</div>\n                <div className=\"price-item-label\">{token1.name} per {token2.name}</div>\n              </div>\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{getShareOfPool()}</div>\n                <div className=\"price-item-label\">Share of Pool</div>\n              </div>\n            </div>\n          ) : null\n        }\n        <div className=\"al-add-btn\" onClick={() => onAdd()}>Add</div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddLiquidity\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { utils } from 'ontology-ts-sdk'\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport Slider from 'rc-slider'\nimport { useFetchPairs } from '../../../hooks/usePair';\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\nimport 'rc-slider/assets/index.css'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst RemoveLiquidity = () => {\n  const [liquidityBalance, setLiquidityBalance] = useState(0)\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState(0)\n  const [token2Amount, setToken2Amount] = useState(0)\n  const [pair, setPair] = useState({})\n  const [amount, setAmount] = useState(0)\n  const [showPrice, setShowPrice] = useState(false)\n  const { account, slippage, tokens, pairs, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n  const location = useLocation()\n  const pairId = location.pathname.match(/\\/([^/]+)$/)[1]\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (account && pairs.length && pairId) {\n      getLiquidityBalanceByPairId(pairId).then((resp) => {\n        setLiquidityBalance(resp)\n      })\n    }\n  }, [account, pairs, SWAP_ADDRESS])\n\n  useEffect(() => {\n    if (tokens.length && pairs.length && pairId) {\n      const pair = pairs.find((p) => `${p.id}` === pairId)\n      setPair(pair)\n      setToken1(tokens.find((t) => t.id === pair.token1))\n      setToken2(tokens.find((t) => t.id === pair.token2))\n      setShowPrice(true)\n    }\n  }, [pairs, tokens])\n\n  useEffect(() => {\n    if (pair && token1.id && token2.id && pairId && liquidityBalance) {\n      const balance = liquidityBalance / (10 ** 18)\n      const shareOfPool = Math.sqrt(Math.pow(balance, 2) / (pair.reserve1 * pair.reserve2 / (10 ** (token1.decimals + token2.decimals))))\n      const token1Amount = (pair.reserve1 * shareOfPool / (10 ** token1.decimals))\n      const token2Amount = (pair.reserve2 * shareOfPool / (10 ** token2.decimals))\n\n      setToken1Amount(amount / 100 * token1Amount)\n      setToken2Amount(amount / 100 * token2Amount)\n    }\n  }, [amount, pair, token1, token2])\n\n  function getLiquidityBalanceByPairId(id) {\n    if (SWAP_ADDRESS) {\n      return client.api.smartContract.invokeWasmRead({\n        scriptHash: SWAP_ADDRESS,\n        operation: 'balanceOf',\n        args: [\n          {\n            type: 'Long',\n            value: id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n      }).then((resp) => {\n        const strReader = new StringReader(resp)\n        const balance = strReader.readUint128()\n        \n        return balance\n      })\n    }\n  }\n\n  function getPairPrice() {\n    return (pair.reserve2 / (10 ** token2.decimals)) / (pair.reserve1 / (10 ** token1.decimals))\n  }\n\n  function onNavigateToPool() {\n    history.goBack()\n  }\n\n  async function onRemove() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: token1.id\n          },\n          {\n            type: 'Long',\n            value: token2.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(liquidityBalance).times(amount / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(10 ** token1.decimals).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(10 ** token2.decimals).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const addResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'remove_liquidity',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (addResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${addResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"remove-liquidity-wrapper\">\n      <div className=\"rl-header\">Remove Liquidity\n        <div className=\"back-icon\" onClick={() => onNavigateToPool()}></div>\n      </div>\n      <div className=\"rl-wrapper\">\n        <div className=\"rl-amount\">\n          <div className=\"rl-amount-label\">Amount<span>{amount}%</span></div>\n          <Slider value={amount} onChange={(e) => setAmount(e)} />\n          <div className=\"quick-items\">\n            <div className=\"quick-item\" onClick={() => setAmount(25)}>25%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(50)}>50%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(75)}>75%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(100)}>Max</div>\n          </div>\n        </div>\n        <div className=\"icon-arrow-down\" />\n        <div className=\"rl-receive-wrapper\">\n          <div className={`receive-token-item icon-${token1.name}`}>\n            {token1.name}\n            <span>{token1Amount}</span>\n          </div>\n          <div className={`receive-token-item icon-${token2.name}`}>\n            {token2.name}\n            <span>{token2Amount}</span>\n          </div>\n        </div>\n        {\n          showPrice ? (\n            <div className=\"rl-price-wrapper\">\n              <div className=\"price-wrapper-lable\">Price</div>\n              <div className=\"price\">1 {token1.name} = {getPairPrice()} {token2.name}</div>\n              <div className=\"price-reverse\">1 {token2.name} = {1 / getPairPrice()} {token1.name}</div>\n            </div>\n          ) : null\n        }\n        { amount ? <div className=\"rl-remove-btn\" onClick={() => onRemove()}>Remove</div> : <div className=\"rl-remove-btn disabled\">Remove</div> }\n      </div>\n    </div>\n  )\n}\n\nexport default RemoveLiquidity","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport Tooltip from 'rc-tooltip'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { getTokenIconDom } from '../../utils/token'\n\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Staking = () => {\n  const [showClosed, setShowClosed] = useState(false)\n  const { account, tokens, stakingTokens, STAKING_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    stakingTokens: state.staking.tokens,\n    STAKING_ADDRESS: state.gov.poolStat.pools.staking.address\n  }))\n  const dispatch = useDispatch()\n  const setStakingTokens = useCallback((tokens) => dispatch({ type: 'SET_STAKING_TOKENS', tokens }), [])\n  const history = useHistory()\n  const Alert = useAlert()\n\n  useEffect(() => {\n    getStakingTokenBalance()\n    let interval = setInterval(() => getStakingTokenBalance, 2000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokens, STAKING_ADDRESS])\n\n  function getStakingTokenBalance() {\n    if (tokens.length && STAKING_ADDRESS) {\n      try {\n        client.api.smartContract.invokeWasmRead({\n          scriptHash: STAKING_ADDRESS,\n          operation: 'stat',\n          args: []\n        }).then((statStr) => {\n          const parsedTokens = []\n          const strReader = new StringReader(statStr)\n          const tokenCount = strReader.readNextLen()\n          for (let i = 0; i < tokenCount; i++) {\n            const token = {}\n            token.id = strReader.readUint128()\n            const tempToken = tokens.find((t) => t.id === token.id)\n            token.weight = strReader.readUint128()\n            token.balance = strReader.readUint128()\n\n            parsedTokens.push(Object.assign(tempToken, token))\n          }\n\n          const totalWeight = parsedTokens.filter((t) => t.balance).reduce((a, b) => a + b.weight, 0)\n          const filteredTokens = parsedTokens.map((t) => {\n            return {\n              ...t,\n              originWeight: t.weight,\n              weight: t.balance ? (t.weight / totalWeight) : 0\n            }\n          })\n\n          setStakingTokens(filteredTokens)\n        })\n        .catch((e) => {\n          console.log(e)\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  // useEffect(() => {\n  //   client.api.smartContract.invokeWasmRead({\n  //     scriptHash: STAKING_ADDRESS,\n  //     operation: 'staking_info',\n  //     args: []\n  //   })\n  //   .then((infoStr) => {\n  //     const info = {}\n  //     const strReader = new StringReader(infoStr)\n  //     info.amount = strReader.readUint128()\n  //     info.period = strReader.readUint128()\n  //     info.start_time = strReader.readUint128()\n  //     info.settled_time = strReader.readUint128()\n  //     info.interest = info.amount / info.period\n\n  //     setStakingInfo(info)\n  //   })\n  //   .catch((e) => {\n  //     handleError(e, (errorCode) => {\n  //       if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n  //         setStopStakingInterval(true)\n  //       } else {\n  //         console.log('get staking info', e)\n  //       }\n  //     })\n  //   })\n  // }, [])\n\n  function onSelectToken(token) {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    history.push(`/staking/${token.id}`)\n  }\n\n  function getTip(token) {\n    return `${token.name} is the hidden receipt for WING ${token.name.replace('f', '')} suppliers`\n  }\n\n  function generateStakingPool() {\n    if (stakingTokens.length) {\n      const openStakingTokens = stakingTokens.filter((t) => !!t.originWeight)\n      const closedStakingTokens = stakingTokens.filter((t) => !t.originWeight)\n\n      return (showClosed ? closedStakingTokens : openStakingTokens).map((token) => {\n        return (\n          <div className={`pool-list-item ${!showClosed ? '' : 'pool-list-item-disabled'}`} key={token.name}>\n            <div className=\"item-detail\">\n              <div className=\"item-detail-wrapper\">\n                { token.ty === 3 && <div className=\"corner-badge\">10X</div> }\n                <div className=\"staking-token\">\n                  {\n                    token.ty === 3 ? (\n                      <div className=\"staking-text\">Deposit\n                        {getTokenIconDom(token, 'stake-lp-token')}\n                      </div>\n                    ) : (\n                      <div className={`staking-text icon-${token.name}`}>Deposit</div>\n                    )\n                  }\n                  {\n                    token.name.startsWith('f') ? (\n                      <Tooltip placement=\"top\" overlay={getTip(token)}>\n                        <div className=\"staking-token-name\">{token.name}</div>\n                      </Tooltip>\n                    ) : <div className=\"staking-token-name\">{token.name}</div>\n                  }\n                </div>\n                <div className=\"earn-line\">Earn<span>UNX</span></div>\n                <div className=\"total-staking\">Total Staking<span>{new BigNumber(token.balance || 0).div(10 ** token.decimals).toString()}</span></div>\n                <div className=\"select-btn\" onClick={() => onSelectToken(token)}>{ showClosed ? 'Unstake' : 'Stake' }</div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    }\n  }\n\n  return (\n    <div className=\"stake-container\">\n      <div className=\"stake-pool\">\n        { !stakingTokens.length ? <div className=\"title\">Loading...</div> : null }\n        {\n          showClosed ? (\n            <div className=\"unstake-pool-title\">\n              <div className=\"back-icon\" onClick={() => setShowClosed(false)}></div>\n              Unstake from Closed Pool\n            </div>\n          ) : null\n        }\n        <div className=\"pool-list\">\n          {generateStakingPool()}\n        </div>\n        { !showClosed ? <div className=\"closed-pool-entrance\" onClick={() => setShowClosed(true)}>Unstake from Closed Pool</div> : null }\n      </div>\n    </div>\n  )\n}\n\nexport default Staking","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport Tooltip from 'rc-tooltip';\nimport Input from '../../../components/input'\nimport { getTokenBalance, getTokenIconDom } from '../../../utils/token'\nimport { GOVERNANCE_ADDRESS, TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\n\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst StakingDetail = (props) => {\n  const [stakeToken, setStakeToken] = useState({})\n  const [tokenBalance, setTokenBalance] = useState('-')\n  const [tokenWeight, setTokenWeight] = useState(1)\n  const [amount, setAmount] = useState('')\n  const [myStake, setMyStake] = useState({})\n  const [stakeType, setStakeType] = useState('stake')\n  const [claimableWing, setClaimableWing] = useState(0)\n  const [showStakingModal, setShowStakingModal] = useState(false)\n  const { account, tokens, stakingTokens, STAKING_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    stakingTokens: state.staking.tokens,\n    STAKING_ADDRESS: state.gov.poolStat.pools.staking.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const Alert = useAlert()\n  const location = useLocation()\n  const history = useHistory()\n  const tokenId = location.pathname.match(/\\/([^/]+)$/)[1]\n\n  useEffect(() => {\n    if (stakingTokens.length) {\n      setTokenWeight(stakingTokens.find((t) => `${t.id}` === tokenId).originWeight)\n    }\n  }, [stakingTokens])\n\n  useEffect(() => {\n    if (account && tokens.length) {\n      const sToken = tokens.find((t) => `${t.id}` === tokenId)\n\n      setStakeToken(sToken)\n      getTokenBalance(account, sToken, setTokenBalance)\n    }\n  }, [tokens, account])\n\n\n  useEffect(() => {\n    const getClaimableWing = () => {\n      if (account && stakeToken.ty === 2) {\n        client.api.smartContract.invokeWasmRead({\n          scriptHash: GOVERNANCE_ADDRESS,\n          operation: 'claimable_wing',\n          args: [\n            {\n              type: 'Address',\n              value: account\n            },\n            {\n              type: 'Long',\n              value: stakeToken.id\n            }\n          ]\n        }).then((resp) => {\n          const strReader = new StringReader(resp)\n\n          setClaimableWing(strReader.readUint128())\n        })\n      }\n    }\n\n    getClaimableWing()\n    let interval = setInterval(getClaimableWing, 10000)\n\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, stakeToken])\n\n  useEffect(() => {\n    if (account && stakeToken.id && STAKING_ADDRESS) {\n      getAccountStake()\n      const interval = setInterval(getAccountStake, 10000)\n      return () => {\n        interval && clearInterval(interval)\n      }\n    }\n  }, [stakeToken, account, STAKING_ADDRESS])\n\n  useEffect(() => {\n    if (!account) {\n      setMyStake({})\n    }\n  }, [account])\n\n  function getAccountStakeByTokenId(id) {\n    return client.api.smartContract.invokeWasmRead({\n      scriptHash: STAKING_ADDRESS,\n      operation: 'account_stake_info',\n      args: [\n        {\n          type: 'Address',\n          value: account\n        },\n        {\n          type: 'Long',\n          value: id\n        }\n      ]\n    }).then((stakeStr) => {\n      const strReader = new StringReader(stakeStr)\n      return {\n        id,\n        balance: new BigNumber(strReader.readUint128() || 0).div(10 ** (stakeToken.decimals || 0)).toString(),\n        interest: strReader.readUint128()\n      }\n    })\n  }\n\n  function getAccountStake() {\n    getAccountStakeByTokenId(tokenId)\n    .then((stake) => {\n      setMyStake(stake)\n    })\n    .catch((e) => {\n      console.log('get account stakes', e)\n    })\n  }\n\n  function handleStakeClick(action) {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    setStakeType(action)\n    setShowStakingModal(true)\n  }\n\n  async function onStake() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (stakeToken.id && STAKING_ADDRESS) {\n      if (amount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      if (stakeType === 'unstake' && amount > myStake.balance) {\n        Alert.error('Amount should be less than your balance')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: stakeToken.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(amount).times(new BigNumber(10 ** stakeToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const param = {\n          scriptHash: STAKING_ADDRESS,\n          operation: stakeType,\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        }\n\n        const stakeResult = await client.api.smartContract.invokeWasm(param)\n\n        if (stakeResult.transaction) {\n          setShowStakingModal(false)\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${stakeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setShowStakingModal(false)\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onHarvest() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (STAKING_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: stakeToken.id\n          }\n        ]\n        const param = {\n          scriptHash: STAKING_ADDRESS,\n          operation: 'harvest',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        }\n\n        const harvestResult = await client.api.smartContract.invokeWasm(param)\n\n        if (harvestResult.transaction) {\n          setShowStakingModal(false)\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${harvestResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function onNavigateToStaking() {\n    history.goBack()\n  }\n\n  const maxInput = () => {\n    if (stakeType === 'stake' && !isNaN(tokenBalance)) {\n      setAmount(tokenBalance)\n    } else if (stakeType === 'unstake' && !isNaN(myStake.balance)) {\n      setAmount(myStake.balance)\n    }\n  }\n\n  return (\n    <div className=\"stake-container\">\n      <div className=\"stake-title\">\n        <div className=\"back-icon\" onClick={() => onNavigateToStaking()} />\n        Earn <span className=\"icon-UNX\">UNX</span> by\n        {getTokenIconDom(stakeToken, 'inline-token-wrapper')}\n        {stakeToken.name || ''}\n      </div>\n      <div className=\"stake-token-detail\">\n        <div className=\"stake-token-amount\">\n          {getTokenIconDom(stakeToken, 'stake-token-wrapper')}\n          <div className=\"stake-token-amount-detail\">\n            <div className=\"stake-token-amount-label\">Current Staked</div>\n            <div className=\"stake-token-amount-info\">{myStake.balance} {stakeToken.name}</div>\n          </div>\n        </div>\n        <div className=\"stake-token-actions\">\n          { tokenWeight ? <div className=\"stake-token-action\" onClick={() => handleStakeClick('stake')}>Stake</div> : null }\n          <div className=\"stake-token-action\" onClick={() => handleStakeClick('unstake')}>Unstake</div>\n        </div>\n      </div>\n      <div className=\"harvest-token-detail\">\n        <div className=\"harvest-token-amount icon-UNX\">\n          <div className=\"harvest-token-amount-label\">Rewards Available</div>\n          <div className=\"harvest-token-amount-info\">{new BigNumber(myStake.interest || 0).div(10 ** 9).toString()} UNX</div>\n        </div>\n        <div className=\"harvest-token-actions\">\n          <div className=\"harvest-token-action\" onClick={() => onHarvest() }>Harvest</div>\n        </div>\n      </div>\n      {\n        stakeToken.ty === 2 ? (\n          <div className=\"claimable-wing-detail\">\n            <div className=\"claimable-wing-amount icon-WING\">{new BigNumber(claimableWing || 0).div(10 ** 9).toString()}\n              <div className=\"claimable-wing-label\">WING Earned\n                <Tooltip placement=\"top\" overlay=\"WING earned by ftoken will be transferred to your account when you stake or unstake\">\n                  <span>?</span>\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      { showStakingModal ? (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper\">\n            <div className=\"close-btn\" onClick={() => { setShowStakingModal(false); setAmount(''); }}></div>\n            <div className=\"stake-wrapper\">\n              <div className={`icon-${stakeToken.name} token-placeholder`}></div>\n              <div className=\"form-item\">\n                <div className=\"input-label\">Amount\n                  {\n                    stakeType === 'stake' ? (\n                      <span className=\"hint\">Balance: {tokenBalance}</span>\n                    ) : (\n                      <span className=\"hint\">Staked: {myStake.balance}</span>\n                    )\n                  }\n                </div>\n                <div className=\"input-wrapper\">\n                  <Input placeholder=\"0.0\" value={amount} decimals={stakeToken.decimals || 0} onChange={(amount) => setAmount(amount)} />\n                  <div className=\"input-max-btn\" onClick={() => maxInput()}>MAX</div>\n                </div>\n              </div>\n              <div className=\"stake-btn\" onClick={() => onStake()}>{ stakeType === 'stake' ? 'Stake' : 'Unstake'}</div>\n            </div>\n          </div>\n        </div>\n      ) : null }\n    </div>\n  )\n}\n\nexport default StakingDetail","import React from 'react'\nimport './index.css'\n\nconst Token = (props) => {\n  return (\n    <div className=\"coming-soon-placeholder\"></div>\n  )\n}\n\nexport default Token","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport Tooltip from 'rc-tooltip';\nimport TokenInput from '../../components/tokenInput';\nimport Input from '../../components/input'\nimport { DAI_PRICE, SYNTH_PRICE_DECIMALS, ASSET_STATUS, LEVERAGE_TYPE, TRANSACTION_FEE_RATE } from '../../utils/constants'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport './index.css'\n\nconst { StringReader, reverseHex } = utils\n\nconst Synth = () => {\n  const [synthType, setSynthType] = useState('mint')\n  const [mintAsset, setMintAsset] = useState({})\n  const [mintAmount, setMintAmount] = useState('')\n  const [unxNeededForMint, setUnxNeededForMint] = useState('')\n  const [burnAsset, setBurnAsset] = useState({})\n  const [burnAmount, setBurnAmount] = useState('')\n  const [unxGetForBurn, setUnxGetForBurn] = useState('')\n  const [exchangeAsset, setExchangeAsset] = useState({})\n  const [exchangeToAsset, setExchangeToAsset] = useState({})\n  const [exchangeAmount, setExchangeAmount] = useState('')\n  const [exchangeToAssets, setExchangeToAssets] = useState([])\n  const [exchangeToAmount, setExchangeToAmount] = useState('')\n  const [unxToken, setUnxToken] = useState({})\n  const [unxPrice, setUnxPrice] = useState(0)\n  const [roi, setRoi] = useState(0)\n  const [showMintModal, setShowMintModal] = useState(false)\n  const [showBurnModal, setShowBurnModal] = useState(false)\n  const [showExchangeModal, setShowExchangeModal] = useState(false)\n  const [availableReward, setAvailableReward] = useState(0)\n  const [marketStat, setMarketStat] = useState({})\n  const [stat, setStat] = useState({})\n  const { account, tokens, pairs, poolStat, synthPoolWeightRatio, SYNTH_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    poolStat: state.gov.poolStat,\n    synthPoolWeightRatio: state.gov.poolStat.pools.synth.ratio,\n    SYNTH_ADDRESS: state.gov.poolStat.pools.synth.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const Alert = useAlert()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (tokens.length) {\n      setUnxToken(tokens.find((t) => t.name === 'UNX'))\n    }\n  }, [tokens])\n\n  useEffect(() => {\n    if (tokens.length && pairs.length && (!unxPrice || unxPrice === '0') && marketStat.marketAssetValue) {\n      const unxTk = tokens.find((t) => t.name === 'UNX')\n      if (!marketStat.marketAssetBalances.length) {\n        const daiTk = tokens.find((t) => t.name === 'pDAI')\n        const pair = pairs.find((p) => (p.token1 === unxTk.id && p.token2 === daiTk.id) || (p.token2 === unxTk.id && p.token1 === daiTk.id))\n\n        if (pair) {\n          if (pair.token1 === unxTk.id) {\n            setUnxPrice(new BigNumber(pair.reserve2).div(10 ** daiTk.decimals).div(pair.reserve1).times(10 ** unxTk.decimals).times(DAI_PRICE).times(SYNTH_PRICE_DECIMALS).toString())\n          } else {\n            setUnxPrice(new BigNumber(pair.reserve1).div(10 ** daiTk.decimals).div(pair.reserve2).times(10 ** unxTk.decimals).times(DAI_PRICE).times(SYNTH_PRICE_DECIMALS).toString())\n          }\n        }\n      } else {\n        setUnxPrice(new BigNumber(marketStat.marketAssetValue).div(marketStat.marketTokenBalance).times(10 ** unxTk.decimals).toString())\n      }\n\n      setUnxToken(unxTk)\n    }\n  }, [pairs, tokens, marketStat])\n\n  useEffect(() => {\n    if (marketStat.accountStakeValue) {\n      const claimed = marketStat.accountClaimedValue\n      const reward = availableReward\n      const transferable = marketStat.transferable\n      const minted = marketStat.accountStakeValue\n      const withdrawed = marketStat.accountWithdrawedStakeValue\n\n      setRoi((new BigNumber(claimed).plus(reward).plus(transferable).minus(minted).minus(withdrawed)).div(minted).times(100).toFixed(2))\n    }\n  }, [marketStat, availableReward])\n\n  useEffect(() => {\n    function getAvailableReward() {\n      if (account && unxToken.id && SYNTH_ADDRESS) {\n        try {\n          client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'claim_unx',\n            args: [\n              {\n                type: 'Long',\n                value: unxToken.id\n              },\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n          .then((claimStr) => {\n            const strReader = new StringReader(claimStr)\n            const availableReward = strReader.readUint128()\n\n            setAvailableReward(new BigNumber(availableReward).toString())\n          })\n          .catch((e) => {\n            console.log('get market stat', e)\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getAvailableReward()\n    const interval = setInterval(getAvailableReward, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, unxToken, SYNTH_ADDRESS])\n\n  useEffect(() => {\n    function getStat() {\n      if (tokens.length && SYNTH_ADDRESS) {\n        try {\n          client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'stat',\n            args: []\n          }).then((statStr) => {\n            const strReader = new StringReader(statStr)\n    \n            reverseHex(strReader.read(20)) // govAddress\n            strReader.readUint128() // daiTokenId\n            strReader.readUint128() // unxTokenId\n            strReader.readUint128() // pairId\n\n            const liveAssetCount = strReader.readNextLen()\n            const liveAssets = []\n            for (let i = 0; i < liveAssetCount; i++) {\n              const asset = {}\n              asset.assetId = strReader.readUint128()\n              asset.tokenId = strReader.readUint128()\n\n              const token = tokens.find((t) => t.id === asset.tokenId)\n              asset.tokenName = token.name\n              asset.decimals = token.decimals\n              asset.leverageType = strReader.readNextByte()\n              asset.times = strReader.readUint128()\n              asset.entryPrice = strReader.readUint128()\n              asset.lowLimit = strReader.readUint128()\n              asset.highLimit = strReader.readUint128()\n              asset.status = strReader.readNextByte()\n              asset.frozenBy = reverseHex(strReader.read(20))\n              asset.frozenTime = strReader.readUint64()\n    \n              asset.id = asset.assetId\n              asset.value = asset.assetId\n              asset.label = `${asset.tokenName}${asset.times !== 1 ? ` (${asset.times}x)` : ''}`\n              liveAssets.push(asset)\n            }\n\n            const frozenAssetCount = strReader.readNextLen()\n            const frozenAssets = []\n            for (let i = 0; i < frozenAssetCount; i++) {\n              const asset = {}\n              asset.assetId = strReader.readUint128()\n              asset.tokenId = strReader.readUint128()\n\n              const token = tokens.find((t) => t.id === asset.tokenId)\n              asset.tokenName = token.name\n              asset.decimals = token.decimals\n              asset.leverageType = strReader.readNextByte()\n              asset.times = strReader.readUint128()\n              asset.entryPrice = strReader.readUint128()\n              asset.lowLimit = strReader.readUint128()\n              asset.highLimit = strReader.readUint128()\n              asset.status = strReader.readNextByte()\n              asset.frozenBy = reverseHex(strReader.read(20))\n              asset.frozenTime = strReader.readUint64()\n    \n              frozenAssets.push(asset)\n            }\n\n            const tokenPriceCount = strReader.readNextLen()\n            const tokenPrices = []\n            for (let i = 0; i < tokenPriceCount; i++) {\n              const tokenPrice = {}\n              tokenPrice.tokenId = strReader.readUint128()\n              tokenPrice.price = strReader.readUint128()\n    \n              tokenPrices.push(tokenPrice)\n            }\n\n            for (let liveAsset of liveAssets) {\n              const currentPrice = tokenPrices.find((tp) => tp.tokenId === liveAsset.tokenId).price\n              let tokenPrice = currentPrice\n\n              if (liveAsset.lowLimit && currentPrice <= liveAsset.lowLimit) {\n                tokenPrice = liveAsset.lowLimit\n              } else if (liveAsset.highLimit && currentPrice >= liveAsset.highLimit) {\n                tokenPrice = liveAsset.highLimit\n              }\n\n              liveAsset.tokenPrice = tokenPrice\n\n              if (liveAsset.leverageType === LEVERAGE_TYPE.Positive) {\n                liveAsset.price = liveAsset.entryPrice + tokenPrice * liveAsset.times - liveAsset.entryPrice * liveAsset.times\n              } else {\n                liveAsset.price = liveAsset.entryPrice + liveAsset.entryPrice * liveAsset.times - tokenPrice * liveAsset.times\n              }\n\n              if ((liveAsset.lowLimit && liveAsset.tokenPrice <= liveAsset.lowLimit) || (liveAsset.highLimit && liveAsset.tokenPrice >= liveAsset.highLimit)) {\n                liveAsset.unprocessedFrozen = true\n              }\n            }\n\n            for (let frozenAsset of frozenAssets) {\n              frozenAsset.tokenPrice = tokenPrices.find((tp) => tp.tokenId === frozenAsset.tokenId).price\n              if (frozenAsset.status === ASSET_STATUS.HighLimit) {\n                frozenAsset.tokenPrice = frozenAsset.highLimit\n              } else if (frozenAsset.status === ASSET_STATUS.LowLimit) {\n                frozenAsset.tokenPrice = frozenAsset.lowLimit\n              }\n            }\n\n            setStat({\n              liveAssets,\n              frozenAssets,\n              tokenPrices\n            })\n          }).catch((e) => {\n            console.log('get synth stat', e)\n          })\n        } catch (e) {\n          console.log('get synth stat', e)\n        }\n      }\n    }\n\n    getStat()\n    const interval = setInterval(getStat, 5000)\n\n    return () => clearInterval(interval)\n  }, [tokens, SYNTH_ADDRESS])\n\n  useEffect(() => {\n    function getMarketStat() {\n      if (account && unxToken.id && SYNTH_ADDRESS) {\n        try {\n          client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'market_stat',\n            args: [\n              {\n                type: 'Long',\n                value: unxToken.id\n              },\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n          .then((statStr) => {\n            const strReader = new StringReader(statStr)\n\n            const marketAssetBalanceCount = strReader.readNextLen()\n            const marketAssetBalances = []\n            let marketAssetValueSum = new BigNumber(0)\n            for (let i = 0; i < marketAssetBalanceCount; i++) {\n              const assetBalance = {}\n              assetBalance.assetId = strReader.readUint128()\n              assetBalance.balance = strReader.readUint128()\n              assetBalance.assetPrice = strReader.readUint128()\n\n              const asset = stat.liveAssets ? [...stat.liveAssets, ...stat.frozenAssets].find((la) => la.assetId === assetBalance.assetId) : null\n\n              if (asset) {\n                marketAssetValueSum = marketAssetValueSum.plus(new BigNumber(assetBalance.assetPrice).times(assetBalance.balance).div(10 ** asset.decimals))\n              }\n    \n              marketAssetBalances.push(assetBalance)\n            }\n\n            const accountAssetBalanceCount = strReader.readNextLen()\n            const accountAssetBalances = []\n            let accountAssetValueSum = new BigNumber(0)\n            for (let i = 0; i < accountAssetBalanceCount; i++) {\n              const assetBalance = {}\n              assetBalance.assetId = strReader.readUint128()\n              assetBalance.balance = strReader.readUint128()\n              assetBalance.assetPrice = strReader.readUint128()\n\n              const asset = stat.liveAssets ? [...stat.liveAssets, ...stat.frozenAssets].find((la) => la.assetId === assetBalance.assetId) : null\n\n              if (asset) {\n                accountAssetValueSum = accountAssetValueSum.plus(new BigNumber(assetBalance.assetPrice).times(assetBalance.balance).div(10 ** asset.decimals))\n              }\n    \n              accountAssetBalances.push(assetBalance)\n            }\n\n            const marketStakeValue = strReader.readUint128()\n            const accountStakeValue = strReader.readUint128()\n            const marketTokenBalance = strReader.readUint128()\n            const accountClaimedValue = strReader.readUint128()\n            const accountWithdrawedStakeValue = strReader.readUint128()\n            const transferable = (marketAssetValueSum.toString() !== '0') ? accountAssetValueSum.div(marketAssetValueSum).times(marketTokenBalance).toString() : '0'\n\n            const parsedMarketStat = {\n              marketAssetBalances,\n              accountAssetBalances,\n              marketAssetValue: marketAssetValueSum.toString(),\n              accountAssetValue: accountAssetValueSum.toString(),\n              transferable,\n              marketStakeValue,\n              accountStakeValue,\n              marketTokenBalance,\n              accountClaimedValue,\n              accountWithdrawedStakeValue\n            }\n\n            // setMarketAssetValue(marketAssetValueSum.toString())\n            // setAccountAssetValue(accountAssetValueSum.toString())\n            setMarketStat(parsedMarketStat)\n          })\n          .catch((e) => {\n            console.log('get market stat', e)\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getMarketStat()\n    const interval = setInterval(getMarketStat, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, unxToken, stat.liveAssets, SYNTH_ADDRESS])\n\n  const handleMintAmountChange = (amount) => {\n    setMintAmount(amount)\n    if (unxPrice && amount) {\n      setUnxNeededForMint(new BigNumber(amount).times(mintAsset.price).div(unxPrice).div(1 - TRANSACTION_FEE_RATE).toFixed(unxToken.decimals))\n    }\n  }\n\n  const handleUnxNeededForMintChange = (amount) => {\n    setUnxNeededForMint(amount)\n    if (unxPrice && amount) {\n      setMintAmount(new BigNumber(amount).times(unxPrice).div(mintAsset.price).times(1 - TRANSACTION_FEE_RATE).toFixed(mintAsset.decimals))\n    }\n  }\n\n  const handleBurnAmountChange = (amount) => {\n    setBurnAmount(amount)\n    if (unxPrice && amount) {\n      setUnxGetForBurn(new BigNumber(amount).times(burnAsset.assetPrice).div(unxPrice).times(1 - TRANSACTION_FEE_RATE).toFixed(unxToken.decimals))\n    }\n  }\n\n  const handleUnxGetForBurnChange = (amount) => {\n    setUnxGetForBurn(amount)\n    if (unxPrice && amount) {\n      setBurnAmount(new BigNumber(amount).times(unxPrice).div(burnAsset.assetPrice).div(1 - TRANSACTION_FEE_RATE).toFixed(burnAsset.decimals))\n    }\n  }\n\n  const handleExchangeAmountChange = (amount) => {\n    setExchangeAmount(amount)\n    if (amount) {\n      setExchangeToAmount(new BigNumber(exchangeAsset.price).div(exchangeToAsset.price).times(amount).times(10 ** exchangeAsset.decimals).div(10 ** exchangeToAsset.decimals).times(1 - TRANSACTION_FEE_RATE).toFixed(exchangeToAsset.decimals))\n    }\n  }\n\n  const handleChengeExchangeToAmount = (amount) => {\n    setExchangeToAmount(amount)\n    if (amount) {\n      setExchangeAmount(new BigNumber(amount).times(10 ** exchangeToAsset.decimals).div(10 ** exchangeAsset.decimals).times(exchangeToAsset.price).div(exchangeAsset.price).div(1 - TRANSACTION_FEE_RATE).toFixed(exchangeAsset.decimals))\n    }\n  }\n\n  async function onMint() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && mintAsset.assetId && SYNTH_ADDRESS) {\n      if (mintAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(unxNeededForMint).times(new BigNumber(10 ** unxToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: mintAsset.assetId\n          }\n        ]\n        const mintResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'mint',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (mintResult.transaction) {\n          setShowMintModal(false)\n          setMintAmount('')\n          setUnxNeededForMint('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${mintResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setShowMintModal(false)\n        setMintAmount('')\n        setUnxNeededForMint('')\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onBurn() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && burnAsset.assetId && SYNTH_ADDRESS) {\n      if (burnAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: burnAsset.assetId\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(burnAmount).times(new BigNumber(10 ** burnAsset.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const burnResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'burn',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (burnResult.transaction) {\n          setShowBurnModal(false)\n          setBurnAmount('')\n          setUnxGetForBurn('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${burnResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setShowBurnModal(false)\n        setBurnAmount('')\n        setUnxGetForBurn('')\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onBurnAll() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const burnAllResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'burn_all_asset',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (burnAllResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${burnAllResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onExchange() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && exchangeAsset.assetId && SYNTH_ADDRESS) {\n      if (exchangeAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: exchangeAsset.assetId\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(exchangeAmount).times(new BigNumber(10 ** exchangeAsset.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },{\n            type: 'Long',\n            value: exchangeToAsset.assetId\n          }\n        ]\n        const exchangeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'asset_swap',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (exchangeResult.transaction) {\n          setShowExchangeModal(false)\n          setExchangeAmount('')\n          setExchangeToAmount('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${exchangeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setShowExchangeModal(false)\n        setExchangeAmount('')\n        setExchangeToAmount('')\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onClaim() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const mintResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'claim_unx',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (mintResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${mintResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  const handleFreezeAsset = async (asset) => {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: asset.assetId\n          }\n        ]\n        const freezeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'freeze_asset',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (freezeResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${freezeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  const maxBurnAmount = () => {\n    if (burnAsset) {\n      handleBurnAmountChange(burnAsset.balance / (10 ** burnAsset.decimals))\n    }\n  }\n\n  const maxExchangeAmount = () => {\n    if (exchangeAsset) {\n      handleExchangeAmountChange(exchangeAsset.balance / (10 ** exchangeAsset.decimals))\n    }\n  }\n\n  const handleChangeExchangeToAsset = (asset) => {\n    setExchangeToAsset(asset)\n    setExchangeAmount('')\n    setExchangeToAmount('')\n  }\n\n  const renderAssetList = () => {\n    if (synthType === 'mint') {\n      if (stat.liveAssets) {\n        return stat.liveAssets.map((la) => {\n          const accountAsset = marketStat.accountAssetBalances ? marketStat.accountAssetBalances.find((ab) => ab.assetId === la.assetId) : null\n\n          if (accountAsset) {\n            la.holdings = accountAsset.assetPrice / SYNTH_PRICE_DECIMALS * accountAsset.balance / (10 ** la.decimals)\n          }\n\n          return (\n            <div className={`synth-assets-list-item ${la.unprocessedFrozen ? 'unprocessed-frozen' : ''}`} key={la.assetId}>\n              <div className=\"synth-assets-list-item-name\">\n                <div>{la.tokenName}{la.times !== 1 ? ` (${la.times}x)` : ''}\n                  {\n                    la.unprocessedFrozen ? (\n                      <Tooltip placement=\"top\" overlay=\"The first one that freezes an asset will get 1‰ of burning fee from all holders\">\n                        <span onClick={() => handleFreezeAsset(la)}></span>\n                      </Tooltip>\n                    ) : null\n                  }\n                </div>\n              </div>\n              <div className=\"synth-assets-list-item-price\">{la.price / SYNTH_PRICE_DECIMALS}</div>\n              <div className=\"synth-assets-list-item-holding\">{la.holdings || 0}</div>\n              <div className=\"synth-assets-list-item-action\">\n                <div className=\"synth-assets-list-item-action-mint\" onClick={() => { setShowMintModal(true); setMintAsset(la); }}>Mint</div>\n              </div>\n            </div>\n          )\n        })\n      }\n      return null\n    } else {\n      if (marketStat.accountAssetBalances) {\n        const assetList = marketStat.accountAssetBalances.map((ab) => {\n          let asset = stat.liveAssets ? stat.liveAssets.find((la) => la.assetId === ab.assetId) : null\n\n          if (!asset) {\n            asset = stat.frozenAssets ? stat.frozenAssets.find((fa) => fa.assetId === ab.assetId) : null\n\n            if (asset) {\n              asset.isFrozen = true\n            }\n          }\n\n          if (asset) {\n            if (!asset.isFrozen) {\n              if ((asset.lowLimit && asset.tokenPrice <= asset.lowLimit) || (asset.highLimit && asset.tokenPrice >= asset.highLimit)) {\n                asset.unprocessedFrozen = true\n              }\n            }\n            asset.balance = ab.balance\n            asset.assetPrice = ab.assetPrice\n            asset.effectiveLeverage = new BigNumber(asset.assetPrice).times(asset.times).div(new BigNumber(asset.entryPrice).plus((new BigNumber(asset.tokenPrice).minus(asset.entryPrice)).times(asset.times))).toString()\n          }\n          return asset ? (\n            <div className={`synth-assets-list-item ${asset.isFrozen ? 'frozen' : ''} ${asset.unprocessedFrozen ? 'unprocessed-frozen' : ''}`} key={ab.assetId}>\n              <div className=\"synth-assets-list-item-name\">\n                <div>{asset.tokenName}{asset.times !== 1 ? ` (${asset.times}x)` : ''}\n                  {\n                    asset.unprocessedFrozen ? (\n                      <Tooltip placement=\"top\" overlay=\"The first one that freezes an asset will get 1‰ of burning fee from all holders\">\n                        <span onClick={() => handleFreezeAsset(asset)}></span>\n                      </Tooltip>\n                    ) : null\n                  }\n                </div>\n              </div>\n              <div className=\"synth-assets-list-item-price\">{new BigNumber(ab.assetPrice).div(SYNTH_PRICE_DECIMALS).toString()}</div>\n              <div className=\"synth-assets-list-item-holding\">{new BigNumber(ab.assetPrice).div(SYNTH_PRICE_DECIMALS).times(ab.balance).div(10 ** asset.decimals).toString()}</div>\n              <div className=\"synth-assets-list-item-leverage\">{asset.effectiveLeverage}</div>\n              <div className=\"synth-assets-list-item-action\">\n                <div className=\"synth-assets-list-item-action-burn\" onClick={() => { setShowBurnModal(true); setBurnAsset(asset); }}>Burn</div>\n                <div className=\"synth-assets-list-item-action-exchange\"\n                  onClick={() => {\n                    setShowExchangeModal(true)\n                    setExchangeAsset(asset)\n                    const toAssets = stat.liveAssets.filter((la) => la.assetId !== asset.assetId)\n                    setExchangeToAssets(toAssets)\n                    setExchangeToAsset(toAssets[0])\n                  }}\n                >Exchange</div>\n              </div>\n            </div>\n          ) : null\n        })\n\n        return assetList\n      }\n    }\n  }\n\n  return (\n    <div className=\"synth-container\">\n      <div className=\"synth-overview-sections\">\n        <div className=\"synth-overview-section\">\n          <div className=\"synth-overview-sub-section\">\n            <p className=\"synth-overview-section-title\">Staking APY</p>\n            <p className=\"synth-overview-detail\">{(marketStat.marketStakeValue && unxToken.id) ? new BigNumber(poolStat.distributionInfo.amount || 0).div(poolStat.distributionInfo.period || 1).times(86400 * 365).times(10 ** unxToken.decimals).times(synthPoolWeightRatio || 0).div(marketStat.marketStakeValue).toFixed(2) : 0}%</p>\n          </div>\n          <div className=\"synth-overview-section-group\">\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Market Balance</p>\n              <p className=\"synth-overview-detail\">{marketStat.marketTokenBalance ? new BigNumber(marketStat.marketTokenBalance).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span></p>\n            </div>\n          </div>\n        </div>\n        <div className=\"synth-overview-section-right\">\n          <div className=\"synth-overview-sub-section\">\n            <p className=\"synth-overview-section-title\">Transferable</p>\n            <p className=\"synth-overview-detail\">{(marketStat.transferable && marketStat.transferable !== '0') ? new BigNumber(marketStat.transferable).plus(availableReward).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span></p>\n          </div>\n          <div className=\"synth-overview-section-group\">\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Staked Available</p>\n              <p className=\"synth-overview-detail\">{(marketStat.transferable && marketStat.transferable !== '0') ? (new BigNumber(marketStat.transferable)).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span>\n                { (marketStat.transferable && marketStat.transferable !== '0') ? <div className=\"synth-overview-action-btn synth-overview-action-btn-burn\" onClick={() => onBurnAll()}>Burn All</div> : null }\n              </p>\n            </div>\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Rewards Available</p>\n              <p className=\"synth-overview-detail\">{unxToken.id ? new BigNumber(availableReward).div(10 ** unxToken.decimals).toString() : 0} <span>UNX</span>\n                { (availableReward && availableReward !== '0') ? <div className=\"synth-overview-action-btn\" onClick={() => onClaim()}>Claim</div> : null }\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mint-burn-wrapper\">\n        <div className=\"mint-burn-main\">\n          <div className=\"synth-type-switch\">\n            <div className={`synth-type-item ${synthType === 'mint' ? 'selected' : ''}`} onClick={() => setSynthType('mint')}>Mint</div>\n            <div className={`synth-type-item ${synthType === 'burn' ? 'selected' : ''}`} onClick={() => setSynthType('burn')}>Burn</div>\n          </div>\n          <div className=\"synth-assets-panel\">\n            <div className=\"synth-assets-panel-header\">\n              <div className=\"panel-header-item panel-header-item-asset\">Asset</div>\n              <div className=\"panel-header-item\">Price($)</div>\n              <div className=\"panel-header-item\">Holdings($)</div>\n              {\n                synthType === 'burn' ? (\n                  <div className=\"panel-header-item\">Effective Leverage</div>\n                ) : null\n              }\n              <div className=\"panel-header-item panel-header-item-action\"></div>\n            </div>\n            <div className=\"synth-assets-list\">\n              {renderAssetList()}\n            </div>\n          </div>\n        </div>\n        {\n          synthType === 'mint' ? (\n            <div className=\"mint-burn-info\">\n              <div className=\"mint-burn-info-title\">Mint Synthetics by staking UNX</div>\n              <div className=\"mint-burn-info-desc\">UNX stakers earn staking rewards once minted.</div>\n              <div className=\"mint-burn-account-info\">\n                {/* <div className=\"mint-burn-account-info-line\">Total <span>{(marketStat.marketStakeValue || 0) / (10 ** unxToken.decimals) || '-'} UNX</span></div> */}\n                <div className=\"mint-burn-account-info-line\">Minted With <span>{(marketStat.accountStakeValue || 0) / (10 ** unxToken.decimals) || '0'} UNX</span></div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"mint-burn-info\">\n              <div className=\"mint-burn-info-title\">Burn Synthetics to unstake UNX</div>\n              <div className=\"mint-burn-info-desc\">Burn your synthetics to withdraw UNX.</div>\n              <div className=\"mint-burn-account-info\">\n                {/* <div className=\"mint-burn-account-info-line\">Total <span>{(marketStat.marketStakeValue || 0) / (10 ** unxToken.decimals) || '-'} UNX</span></div> */}\n                <div className=\"mint-burn-account-info-line\">Assets($) <span>{new BigNumber(marketStat.accountAssetValue).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n              </div>\n              <div className=\"mint-burn-info-note\"><span>NOTE</span>: when \" Effective Leverage\" is lower than 0.5 or higher than 2.0 times of nominal leverage, your asset will be frozen. <span>You have to burn it within 3 days.</span> Otherwise, asset will be burned and the UNX will be donated to staked pool.</div>\n            </div>\n          )\n        }\n        \n      </div>\n      {\n        showMintModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => setShowMintModal(false)}></div>\n              <div className=\"mint-wrapper\">\n                <div className=\"mint-wrapper-title\">Mint {mintAsset.tokenName}</div>\n                <div className=\"mint-wrapper-info\">Price($)<span>{new BigNumber(mintAsset.price).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount</div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={mintAmount} decimals={mintAsset.decimals || 0} onChange={(amount) => handleMintAmountChange(amount)} />\n                  </div>\n                </div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">You need to pay (UNX)</div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={unxNeededForMint} decimals={unxToken.decimals || 0} onChange={(amount) => handleUnxNeededForMintChange(amount)} />\n                  </div>\n                </div>\n                <div className=\"mint-btn\" onClick={() => onMint()}>Mint</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      {\n        showBurnModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => setShowBurnModal(false)}></div>\n              <div className=\"burn-wrapper\">\n                <div className=\"burn-wrapper-title\">Burn {burnAsset.tokenName}</div>\n                <div className=\"burn-wrapper-info\">Price($)<span>{new BigNumber(burnAsset.assetPrice).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount\n                    <span className=\"hint\">Balance: {new BigNumber(burnAsset.balance).div(10 ** burnAsset.decimals).toString()}</span>\n                  </div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={burnAmount} decimals={burnAsset.decimals || 0} onChange={(amount) => handleBurnAmountChange(amount)} />\n                    <div className=\"input-max-btn\" onClick={() => maxBurnAmount()}>MAX</div>\n                  </div>\n                </div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">You will get (UNX)</div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={unxGetForBurn} decimals={unxToken.decimals || 0} onChange={(amount) => handleUnxGetForBurnChange(amount)} />\n                  </div>\n                </div>\n                <div className=\"burn-btn\" onClick={() => onBurn()}>Burn</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      {\n        showExchangeModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => setShowExchangeModal(false)}></div>\n              <div className=\"exchange-wrapper\">\n                <div className=\"exchange-wrapper-title\">Exchange {exchangeAsset.tokenName}</div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount</div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={exchangeAmount} decimals={exchangeAsset.decimals || 0} onChange={(amount) => handleExchangeAmountChange(amount)} />\n                    <div className=\"input-max-btn\" onClick={() => maxExchangeAmount()}>MAX</div>\n                  </div>\n                </div>\n                <TokenInput\n                  cls=\"asset-select\"\n                  label=\"Exchange to\"\n                  value={exchangeToAmount}\n                  tokens={exchangeToAssets}\n                  showBalance={false}\n                  withMax={false}\n                  onTokenChange={(asset) => handleChangeExchangeToAsset(asset)}\n                  onAmountChange={(amount) => handleChengeExchangeToAmount(amount)}\n                  />\n                <div className=\"exchange-btn\" onClick={() => onExchange()}>Exchange</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n    </div>\n  )\n}\n\nexport default Synth","import React from 'react'\nimport { useMappedState } from 'redux-react-hook';\nimport { toLocaleFixed } from '../../utils/common'\nimport './index.css'\n\nconst Governance = (props) => {\n  const { poolStat } = useMappedState((state) => ({\n    poolStat: state.gov.poolStat\n  }))\n\n  return (\n    <div className=\"governance-wrapper\">\n      <div className=\"overview-wrapper\">\n        <div className=\"overview-title\">Overview</div>\n        <div className=\"overview-sections\">\n          <div className=\"overview-left\">\n            <p className=\"overview-section-title\">Total UNX</p>\n            <p className=\"overview-detail\">{toLocaleFixed(poolStat.distributionInfo.amount || 0)}</p>\n          </div>\n          <div className=\"overview-right\">\n            <p className=\"overview-section-title\">Daily Distribution</p>\n            <p className=\"overview-detail\">{toLocaleFixed(((poolStat.distributionInfo.amount || 0) / (poolStat.distributionInfo.period || 1) * 86400).toFixed(9))} <span>UNX</span></p>\n          </div>\n        </div>\n      </div>\n      <div className=\"distribution-wrapper\">\n        <div className=\"overview-title\">Distribution</div>\n        <div className=\"distribution-sections\">\n          <div className=\"pie-svg\">\n            <svg className=\"donut\" width=\"240px\" height=\"240px\" viewBox=\"0 0 42 42\" role=\"img\">\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#2BBE7F\" stroke-width=\"4\" stroke-dasharray=\"80, 20\" stroke-dashoffset=\"100\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"120\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FE332F\" stroke-width=\"4\" stroke-dasharray=\"8, 92\" stroke-dashoffset=\"219.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"311.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#F4BA5E\" stroke-width=\"4\" stroke-dasharray=\"8, 92\" stroke-dashoffset=\"411\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"503\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#2B3962\" stroke-width=\"4\" stroke-dasharray=\"3, 97\" stroke-dashoffset=\"602.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"699.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#F18DA5\" stroke-width=\"4\" stroke-dasharray=\"1, 99\" stroke-dashoffset=\"799\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"898\"></circle>\n            </svg>\n          </div>\n          <div className=\"pie-desc\">\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#2BBE7F' } }></div>\n              <div className=\"d-item-name\">Community</div>\n              <div className=\"d-item-ratio\">80%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#FE332F' } }></div>\n              <div className=\"d-item-name\">Developer</div>\n              <div className=\"d-item-ratio\">8%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#F4BA5E' } }></div>\n              <div className=\"d-item-name\">Foundation</div>\n              <div className=\"d-item-ratio\">8%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#2B3962' } }></div>\n              <div className=\"d-item-name\">Resoucse Extension</div>\n              <div className=\"d-item-ratio\">3%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#F18DA5' } }></div>\n              <div className=\"d-item-name\">Volunteer</div>\n              <div className=\"d-item-ratio\">1%</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Governance","import { useEffect, useCallback } from 'react'\nimport { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport { GOVERNANCE_ADDRESS } from '../config'\nimport { handleError } from '../utils/errorHandle'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\n\nconst { StringReader, hexstr2str, reverseHex } = utils\n\nexport const useFetchTokens = () => {\n  const { stopInterval, tokens } = useMappedState((state) => ({\n    stopInterval: state.common.stopInterval,\n    tokens: state.common.tokens\n  }))\n  const dispatch = useDispatch()\n  const setLoadingToken = useCallback((loadingToken) => dispatch({ type: 'SET_LOADING_TOKEN', loadingToken }), [])\n  const setTokens = useCallback((tokens) => dispatch({ type: 'SET_TOKENS', tokens }), [])\n  const setStopInterval = useCallback((stopInterval) => dispatch({ type: 'SET_STOP_INTERVAL', stopInterval }), [])\n  const setPoolStat = useCallback((poolStat) => dispatch({ type: 'SET_POOL_STAT', poolStat }), [])\n\n  useEffect(() => {\n    getGovStat()\n    let interval = !stopInterval && !tokens.length && setInterval(() => getGovStat, 1000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokens, stopInterval])\n\n  function getGovStat() {\n    if (!tokens.length) {\n      try {\n        client.api.smartContract.invokeWasmRead({\n          scriptHash: GOVERNANCE_ADDRESS,\n          operation: 'stat',\n          args: []\n        }).then((statStr) => {\n          const strReader = new StringReader(statStr)\n          const distributionInfo = {}\n          distributionInfo.amount = strReader.readUint128() / (10 ** 9)\n          distributionInfo.period = strReader.readUint128()\n          distributionInfo.startTimeStamp = strReader.readUint128()\n          distributionInfo.settledTimeStamp = strReader.readUint128()\n    \n          const pools = {}\n          const poolCount = strReader.readNextLen()\n          let totalWeight = 0\n          for (let i = 0; i < poolCount; i++) {\n            const pool = {}\n            const nameLength = strReader.readNextLen()\n            pool.name = hexstr2str(strReader.read(nameLength))\n            pool.address = reverseHex(strReader.read(20))\n            pool.weight = strReader.readUint128()\n            totalWeight += pool.weight\n            pools[pool.name] = pool\n          }\n\n          for (let poolName in pools) {\n            pools[poolName].ratio = pools[poolName].weight / totalWeight\n          }\n    \n          const upgrade = strReader.readBoolean()\n          const parsedTokens = []\n          const tokenCount = strReader.readNextLen()\n          for (let i = 0; i < tokenCount; i++) {\n            const token = {}\n            token.id = strReader.readUint128()\n            const nameLength = strReader.readNextLen()\n            token.name = hexstr2str(strReader.read(nameLength))\n            token.address = reverseHex(strReader.read(20))\n            token.ty = strReader.readUint8()\n            token.decimals = strReader.readUint128()\n\n            token.value = token.id\n            token.label = token.name\n\n            parsedTokens.push(token)\n          }\n\n          setLoadingToken(false)\n          setTokens(parsedTokens)\n          setPoolStat({\n            distributionInfo,\n            pools,\n            upgrade\n          })\n        })\n        .catch((e) => {\n          console.log(e)\n          handleError(e, (errorCode) => {\n            console.log(errorCode)\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get all tokens', e)\n            }\n          })\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  return null\n}","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useCallback } from 'react'\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport Header from './components/header'\nimport Modal from './components/modal'\nimport Transaction from './pages/transaction'\nimport Swap from './pages/swap'\nimport Pool from './pages/pool'\nimport AddLiquidity from './pages/pool/addLiquidity'\nimport RemoveLiquidity from './pages/pool/removeLiquidity'\nimport Staking from './pages/staking'\nimport StakingDetail from './pages/staking/detail'\nimport Token from './pages/token'\nimport Synth from './pages/synth'\nimport Overview from './pages/governance'\nimport { NETWORK_TYPE, READY_TABS } from './config'\nimport { useFetchTokens } from './hooks/useToken'\nimport './App.css'\n\nexport const App = () => {\n  const Alert = useAlert()\n  const { account, loadingToken } = useMappedState((state) => ({\n    loadingToken: state.common.loadingToken,\n    account: state.wallet.account\n  }))\n  const dispatch = useDispatch()\n  const setAccount = useCallback((account) => dispatch({ type: 'SET_ACCOUNT', account }), [])\n\n  useFetchTokens()\n\n  async function onConnectWallet() {\n    try {\n      await client.api.provider.getProvider()\n      const network = await client.api.network.getNetwork()\n      if (network && network.type !== NETWORK_TYPE) {\n        Alert.error(`Please connect to the ${NETWORK_TYPE}-Net`)\n        return\n      }\n      const accountAddress = await client.api.asset.getAccount()\n      setAccount(accountAddress)\n      localStorage.setItem('account', accountAddress)\n    } catch (e) {\n      if (e === 'NO_PROVIDER') {\n        Alert.error('Please install wallet extension first')\n      }\n    }\n  }\n\n  function onSignOut() {\n    setAccount('')\n    localStorage.setItem('account', '')\n  }\n\n  function renderLoading() {\n    if (loadingToken) {\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper transparent-bg\">\n            <div className=\"modal-icon-loading modal-icon\"></div>\n            <div className=\"modal-text light\">Loading...</div>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  return (\n    <Router>\n      <div className=\"app\">\n        {renderLoading()}\n        {\n          (account === null) && <div className=\"connect-wallet-overlay\">\n            <div className=\"connect-wrapper\">\n              <p className=\"connect-title\">Connect Wallet</p>\n              <div className=\"wallet-item\" onClick={() => onConnectWallet()}>Cyano Wallet</div>\n            </div>\n          </div>\n        }\n        <Modal />\n        <Header onSignOut={() => onSignOut()} onConnectWallet={() => onConnectWallet()} />\n        <div className=\"main-wrapper\">\n          <Switch>\n            {\n              READY_TABS.indexOf('/') >= 0 ?\n              <Route exact path=\"/\">\n                <Staking />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/') >= 0 ?\n              <Route exact path=\"/staking/:id\">\n                <StakingDetail />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/swap\">\n                <Swap />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/pool\">\n                <Pool />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/pool/add\">\n                <AddLiquidity />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/pool/remove/:id\">\n                <RemoveLiquidity />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/trade') >= 0 ?\n              <Route exact path=\"/trade\">\n                <Transaction />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/governance') >= 0 ?\n              <Route exact path=\"/governance\">\n                <Overview />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/token') >= 0 ?\n              <Route exact path=\"/token\">\n                <Token />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/synth') >= 0 ?\n              <Route exact path=\"/synth\">\n                <Synth />\n              </Route> : null\n            }\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  )\n}\n","const initState = {\n  infoModal: {\n    show: false,\n    type: '',\n    text: '',\n    extraText: '',\n    extraLink: ''\n  },\n}\n\nexport const modal = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_MODAL':\n      return { ...state, [action.modalType]: action.modalDetail }\n    default:\n      return { ...state }\n  }\n}","const initState = {\n  account: localStorage.getItem('account'),\n  slippage: localStorage.getItem('slippage') || '0.1'\n}\n\nexport const wallet = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_ACCOUNT':\n      return { ...state, account: action.account }\n    case 'SET_SLIPPAGE':\n      localStorage.setItem('slippage', action.slippage)\n      return { ...state, slippage: action.slippage }\n    default:\n      return { ...state }\n  }\n}","const initState = {\n  loadingToken: true,\n  stopInterval: false,\n  tokens: []\n}\n\nexport const common = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_LOADING_TOKEN':\n      return { ...state, loadingToken: action.loadingToken }\n    case 'SET_STOP_INTERVAL':\n      return { ...state, stopInterval: action.stopInterval }\n    case 'SET_TOKENS':\n      return { ...state, tokens: action.tokens }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  poolStat: {\n    distributionInfo: {},\n    pools: {\n      staking: {},\n      swap: {},\n      dex: {},\n      synth: {}\n    },\n    upgrade: false\n  }\n}\n\nexport const gov = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_POOL_STAT':\n      return { ...state, poolStat: action.poolStat }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  tokens: [],\n  pairs: []\n}\n\nexport const swap = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_SWAP_TOKENS':\n      return { ...state, tokens: action.tokens }\n    case 'SET_PAIRS':\n      return { ...state, pairs: action.pairs }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  tokens: []\n}\n\nexport const staking = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_STAKING_TOKENS':\n      return { ...state, tokens: action.tokens }\n    default:\n      return { ...state }\n  }\n}\n","import { combineReducers } from 'redux'\nimport { modal } from './modal'\nimport { wallet } from './wallet'\nimport { common } from './common'\nimport { gov } from './gov'\nimport { swap } from './swap'\nimport { staking } from './staking'\n\nconst reducers = combineReducers({\n  modal,\n  wallet,\n  common,\n  gov,\n  swap,\n  staking\n})\n\nexport default reducers","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as Ontology from '@ont-dev/ontology-dapi';\nimport { positions, Provider } from \"react-alert\";\nimport { createStore } from 'redux';\nimport { StoreContext } from 'redux-react-hook';\nimport AlertTemplate from \"react-alert-template-basic\";\nimport reducers from './reducers';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'rc-tooltip/assets/bootstrap.css'\nimport './styles/font.css';\nimport './styles/common.css';\nimport './index.css';\n\nconst store = createStore(reducers)\n\nOntology.client.registerClient({});\n\nconst options = {\n  timeout: 5000,\n  position: positions.TOP_CENTER\n};\n\nReactDOM.render(\n  <Provider template={AlertTemplate} {...options}>\n    <StoreContext.Provider value={store}>\n      <App />\n    </StoreContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}