{"version":3,"sources":["../node_modules/milagro-crypto-js/src sync /^/.//.*$","components/input/index.js","config.js","utils/common.js","components/header/index.js","components/modal/index.js","utils/request.js","utils/token.js","utils/errorHandle.js","utils/constants.js","pages/transaction/index.js","components/tokenInput/index.js","hooks/usePair.js","utils/swap.js","pages/swap/index.js","pages/pool/index.js","pages/pool/addLiquidity/index.js","pages/pool/removeLiquidity/index.js","pages/staking/index.js","pages/staking/detail/index.js","pages/token/index.js","pages/option/index.js","utils/eventRequest.js","pages/synth/index.js","pages/governance/index.js","hooks/useToken.js","App.js","reducers/modal.js","reducers/wallet.js","reducers/common.js","reducers/gov.js","reducers/swap.js","reducers/staking.js","reducers/synth.js","reducers/index.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Input","props","value","cls","disabled","round","decimals","inline","onChange","useState","val","setVal","useEffect","placeholder","handleInput","formattedValue","v","RegExp","test","formatter","target","className","type","onInput","NETWORK_TYPE","GOVERNANCE_ADDRESS","TRANSACTION_BASE_URL","TRANSACTION_AFTERFIX","READY_TABS","toLocaleFixed","num","n","priceNum","parseFloat","Math","toFixed","toString","indexOf","replace","$0","$1","formatAccount","account","substr","Header","selectedTab","setSelectedTab","showProfilePanel","setShowProfilePanel","useMappedState","state","wallet","slippage","showSiteIntro","setShowSiteIntro","dispatch","useDispatch","setSlippage","useCallback","pathname","useLocation","tab","href","window","location","origin","onClick","rel","renderSiteIntro","to","onConnectWallet","Number","amount","onSignOut","InfoModal","onCloseModal","text","detail","extraLink","extraText","Modal","infoModal","modal","setModal","modalType","modalDetail","modals","show","push","assign","buildModals","instance","axios","create","baseURL","timeout","headers","interceptors","response","use","data","error","Promise","reject","reverseHex","utils","readBigNumberUint128","reader","str","read","split","reverse","total","BigNumber","i","length","plus","pow","times","parseInt","isZero","getTokenBalance","token","cb","name","param","scriptHash","address","operation","args","invokeMethod","client","api","smartContract","invokeRead","ty","invokeWasmRead","then","bl","div","Request","method","url","resp","targetToken","result","find","t","asset_name","toLowerCase","balance","catch","console","log","getTokenIconDom","slice","tokenName","handleError","callback","json","JSON","parse","Result","PRICE_DECIMALS","SYNTH_PRICE_DECIMALS","ASSET_STATUS","LEVERAGE_TYPE","StringReader","Transaction","pairNameKeyword","setPairNameKeyword","pairs","setPairs","tokenPair","setTokenPair","showPairSelectModal","setShowPairSelectModal","tradeType","setTradeType","tokenBalance","setTokenBalance","makes","setMakes","myMakes","setMyMakes","makeView","setMakeView","price","setPrice","setAmount","setTotal","pool","setPool","lastPrice","setLastPrice","feeRate","setFeeRate","isValid","setIsValid","stopInterval","common","tokens","CONTRACT_ADDRESS","gov","poolStat","pools","dex","setStopInterval","Alert","useAlert","urlPairName","decodeURIComponent","hash","reg","match","getHashString","localStorage","getItem","getMakes","curMakes","filter","m","asset_token_id","price_token_id","isMine","mm","make_id","onUnmake","a","assetToken","priceToken","tradeAmount","integerValue","ROUND_DOWN","invokeWasm","gasPrice","gasLimit","requireIdentity","makeResult","transaction","makeId","unmakeResult","getPriceHint","getAmountHint","p","getMakesOfPair","makeStr","parsedMakes","strReader","pairLastPrice","readUint128","j","makeCount","readNextLen","make","errorCode","interval","setInterval","clearInterval","getUserMakes","hexToAddress","getStat","statStr","tokenPool","tokenCount","tempToken","weight","tokenPairs","onMake","toUpperCase","tp","generateTokenPool","nameLC","reduce","b","pair","setItem","TokenInput","defaultToken","inputDisabled","showBalance","withMax","onTokenChange","onAmountChange","balanceChange","setToken","setBalance","label","dToken","defaultValue","options","isSearchable","components","Option","SingleValue","children","newToken","handleTokenChange","theme","borderRadius","colors","primary","renderTokenSeletion","isNaN","useFetchPairs","swapTokens","swap","SWAP_ADDRESS","setSwapTokens","getSwapStat","pairStr","parsedPairs","pairCount","token1","token2","reserve1","reserve2","lp","tokenIds","tk","REST","findAllPaths","sourceId","targetId","pathArr","findPath","pathNodes","neighborNodes","includes","sort","p1","p2","getInputAmount","output","minus","ROUND_CEIL","getOutputAmount","input","ROUND_FLOOR","findNextOutput","findPrevInput","bestSwap","paths","originAmount","maxOutput","minInput","Infinity","path","gt","lt","Swap","swapType","setSwapType","setToken1","setToken2","token1Amount","setToken1Amount","token2Amount","setToken2Amount","isValidPair","setIsValidPair","isValidSwap","setIsValidSwap","bestPath","setBestPath","showPrice","setShowPrice","setBalanceChange","history","useHistory","swapResult","st","validPair","onChangeToken1","inputAmount","onToken1AmountChange","onChangeToken2","outputAmount","onToken2AmountChange","handleSwap","abs","getPriceImpact","items","index","getBestPath","Pool","liquidityBalance","setLiquidityBalance","all","myLiquidities","l","lb","pairId","shareOfPool","onRemoveLiquidity","generateLiquidityList","AddLiquidity","isFirstProvider","setIsFirstProvider","showPriceInfo","setShowPriceInfo","getPairByToken","getPairPrice","onNavigateToPool","goBack","ROUND_UP","addResult","amountProduct","getShareOfPool","onAdd","RemoveLiquidity","setPair","getLiquidityBalanceByPairId","onRemove","Staking","showClosedEntry","setShowClosedEntry","showClosed","setShowClosed","unxPrice","setUnxPrice","tokenPrices","setTokenPrices","stakingTokens","staking","stakingPoolWeightRatio","ratio","STAKING_ADDRESS","setStakingTokens","getStakingTokenPrice","unxToken","parsedTokenPrices","LPTokens","nonLPTokens","lpt","tn","tokenId","tokenPriceStr","tokenNames","nonUnxToken","getStakingTokenBalance","parsedTokens","totalWeight","filteredTokens","originWeight","getTip","unxTk","daiTk","openStakingTokens","closedStakingTokens","unxAmount","distributionInfo","period","tokenAPY","startsWith","placement","overlay","onSelectToken","generateStakingPool","StakingDetail","stakeToken","setStakeToken","tokenWeight","setTokenWeight","myStake","setMyStake","stakeType","setStakeType","claimableWing","setClaimableWing","showStakingModal","setShowStakingModal","getAccountStake","stakeStr","interest","stake","handleStakeClick","action","stakeResult","harvestResult","sToken","getClaimableWing","onHarvest","onStake","Token","Synth","mintAsset","setMintAsset","mintAmount","setMintAmount","unxNeededForMint","setUnxNeededForMint","burnAsset","setBurnAsset","burnAmount","setBurnAmount","unxGetForBurn","setUnxGetForBurn","exchangeAsset","setExchangeAsset","exchangeToAsset","setExchangeToAsset","exchangeAmount","setExchangeAmount","exchangeToAssets","setExchangeToAssets","exchangeToAmount","setExchangeToAmount","setUnxToken","showMintModal","setShowMintModal","showBurnModal","setShowBurnModal","showExchangeModal","setShowExchangeModal","synth","synthPoolWeightRatio","SYNTH_ADDRESS","stat","marketStat","availableReward","synthType","setStat","setMarketStat","setAvailableReward","setSynthType","marketAssetValue","marketAssetBalances","marketTokenBalance","getAvailableReward","claimStr","liveAssetCount","liveAssets","asset","assetId","leverageType","readNextByte","entryPrice","lowLimit","highLimit","status","frozenBy","frozenTime","readUint64","frozenAssetCount","frozenAssets","tokenPriceCount","tokenPrice","liveAsset","currentPrice","lte","gte","unprocessedFrozen","frozenAsset","getMarketStat","marketAssetBalanceCount","marketAssetValueSum","assetBalance","assetPrice","la","accountAssetBalanceCount","accountAssetBalances","accountAssetValueSum","marketStakeValue","accountStakeValue","accountClaimedValue","accountWithdrawedStakeValue","transferable","parsedMarketStat","accountAssetValue","handleBurnAmountChange","handleExchangeAmountChange","mintResult","EventRequest","Desc","Notify","notify","States","setInfoModal","burnResult","burnAllResult","exchangeResult","claimResult","handleFreezeAsset","freezeResult","calcEffectiveLeverage","getPriceDetail","txt","onBurnAll","onClaim","assetList","accountAsset","ab","showPriceDetail","holdings","effectiveLeverage","fa","isFrozen","toAssets","renderAssetList","handleMintAmountChange","handleUnxNeededForMintChange","onMint","handleUnxGetForBurnChange","onBurn","handleChangeExchangeToAsset","handleChengeExchangeToAmount","onExchange","Governance","width","height","viewBox","role","cx","cy","r","fill","stroke","stroke-width","stroke-dasharray","stroke-dashoffset","style","background","hexstr2str","App","isUpgrading","loadingToken","setAccount","getAccount","accountAddress","retryTimes","provider","getProvider","network","getNetwork","setIsUpgrading","setLoadingToken","setTokens","setPoolStat","getGovStat","startTimeStamp","settledTimeStamp","poolCount","nameLength","poolName","upgrade","readBoolean","readUint8","useFetchTokens","renderUpgrading","Fragment","exact","initState","reducers","combineReducers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","Ontology","registerClient","position","positions","TOP_CENTER","ReactDOM","render","template","AlertTemplate","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.528ff05d.chunk.js","sourcesContent":["var map = {\n\t\"./aes\": 271,\n\t\"./aes.js\": 271,\n\t\"./big\": 272,\n\t\"./big.js\": 272,\n\t\"./ctx\": 172,\n\t\"./ctx.js\": 172,\n\t\"./ecdh\": 273,\n\t\"./ecdh.js\": 273,\n\t\"./ecp\": 274,\n\t\"./ecp.js\": 274,\n\t\"./ecp2\": 275,\n\t\"./ecp2.js\": 275,\n\t\"./ff\": 276,\n\t\"./ff.js\": 276,\n\t\"./fp\": 277,\n\t\"./fp.js\": 277,\n\t\"./fp12\": 278,\n\t\"./fp12.js\": 278,\n\t\"./fp2\": 279,\n\t\"./fp2.js\": 279,\n\t\"./fp4\": 280,\n\t\"./fp4.js\": 280,\n\t\"./gcm\": 281,\n\t\"./gcm.js\": 281,\n\t\"./hash256\": 282,\n\t\"./hash256.js\": 282,\n\t\"./hash384\": 283,\n\t\"./hash384.js\": 283,\n\t\"./hash512\": 284,\n\t\"./hash512.js\": 284,\n\t\"./mpin\": 285,\n\t\"./mpin.js\": 285,\n\t\"./newhope\": 286,\n\t\"./newhope.js\": 286,\n\t\"./nhs\": 287,\n\t\"./nhs.js\": 287,\n\t\"./pair\": 288,\n\t\"./pair.js\": 288,\n\t\"./rand\": 289,\n\t\"./rand.js\": 289,\n\t\"./rom_curve\": 290,\n\t\"./rom_curve.js\": 290,\n\t\"./rom_field\": 291,\n\t\"./rom_field.js\": 291,\n\t\"./rsa\": 292,\n\t\"./rsa.js\": 292,\n\t\"./sha3\": 293,\n\t\"./sha3.js\": 293,\n\t\"./uint64\": 294,\n\t\"./uint64.js\": 294\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 593;","import React, { useState, useEffect } from 'react';\n\nconst Input = (props) => {\n  const { value = '', cls = '', round, disabled, decimals, inline = true, onChange } = props\n  const [val, setVal] = useState('')\n\n  useEffect(() => {\n    setVal(value)\n  //   if (value === '') {\n  //     setVal('')\n  //   } else if (`${value}`.endsWith('.')) {\n  //     setVal(value)\n  //   } else {\n  //     if (round === 'down') {\n  //       setVal(Math.floor(value * (10 ** decimals)) / (10 ** decimals))\n  //     } else if (round === 'up') {\n  //       setVal(Math.ceil(value * (10 ** decimals)) / (10 ** decimals))\n  //     }\n  //   }\n  }, [value])\n\n  const placeholder = decimals > 0 ? '0.0' : '0'\n  const formatter = (v, decimals = 9) => {\n    if (v === '' || v === '0') {\n      return v\n    } else {\n      const reg = (decimals > 0) ? new RegExp(\n        `^(([0-9]{0,20})|(([0]\\\\.\\\\d{0,${decimals}}|[0-9]{0,20}\\\\.\\\\d{0,${decimals}})))$`\n      ) : new RegExp('^[0-9]{0,20}$')\n      if (reg.test(v)) {\n        return v\n      } else {\n        return val\n      }\n    }\n  };\n  const handleInput = (e) => {\n    const formattedValue = formatter(e.target.value, decimals)\n\n    setVal(formattedValue)\n    typeof onChange === 'function' && onChange(formattedValue)\n  }\n\n  // const handleChange = (e) => {\n  //   typeof onChange === 'function' && onChange(e.target.value)\n  // }\n\n  return (\n    <input\n      className={`input ${inline ? 'inline-input' : ''} ${cls}`}\n      type=\"text\"\n      placeholder={placeholder}\n      value={val}\n      disabled={disabled}\n      onInput={(e) => handleInput(e)}\n      // onChange={(e) => handleChange(e)}\n    />\n  );\n};\n\nexport default Input;\n","export const NETWORK_TYPE = 'TEST'\nexport const GOVERNANCE_ADDRESS = '4ff0e29de750e612cf7195b00861b35191ac5bca'\nexport const API_BASE_URL = 'https://polarisexplorer.ont.io'\nexport const TRANSACTION_BASE_URL = 'https://explorer.ont.io/transaction/'\nexport const EVENT_API_BASE_URL = 'https://polaris1.ont.io:10334/api/v1/smartcode/event/txhash/'\nexport const TRANSACTION_AFTERFIX = '/testnet'\nexport const READY_TABS = ['/', '/swap', '/trade', '/governance', '/synth', '/option']","export const getQueryString = (search, name) => {\n  const reg = new RegExp(`(^|&)${name}=([^&]*)(&|$)`, 'i')\n  const value = search.substr(1).match(reg)\n\n  if (value != null) {\n    return (value[2])\n  }\n\n  return null\n}\n\nexport const getHashString = (hash, name) => {\n  const reg = new RegExp(`(^|&|[/?]+)${name}=([^&]*)(&|$)`, 'i')\n  const value = hash.substr(1).match(reg)\n\n  if (value != null) {\n    return (value[2])\n  }\n\n  return null\n}\n\nexport function toLocaleFixed(num, n = 9) {\n  const priceNum = parseFloat(n === 0 ? Math.round(num).toFixed(n) : parseFloat(num).toFixed(n)).toString()\n  return priceNum && (priceNum.indexOf('.') !== -1 ? priceNum.replace(/(\\d)(?=(\\d{3})+\\.)/g, ($0, $1) => `${$1},`) : priceNum.replace(/(?=(\\B\\d{3})+$)/g, ','))\n}\n\nexport const formatAccount = (account = '') => {\n  return `${account.substr(0, 4)}...${account.substr(-4)}`\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { Link, useLocation } from 'react-router-dom'\nimport Input from '../input'\nimport { READY_TABS } from '../../config'\nimport { formatAccount } from '../../utils/common'\nimport './index.css'\n\nconst Header = (props) => {\n  const [selectedTab, setSelectedTab] = useState('')\n  const [showProfilePanel, setShowProfilePanel] = useState(false)\n  const { account, slippage } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage\n  }))\n  const [showSiteIntro, setShowSiteIntro] = useState(false)\n  const dispatch = useDispatch()\n  const setSlippage = useCallback((slippage) => dispatch({ type: 'SET_SLIPPAGE', slippage }), [])\n  const pathname = useLocation().pathname\n\n  const toggleShowSiteIntro = (show) => {\n    setShowSiteIntro(show)\n  }\n\n  useEffect(() => {\n    let tab = ''\n    if (pathname === '/' || pathname.indexOf('/staking') >= 0) {\n      tab = '/'\n    } else if (pathname.indexOf('/synth') >= 0) {\n      tab = '/synth'\n    } else if (pathname.indexOf('/swap') >= 0 || pathname.indexOf('/pool') >= 0) {\n      tab = '/swap'\n    } else if (pathname.indexOf('/trade') >= 0) {\n      tab = '/trade'\n    } else if (pathname.indexOf('/governance') >= 0) {\n      tab = '/governance'\n    } else if (pathname.indexOf('/token') >= 0) {\n      tab = '/token'\n    } else if (pathname.indexOf('/option') >= 0) {\n      tab = '/option'\n    }\n    \n    setSelectedTab(tab)\n  }, [pathname])\n\n  const renderSiteIntro = () => {\n    if (showSiteIntro) {\n      const href = `${window.location.origin}${window.location.pathname}#/trade?pair=pDAI%2FUNX`\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper\">\n            <div className=\"close-btn\" onClick={() => toggleShowSiteIntro(false)}></div>\n            <p className=\"intro-line\">uniq-ex is a pure github based DAO dex, all activities are logged on github.</p>\n            <p className=\"intro-line\">You can open issues for discussion <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/uniq-ex/uniq-ex/issues\">here</a></p>\n            <p className=\"intro-line\">uniq-ex's future business will not be limited to exchanges though, we may enter various DeFi markets like compound or hegic.</p>\n            <p className=\"intro-line\">You can buy UNX(the governance token of uniq-ex) <a target=\"_blank\" rel=\"noreferrer\" href={href}>here</a></p>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  const onSignOut = () => {\n    setShowProfilePanel(false)\n    typeof props.onSignOut === 'function' && props.onSignOut()\n  }\n\n  const onConnectWallet = () => {\n    typeof props.onConnectWallet === 'function' && props.onConnectWallet()\n  }\n\n  const toggleProfilePanel = () => {\n    setShowProfilePanel(!showProfilePanel)\n  }\n\n  return (\n    <div className=\"header-wrapper\">\n      {renderSiteIntro()}\n      <div className=\"header\">\n        <div className=\"content-wrapper\">\n          <div className=\"logo-wrapper\">\n            UNIQ-EX\n            {/* <div className=\"site-intro\" onClick={() => toggleShowSiteIntro(true)}></div> */}\n          </div>\n          <div className=\"nav-list\">\n            { READY_TABS.indexOf('/') >= 0 ? <div className={`nav-item ${selectedTab === '/' ? 'selected' : ''}`}><Link to=\"/\">Staking</Link></div> : null }\n            { READY_TABS.indexOf('/synth') >= 0 ? <div className={`nav-item ${selectedTab === '/synth' ? 'selected' : ''}`}><Link to=\"/synth\">Synth</Link></div> : null }\n            { READY_TABS.indexOf('/swap') >= 0 ? <div className={`nav-item ${selectedTab === '/swap' ? 'selected' : ''}`}><Link to=\"/swap\">Swap</Link></div> : null }\n            { READY_TABS.indexOf('/trade') >= 0 ? <div className={`nav-item ${selectedTab === '/trade' ? 'selected' : ''}`}><Link to=\"/trade\">Trade</Link></div> : null }\n            { READY_TABS.indexOf('/governance') >= 0 ? <div className={`nav-item ${selectedTab === '/governance' ? 'selected' : ''}`}><Link to=\"/governance\">Governance</Link></div> : null }\n            { READY_TABS.indexOf('/token') >= 0 ? <div className={`nav-item ${selectedTab === '/token' ? 'selected' : ''}`}><Link to=\"/token\">Token</Link></div> : null }\n            { READY_TABS.indexOf('/option') >= 0 ? <div className={`nav-item ${selectedTab === '/option' ? 'selected' : ''}`}><Link to=\"/option\">Option</Link></div> : null }\n          </div>\n          <div className={`${account ? 'active' : ''} profile-wrapper`}>\n            { !account && <span className=\"connect-btn\" onClick={() => onConnectWallet()}>Connect Wallet</span>}\n            { account && <span className=\"account-address\" onClick={() => toggleProfilePanel()}>{formatAccount(account)}</span> }\n            {\n              showProfilePanel ? (\n                <div className=\"profile-panel\">\n                  <div className=\"setting-wrapper\">\n                    <div className=\"setting-section-title\">SLIPPAGE</div>\n                    <div className=\"slippage-setting\">\n                      <div className={`slippage-item ${Number(slippage) === 0.1 ? 'selected' : ''}`} onClick={() => setSlippage('0.1')}>0.1%</div>\n                      <div className={`slippage-item ${Number(slippage) === 0.5 ? 'selected' : ''}`} onClick={() => setSlippage('0.5')}>0.5%</div>\n                      <div className={`slippage-item ${Number(slippage) === 1 ? 'selected' : ''}`} onClick={() => setSlippage('1.0')}>1.0%</div>\n                      <div className=\"slippage-input-wrapper\">\n                        <Input value={slippage} cls=\"slippage-input\" decimals=\"2\" placeholder={slippage} onChange={(amount) => setSlippage(amount)} />%\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"signout-btn\" onClick={() => onSignOut()}>Sign Out</div>\n                </div>\n              ) : null\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import React, { useCallback } from 'react'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport './index.css'\n\nconst InfoModal = (props) => {\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-wrapper\">\n        <div className=\"close-btn\" onClick={() => props.onCloseModal()}></div>\n        <div className={`modal-icon-${props.type} modal-icon`}></div>\n        <div className={`modal-text-${props.type} modal-text`}>{props.text}</div>\n        { props.detail ? <div className=\"modal-detail\">{props.detail}</div> : null }\n        <div className=\"modal-extra-text\">\n        {\n          props.extraLink ? (\n            <a className=\"transaction-link\" target=\"_blank\" rel=\"noreferrer\" href={props.extraLink}>{props.extraText}</a>\n          ) : props.extraText\n        }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Modal = (props) => {\n  const { infoModal } = useMappedState((state) => ({\n    infoModal: state.modal.infoModal\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const onCloseInfoModal = () => {\n    setModal('infoModal', Object.assign({}, infoModal, { show: false }))\n  }\n\n  const buildModals = () => {\n    const modals = []\n    if (infoModal.show) {\n      modals.push(<InfoModal {...infoModal} onCloseModal={() => onCloseInfoModal()} />)\n    }\n    return modals\n  }\n\n  return (\n    <div className=\"modal-container\">\n      {buildModals()}\n    </div>\n  )\n}\n\nexport default Modal","import axios from 'axios'\nimport { API_BASE_URL } from '../config'\n\nconst instance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: { 'Content-Type': 'application/json' }\n})\n\ninstance.interceptors.response.use(\n  (response) => {\n    const res = response.data;\n    return res\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\nexport default instance","import { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport Request from './request'\n\nconst { reverseHex } = utils\n\nexport const readBigNumberUint128 = (reader) => {\n  const hexRev = reverseHex(reader.read(16))\n  const str = hexRev.split('').reverse()\n  let total = new BigNumber(0)\n  \n  for (let i = 0; i < str.length; i++) {\n    total = total.plus(new BigNumber(16).pow(i).times(parseInt(str[i], 16)))\n  }\n\n  return total.isZero() ? 0 : total.toString()\n}\n\nexport const getTokenBalance = (account, token, cb) => {\n  \n  if (token.name !== 'ONT' && token.name !== 'ONG') {\n    const param = {\n      scriptHash: token.address,\n      operation: 'balanceOf',\n      args: [\n        {\n          type: 'Address',\n          value: account,\n        },\n      ],\n    }\n    let invokeMethod = client.api.smartContract.invokeRead\n\n    if (token.ty === 2 || token.ty === 3) {\n      invokeMethod = client.api.smartContract.invokeWasmRead\n    }\n    invokeMethod(param).then((bl) => {\n      if (bl) {\n        const str = reverseHex(bl).split('').reverse()\n        let total = new BigNumber(0)\n        \n        for (let i = 0; i < str.length; i++) {\n          total = total.plus(new BigNumber(16 ** i).times(parseInt(str[i], 16)))\n        }\n        \n        cb(total.div(10 ** token.decimals).toString())\n      }\n    })\n  } else {\n    Request({\n      method: 'get',\n      url: `/v2/addresses/${account}/native/balances`\n    }).then((resp) => {\n      if (resp.code === 0) {\n        const targetToken = resp.result.find((t) => t.asset_name === token.name.toLowerCase())\n        cb(targetToken.balance)\n      }\n    })\n    .catch((e) => {\n      console.log(e)\n    })\n  }\n}\n\nexport const getTokenIconDom = (token, cls = '') => {\n  if (token.id) {\n    return (\n      <div className={`token-icon-wrapper ${cls}`}>\n        {\n          token.ty === 3\n            ? token.name.split('-').slice(1).map((tokenName) => (<div key={`${token.name}-${tokenName}`} className={`token-icon-item with-drop-shadow icon-${tokenName}`} />))\n            : (<div className={`token-icon-item icon-${token.name}`} />)\n        }\n      </div>\n    )\n  }\n  return null\n}","export const handleError = (e, callback = () => {}) => {\n  try {\n    const json = JSON.parse(e)\n    if (json.Result === 'wasm contract does not exist') {\n      callback('CONTRACT_ADDRESS_ERROR')\n    }\n  } catch(error) {\n    // TODO\n  }\n}","export const PRICE_DECIMALS = 10 ** 9\nexport const SYNTH_PRICE_DECIMALS = 10 ** 12\nexport const DAI_PRICE = 1\nexport const TRANSACTION_FEE_RATE = 0.001\nexport const ASSET_STATUS = {\n  Live: '00',\n  HighLimit: '01',\n  LowLimit: '02'\n}\nexport const LEVERAGE_TYPE = {\n  Positive: '00',\n  Negative: '01'\n}","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { readBigNumberUint128, getTokenBalance } from '../../utils/token'\nimport Input from '../../components/input'\nimport { handleError } from '../../utils/errorHandle'\nimport { getHashString } from '../../utils/common'\nimport { PRICE_DECIMALS } from '../../utils/constants'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Transaction = () => {\n  const [pairNameKeyword, setPairNameKeyword] = useState('')\n  const [pairs, setPairs] = useState([])\n  const [tokenPair, setTokenPair] = useState({})\n  const [showPairSelectModal, setShowPairSelectModal] = useState(false)\n  const [tradeType, setTradeType] = useState('buy')\n  const [tokenBalance, setTokenBalance] = useState('-')\n  const [makes, setMakes] = useState([])\n  const [myMakes, setMyMakes] = useState([])\n  const [makeView, setMakeView] = useState('all')\n  const [price, setPrice] = useState('')\n  const [amount, setAmount] = useState('')\n  const [total, setTotal] = useState('')\n  const [pool, setPool] = useState([])\n  const [lastPrice, setLastPrice] = useState(0)\n  const [feeRate, setFeeRate] = useState(0)\n  const [isValid, setIsValid] = useState(false)\n  const { account, stopInterval, tokens, CONTRACT_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    stopInterval: state.common.stopInterval,\n    tokens: state.common.tokens,\n    CONTRACT_ADDRESS: state.gov.poolStat.pools.dex.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const setStopInterval = useCallback((stopInterval) => dispatch({ type: 'SET_STOP_INTERVAL', stopInterval }), [])\n\n  const Alert = useAlert()\n\n  const urlPairName = decodeURIComponent(getHashString(window.location.hash, 'pair') || '') || (localStorage.getItem('trade_token_pair') || '')\n\n  useEffect(() => {\n    if (pairs.length && !tokenPair.name) {\n      setTokenPair(pairs.find((p) => p.name === `${urlPairName}`) || pairs.find((p) => p.name === 'pDAI/UNX') || pairs.find((p) => p.name === 'UNX/pDAI'))\n    }\n  }, [pairs])\n\n  useEffect(() => {\n    if (account && tokenPair.name) {\n      setTokenBalance('-')\n      getTokenBalance(account, tradeType === 'buy' ? tokenPair.tokens[1] : tokenPair.tokens[0], (bl) => {\n        setTokenBalance(bl)\n      })\n    }\n  }, [account, tokenPair, tradeType])\n\n  useEffect(() => {\n    async function getMakesOfPair() {\n      if (tokenPair.name && CONTRACT_ADDRESS) {\n        try {\n          const makeStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'get_makes_of_pair',\n            args: [\n              {\n                type: 'Long',\n                value: tokenPair.tokens[0].id\n              },\n              {\n                type: 'Long',\n                value: tokenPair.tokens[1].id\n              }\n            ]\n          })\n          const parsedMakes = []\n          const strReader = new StringReader(makeStr)\n          const pairLastPrice = strReader.readUint128()\n  \n          for (let j = 0; j <= 1; j++) {\n            const makeCount = strReader.readNextLen()\n            for (let i = 0; i < makeCount; i++) {\n              const make = {}\n              make.make_id = strReader.readUint128()\n              make.price = strReader.readUint128()\n              make.amount = new BigNumber(strReader.readUint128()).toString()\n              make.asset_token_id = (j === 0 ? tokenPair.tokens[0].id : tokenPair.tokens[1].id)\n              make.price_token_id = (j === 0 ? tokenPair.tokens[1].id : tokenPair.tokens[0].id)\n      \n              parsedMakes.push(make)\n            }\n          }\n  \n          setLastPrice(pairLastPrice ? new BigNumber(pairLastPrice).div(PRICE_DECIMALS).toString() : 0)\n          setMakes(parsedMakes)\n        } catch (e) {\n          handleError(e, (errorCode) => {\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get makes of pair', e)\n            }\n          })\n        }\n      }\n    }\n    getMakesOfPair()\n    const interval = !stopInterval && setInterval(getMakesOfPair, 2000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokenPair, account, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    async function getUserMakes() {\n      if (account && CONTRACT_ADDRESS) {\n        try {\n          const makeStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'get_user_makes',\n            args: [\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n          const parsedMakes = []\n          const strReader = new StringReader(makeStr)\n          const makeCount = strReader.readNextLen()\n          for (let i = 0; i < makeCount; i++) {\n            const make = {}\n            make.address = client.api.utils.hexToAddress(strReader.read(20))\n            make.asset_token_id = strReader.readUint128()\n            make.price_token_id = strReader.readUint128()\n            make.price = strReader.readUint128()\n            make.amount = strReader.readUint128()\n            make.make_id = strReader.readUint128()\n  \n            parsedMakes.push(make)\n          }\n  \n          setMyMakes(parsedMakes)\n        } catch (e) {\n          handleError(e, (errorCode) => {\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get user makes', e)\n            }\n          })\n        }\n      }\n    }\n\n    getUserMakes()\n    const interval = !stopInterval && setInterval(getUserMakes, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokenPair, account, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    async function getStat() {\n      if (tokens.length && CONTRACT_ADDRESS) {\n        try {\n          const statStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'stat',\n            args: []\n          })\n          \n          const tokenPool = []\n          const strReader = new StringReader(statStr)\n          setFeeRate(strReader.readUint128())\n          const tokenCount = strReader.readNextLen()\n  \n          for (let i = 0; i < tokenCount; i++) {\n            const token = {}\n            token.id = strReader.readUint128()\n            const tempToken = tokens.find((t) => t.id === token.id)\n            token.weight = strReader.readUint128()\n            token.balance = new BigNumber(readBigNumberUint128(strReader)).div(new BigNumber(10 ** tempToken.decimals)).toString()\n  \n            tokenPool.push(Object.assign(tempToken, token))\n          }\n\n          if (!pairs.length) {\n            const tokenPairs = []\n            for (let i = 0; i < tokenPool.length; i++) {\n              for (let j = i + 1; j < tokenPool.length; j++) {\n                if (tokenPool[i].weight > tokenPool[j].weight || (tokenPool[i].weight === tokenPool[j].weight && tokenPool[i].id > tokenPool[j].id)) {\n                  tokenPairs.push({\n                    name: `${tokenPool[j].name}/${tokenPool[i].name}`,\n                    tokens: [tokenPool[j], tokenPool[i]]\n                  })\n                } else {\n                  tokenPairs.push({\n                    name: `${tokenPool[i].name}/${tokenPool[j].name}`,\n                    tokens: [tokenPool[i], tokenPool[j]]\n                  })\n                }\n              }\n            }\n\n            setPairs(tokenPairs)\n          }\n\n          setPool(tokenPool)\n        } catch (e) {\n          handleError(e, (errorCode) => {\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get stat', e)\n            }\n          })\n        }\n      }\n    }\n\n    getStat()\n    const interval = setInterval(() => {\n      if (stopInterval) {\n        clearInterval(interval)\n      } else {\n        getStat()\n      }\n    }, 5000)\n    return () => clearInterval(interval)\n  }, [tokens, pairs, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    if (price > 0 && amount > 0) {\n      setTotal(new BigNumber(price).times(amount).toString())\n    }\n  }, [price, amount])\n\n  useEffect(() => {\n    if (price > 0) {\n      setAmount(new BigNumber(total || 0).div(price).toString())\n    }\n  }, [total])\n\n  useEffect(() => {\n    if (tokenPair.name && price > 0 && amount > 0) {\n      setIsValid(true)\n    } else {\n      setIsValid(false)\n    }\n  }, [tokenPair, amount, price])\n\n  useEffect(() => {\n    setMakeView('all')\n  }, [account])\n\n  function onChangeToUserMakeView() {\n    if (account) {\n      setMakeView('my')\n    } else {\n      Alert.show('Please Connect Wallet First')\n    }\n  }\n\n  function getMakes(type) {\n    if (tokenPair.name) {\n      const curMakes = (makeView === 'my' ? myMakes : makes)\n      if (type === 'sell') {\n        return curMakes.filter((m) => m.asset_token_id === tokenPair.tokens[0].id && m.price_token_id === tokenPair.tokens[1].id).map((m) => {\n          const isMine = makeView !== 'my' && !!myMakes.find((mm) => m.make_id === mm.make_id)\n          return (\n            <div key={m.make_id} className={`my-make-item reverse ${isMine ? 'mine' : ''}`}>\n              <div className=\"make-item-detail make-sell\">{new BigNumber(m.price).div(PRICE_DECIMALS).toString()}</div>\n              <div className=\"make-item-detail\">{new BigNumber(m.amount).div((10 ** tokenPair.tokens[0].decimals)).toString()}</div>\n              { makeView === 'my' && <div className=\"unmake-btn\" onClick={() => onUnmake(m.make_id)}>Cancel</div> }\n            </div>)\n        })\n      } else {\n        return curMakes.filter((m) => m.asset_token_id === tokenPair.tokens[1].id && m.price_token_id === tokenPair.tokens[0].id).map((m) => {\n          const isMine = makeView !== 'my' && !!myMakes.find((mm) => m.make_id === mm.make_id)\n          return (\n            <div key={m.make_id} className={`my-make-item ${isMine ? 'mine' : ''}`}>\n              <div className=\"make-item-detail make-buy\">{new BigNumber(m.price).div(PRICE_DECIMALS).toString()}</div>\n              <div className=\"make-item-detail\">{new BigNumber(m.amount).div(m.price).times(PRICE_DECIMALS).div((10 ** tokenPair.tokens[1].decimals)).toString()}</div>\n              { makeView === 'my' && <div className=\"unmake-btn\" onClick={() => onUnmake(m.make_id)}>Cancel</div> }\n            </div>)\n        })\n      }\n    }\n    return null\n  }\n\n\n\n  async function onMake() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (tokenPair.name && CONTRACT_ADDRESS) {\n      if (price <= 0) {\n        Alert.error('Price should be greater than 0')\n        return\n      }\n      if (amount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const assetToken = tradeType === 'buy' ? tokenPair.tokens[1] : tokenPair.tokens[0]\n        const priceToken = tradeType === 'buy' ? tokenPair.tokens[0] : tokenPair.tokens[1]\n        // const tradePrice = tradeType === 'buy' ? new BigNumber(1).div(price).toString() : price\n        const tradeAmount = tradeType === 'buy' ? total : amount\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: assetToken.id\n          },\n          {\n            type: 'Long',\n            value: priceToken.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(price).times(PRICE_DECIMALS).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(tradeAmount).times(new BigNumber(10 ** assetToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const makeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: CONTRACT_ADDRESS,\n          operation: 'make',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (makeResult.transaction) {\n          setAmount('')\n          setPrice('')\n          setTotal('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${makeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onUnmake(makeId) {\n    if (account && makeId && CONTRACT_ADDRESS) {\n      try {\n        const unmakeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: CONTRACT_ADDRESS,\n          operation: 'unmake',\n          args: [\n            {\n              type: 'Address',\n              value: account\n            },\n            {\n              type: 'Long',\n              value: makeId\n            }\n          ],\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n        if (unmakeResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${unmakeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function getPriceHint() {\n    if (tokenPair.name) {\n      return tokenPair.tokens[1].name\n    }\n  }\n\n  function getAmountHint() {\n    if (tokenPair.name) {\n      return tokenPair.tokens[0].name\n    }\n  }\n\n  function generateTokenPool() {\n    if (pool.length) {\n      return pool.filter((tp) => Number(tp.balance) !== 0).map((tp) => {\n        return (\n          <div className=\"pool-item\" key={tp.name}>\n            <div className={`icon-${tp.name} token-name`}>{tp.name}</div>\n            <div className=\"token-balance\">{tp.balance}</div>\n          </div>\n        )\n      })\n    }\n  }\n\n  const handlePairClick = (pair) => {\n    setTokenPair(pair)\n    localStorage.setItem('trade_token_pair', pair.name)\n    setShowPairSelectModal(false)\n  }\n\n  return (\n    <div className=\"swap-wrapper\">\n      <div className=\"trade-container\">\n        <div className=\"make-wrapper\">\n          <div className=\"container-header\">Trade\n            {\n              tokenPair.name ? (\n                <div className=\"token-pair-select\" onClick={() => setShowPairSelectModal(true)}>\n                  <div className=\"token-pair-name\">{tokenPair.name}</div>\n                </div>\n              ) : null\n            }\n          </div>\n          <div className=\"trade-type-switch\">\n            <div className={`trade-type-item ${tradeType === 'buy' ? 'trade-buy' : ''}`} onClick={() => setTradeType('buy')}>Buy</div>\n            <div className={`trade-type-item ${tradeType === 'sell' ? 'trade-sell' : ''}`} onClick={() => setTradeType('sell')}>Sell</div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Price\n              <span className=\"hint\">{getPriceHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={price} decimals=\"9\" onChange={(amount) => setPrice(amount)} />\n            </div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Amount\n              <span className=\"hint\">{getAmountHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={amount} decimals={tokenPair.tokens ? tokenPair.tokens[0].decimals : '9'} onChange={(amount) => setAmount(amount)} />\n            </div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Total {tradeType === 'buy' ? 'Need' : 'Receive'}\n              <span className=\"hint\">{getPriceHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={total} decimals=\"9\" onChange={(amount) => setTotal(amount)} />\n            </div>\n          </div>\n          { tokenPair.name ? <div className=\"balance-line\">Balance: <span>{tokenBalance} {tradeType === 'buy' ? tokenPair.tokens[1].name : tokenPair.tokens[0].name}</span></div> : null }\n          { feeRate ? <p className=\"fee-rate\">* The fee rate of transaction is {feeRate / 100}%</p> : null }\n          { isValid ? <div className={`make-btn make-btn-${tradeType}`} onClick={() => onMake()}>{tradeType.toUpperCase()} {tokenPair.tokens[0].name}</div> : <div className=\"make-btn disabled\">{tradeType.toUpperCase()} {tokenPair.tokens ? tokenPair.tokens[0].name : ''}</div> }\n        </div>\n        <div className=\"trade-panel\">\n          <div className=\"panel-header\">\n            <div className=\"panel-title\">Order Book</div>\n            <div className=\"tabs\">\n              <div className={makeView === 'all' ? \"tab-wrapper selected\" : \"tab-wrapper\"} onClick={() => setMakeView('all')}>All</div>\n              <div className={makeView === 'my' ? \"tab-wrapper selected\" : \"tab-wrapper\"} onClick={() => onChangeToUserMakeView()}>My</div>\n            </div>\n          </div>\n          <div className=\"list-title\">\n            <div className=\"blank-placeholder\"></div>\n            <div className=\"title-items\">\n              <div className=\"item-text\">Price ({getPriceHint()})</div>\n              <div className=\"item-text\">Amount ({getAmountHint()})</div>\n              { makeView === 'my' && <div className=\"item-placeholder\"></div> }\n            </div>\n          </div>\n          <div className=\"sell-section\">\n            <div className=\"section-title\">Sell</div>\n            <div className=\"make-list reverse\">\n            {getMakes('sell')}\n            </div>\n          </div>\n          {\n            (makeView === 'all' && Number(lastPrice) !== 0) ? <div className=\"last-price-wrapper\">\n              <div className=\"last-price-label\">Last Price</div>\n              <div className=\"last-price\">{lastPrice}</div>\n              <div className=\"last-price-placeholder\"></div>\n            </div> : null\n          }\n          <div className=\"buy-section\">\n            <div className=\"section-title\">Buy</div>\n            <div className=\"make-list\">\n            {getMakes('buy')}\n            </div>\n          </div>\n        </div>\n      </div>\n      {\n        pool.filter((tp) => Number(tp.balance) !== 0).length ? (\n          <div className=\"token-pool\">\n            <div className=\"container-header\">Token Balance</div>\n            <div className=\"pool-items\">\n            {generateTokenPool()}\n            </div>\n          </div>\n        ) : null\n      }\n      {\n        showPairSelectModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => setShowPairSelectModal(false)}></div>\n              <div className=\"pair-select-modal-wrapper\">\n                <div className=\"pair-select-modal-title\">Select</div>\n                <input type=\"text\" className=\"pair-select-modal-input\" value={pairNameKeyword} onInput={(e) => setPairNameKeyword(e.target.value)} />\n                <div className=\"pair-select-modal-list\">\n                  {\n                    pairs.filter((p) => {\n                      const nameLC = p.name.toLowerCase()\n                      const tNames = pairNameKeyword.split(' ').filter((n) => n)\n                      \n                      return tNames.reduce((a, b) => a && nameLC.indexOf(b) >= 0, true)\n                    }).map((p) => {\n                      return (\n                        <div key={p.name} className=\"pair-select-modal-list-item\" onClick={() => handlePairClick(p)}>\n                          {\n                            p.tokens.map((t) => <div key={`${p.name}-${t.name}`} className={`pair-select-modal-list-item-icon icon-${t.name}`}></div>)\n                          }\n                          <div className=\"pair-select-modal-list-item-name\">{p.name}</div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n    </div>\n  )\n}\n\nexport default Transaction","import React, { useState, useEffect } from 'react'\nimport { useMappedState } from 'redux-react-hook';\nimport Select, { components } from 'react-select'\nimport Input from '../input'\nimport { getTokenBalance } from '../../utils/token'\n\nimport './index.css'\n\nconst TokenInput = (props) => {\n  const { cls, value, round, tokens = [], defaultToken, inputDisabled = false, showBalance = true, withMax = true, onTokenChange, onAmountChange, balanceChange = 0 } = props\n  const [token, setToken] = useState(defaultToken || {})\n  const [balance, setBalance] = useState('-')\n  const { account } = useMappedState((state) => ({\n    account: state.wallet.account\n  }))\n\n  useEffect(() => {\n    if (account && showBalance && token.id) {\n      getTokenBalance(account, token, setBalance)\n    }\n  }, [token, showBalance, account, balanceChange])\n\n  const handleTokenChange = (e) => {\n    if (e.value !== token.id) {\n      const newToken = tokens.find((t) => t.id === e.value)\n\n      setToken(newToken)\n      typeof onTokenChange === 'function' && onTokenChange(newToken)\n    }\n  }\n\n  const renderTokenSeletion = (dToken) => {\n    if (tokens.length) {\n      const CustomOption = (props) => {\n        const label = props.label.split(' ')[0]\n        return (\n          <components.Option {...props}>\n            <div className=\"option-wrapper\">\n              <div className={`icon-${label} option-icon`}></div>\n              <div className=\"option-label\">{props.label}</div>\n            </div>\n          </components.Option>\n        )\n      }\n      const SingleValue = ({ children, ...props }) => {\n        const label = children.split(' ')[0]\n        return (\n          <components.SingleValue {...props}>\n            <div className=\"option-wrapper\">\n              <div className={`icon-${label} option-icon`}></div>\n              <div className=\"option-label\">{children}</div>\n            </div>\n          </components.SingleValue>\n        )\n      }\n      let defaultToken = dToken ? dToken : tokens[0]\n\n      if (!token.id || !tokens.find((t) => t.id === token.id)) {\n        setToken(defaultToken)\n      }\n\n      return (\n        <Select\n          className={`token-select ${cls}`}\n          defaultValue={defaultToken}\n          options={tokens}\n          isSearchable={false}\n          components={{ Option: CustomOption, SingleValue }}\n          onChange={(e) => handleTokenChange(e)}\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            colors: {\n              ...theme.colors,\n              primary: '#2c2c2c',\n            },\n          })}\n        />\n      )\n    }\n  }\n\n  const maxInput = () => {\n    if (!isNaN(balance) && typeof onAmountChange === 'function') {\n      onAmountChange(balance)\n    }\n  }\n\n  return (\n    <div className=\"token-input-wrapper\">\n      <div className=\"input-label\">{props.label || 'Input'}\n        { showBalance ? <span className=\"hint\">Balance: {balance}</span> : null }\n      </div>\n      <div className=\"input-wrapper\">\n        { renderTokenSeletion(defaultToken) }\n        <Input decimals={token.decimals} disabled={inputDisabled} value={value} round={round} onChange={(value) => onAmountChange(value)} />\n        { withMax && <div className=\"input-max-btn\" onClick={() => maxInput()}>MAX</div> }\n      </div>\n    </div>\n  )\n}\n\nexport default TokenInput\n","import { useEffect, useCallback } from 'react'\nimport { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { readBigNumberUint128 } from '../utils/token'\n\nconst { StringReader, reverseHex } = utils\n\nexport const useFetchPairs = () => {\n  const { account, tokens, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setSwapTokens = useCallback((tokens) => dispatch({ type: 'SET_SWAP_TOKENS', tokens }), [])\n  const setPairs = useCallback((pairs) => dispatch({ type: 'SET_PAIRS', pairs }), [])\n\n  useEffect(() => {\n    getSwapStat()\n    let interval = setInterval(getSwapStat, 3000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, tokens, swapTokens, SWAP_ADDRESS])\n\n  async function getSwapStat() {\n    if (SWAP_ADDRESS) {\n      try {\n        const pairStr = await client.api.smartContract.invokeWasmRead({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'stat',\n          args: []\n        })\n\n        const parsedPairs = []\n        const strReader = new StringReader(pairStr)\n        const pairCount = strReader.readNextLen()\n        for (let i = 0; i < pairCount; i++) {\n          const pair = {}\n          pair.address = reverseHex(strReader.read(20))\n          pair.token1 = strReader.readUint128()\n          pair.token2 = strReader.readUint128()\n          pair.id = strReader.readUint128()\n          pair.reserve1 = readBigNumberUint128(strReader)\n          pair.reserve2 = readBigNumberUint128(strReader)\n          pair.lp = readBigNumberUint128(strReader)\n\n          parsedPairs.push(pair)\n        }\n\n        const tokenIds = []\n        const tokenCount = strReader.readNextLen()\n        for (let i = 0; i < tokenCount; i++) {\n          tokenIds.push(strReader.readUint128())\n        }\n\n        setPairs(parsedPairs)\n        if (tokens.length && !swapTokens.length) {\n          setSwapTokens(tokenIds.map((t) => tokens.find((tk) => tk.id === t)))\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  return null\n}","import BigNumber from 'bignumber.js'\n\nconst REST = 0.997\n\nexport const findAllPaths = (pairs, sourceId, targetId) => {\n  let pathArr = []\n  const findPath = (sourceId, targetId, pathNodes = []) => {\n    pathNodes = [...pathNodes]\n    pathNodes.push(sourceId)\n\n    if (sourceId === targetId) {\n      pathArr.push(pathNodes)\n      return\n    }\n\n    let neighborNodes = []\n    pairs.map((p) => {\n      if (p.token1 === sourceId) {\n        neighborNodes.push(p.token2)\n      } else if (p.token2 === sourceId) {\n        neighborNodes.push(p.token1)\n      }\n    })\n\n    for (let id of neighborNodes) {\n      if (!pathNodes.includes(id)) {\n        findPath(id, targetId, pathNodes)\n      }\n    }\n  }\n\n  findPath(sourceId, targetId)\n\n  pathArr.sort((p1, p2) => {\n    return p1.length - p2.length\n  })\n  \n  return pathArr\n}\n\nconst getInputAmount = (output, pair, reverse = false) => {\n  let amount\n  if (reverse) {\n    amount = new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(pair.reserve1).minus(output)).minus(pair.reserve2).div(REST).integerValue(BigNumber.ROUND_CEIL).toString()\n  } else {\n    amount = new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(pair.reserve2).minus(output)).minus(pair.reserve1).div(REST).integerValue(BigNumber.ROUND_CEIL).toString()\n  }\n  return amount\n}\n\nconst getOutputAmount = (input, pair, reverse = false) => {\n  let amount\n  if (reverse) {\n    amount = new BigNumber(pair.reserve1).minus(new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(input).times(REST).plus(pair.reserve2))).integerValue(BigNumber.ROUND_FLOOR).toString()\n  } else {\n    amount = new BigNumber(pair.reserve2).minus(new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(input).times(REST).plus(pair.reserve1))).integerValue(BigNumber.ROUND_FLOOR).toString()\n  }\n  return amount\n}\n\nconst findNextOutput = (input, pairs, token1, token2) => {\n  let pair = pairs.find((p) => p.token1 === token1 && p.token2 === token2)\n\n  if (pair) {\n    return getOutputAmount(input, pair)\n  }\n\n  pair = pairs.find((p) => p.token1 === token2 && p.token2 === token1)\n\n  if (pair) {\n    return getOutputAmount(input, pair, true)\n  }\n}\n\nconst findPrevInput = (output, pairs, token1, token2) => {\n  let pair = pairs.find((p) => p.token1 === token1 && p.token2 === token2)\n\n  if (pair) {\n    return getInputAmount(output, pair)\n  }\n\n  pair = pairs.find((p) => p.token1 === token2 && p.token2 === token1)\n\n  if (pair) {\n    return getInputAmount(output, pair, true)\n  }\n}\n\nexport const bestSwap = (type = 'exactin', amount, pairs, token1, token2) => {\n  const paths = findAllPaths(pairs, token1, token2)\n  const originAmount = amount\n  let maxOutput = 0\n  let minInput = Infinity\n  let path = []\n  \n  for (let i = 0; i < paths.length; i++) {\n    amount = originAmount\n    if (type === 'exactin') {\n      for (let j = 0; j < paths[i].length - 1; j++) {\n        amount = findNextOutput(amount, pairs, paths[i][j], paths[i][j + 1])\n      }\n  \n      if (new BigNumber(amount).gt(new BigNumber(maxOutput))) {\n        maxOutput = amount\n        path = paths[i]\n      }\n    } else {\n      for (let j = paths[i].length - 1; j > 0; j--) {\n        amount = findPrevInput(amount, pairs, paths[i][j - 1], paths[i][j])\n      }\n  \n      if (new BigNumber(amount).lt(new BigNumber(minInput)) && amount > 0) {\n        minInput = amount\n        path = paths[i]\n      }\n    }\n  }\n\n  if (type === 'exactin') {\n    return [maxOutput, path]\n  } else if (type === 'exactout') {\n    return [minInput, path]\n  }\n}\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport TokenInput from '../../components/tokenInput'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport { toLocaleFixed } from '../../utils/common'\nimport { bestSwap } from '../../utils/swap'\nimport './index.css'\n\nconst Swap = () => {\n  const [swapType, setSwapType] = useState('exactin')\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState('')\n  const [token2Amount, setToken2Amount] = useState('')\n  const [isValidPair, setIsValidPair] = useState(false)\n  const [isValidSwap, setIsValidSwap] = useState(false)\n  const [bestPath, setBestPath] = useState([])\n  const [showPrice, setShowPrice] = useState(false)\n  const [balanceChange, setBalanceChange] = useState(0)\n  const { account, slippage, pairs, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    pairs: state.swap.pairs,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (token1.id !== token2.id && token1Amount > 0 && token2Amount > 0 && bestPath.length) {\n      setShowPrice(true)\n      setIsValidSwap(true)\n    } else {\n      setShowPrice(false)\n      setIsValidSwap(false)\n    }\n  }, [token1, token2, token1Amount, token2Amount, bestPath])\n\n  useEffect(() => {\n    if (swapTokens.length) {\n      setToken1(swapTokens.find((st) => st.name === (localStorage.getItem('swap_token1') || 'pDAI')))\n      setToken2(swapTokens.find((st) => st.name === (localStorage.getItem('swap_token2') || 'UNX')))\n    }\n  }, [swapTokens])\n\n  useEffect(() => {\n    if (token1.id && token2.id && validPair(token1.id, token2.id)) {\n      setIsValidPair(true)\n    } else {\n      setIsValidPair(false)\n    }\n  }, [token1, token2])\n\n  function validPair(token1, token2) {\n    if (pairs.length) {\n      if (token1 && token2 && pairs.find((p) => (p.token1 === token1 && p.token2 === token2) || (p.token1 === token2 && p.token2 === token1))) {\n        return true\n      }\n    }\n    return false\n  }\n\n  function onChangeToken1(token) {\n    if (token.id !== token1.id) {\n      setToken1(token)\n      localStorage.setItem('swap_token1', token.name)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onChangeToken2(token) {\n    if (token.id !== token2.id) {\n      setToken2(token)\n      localStorage.setItem('swap_token2', token.name)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onToken1AmountChange(amount) {\n    if (amount !== token1Amount) {\n      setSwapType('exactin')\n      setToken1Amount(amount)\n      if (pairs.length && amount) {\n        const inputAmount = new BigNumber(amount).times(10 ** token1.decimals).toString()\n        const [maxOutput, path] = bestSwap('exactin', inputAmount, pairs, token1.id, token2.id)\n\n        setToken2Amount(new BigNumber(maxOutput).div(10 ** token2.decimals).toString())\n        setBestPath(path)\n      } else if (Number(amount) === 0) {\n        setToken2Amount('')\n      }\n    }\n  }\n\n  function onToken2AmountChange(amount) {\n    if (amount !== token2Amount) {\n      setSwapType('exactout')\n      setToken2Amount(amount)\n      if (pairs.length && amount) {\n        const outputAmount = amount * (10 ** token2.decimals)\n        const [minInput, path] = bestSwap('exactout', outputAmount, pairs, token1.id, token2.id)\n\n        if (minInput === Infinity) {\n          setToken1Amount('')\n        } else {\n          setToken1Amount(new BigNumber(minInput).div(10 ** token1.decimals).toString())\n        }\n        setBestPath(path)\n      } else if (Number(amount) === 0) {\n        setToken1Amount('')\n      }\n    }\n  }\n\n  function onNavigateToPool() {\n    history.push('/pool')\n  }\n\n  async function handleSwap() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (token1Amount <= 0 || token2Amount <= 0) {\n      Alert.error('Amount should be greater than 0')\n      return\n    }\n    if (token1.id && token1.id === token2.id) {\n      Alert.error('Input should be different')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Array',\n            value: bestPath.map((p) => ({ type: 'Long', value: p }))\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const swapResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: swapType === 'exactin' ? 'swap_exact_tokens_for_tokens' : 'swap_tokens_for_exact_tokens',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (swapResult.transaction) {\n          setBalanceChange(balanceChange + 1)\n          setToken1Amount('')\n          setToken2Amount('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${swapResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function getPrice() {\n    return `${toLocaleFixed(token2Amount / token1Amount, 6)} ${token2.name} per ${token1.name}`\n  }\n\n  function getMinReceiveOrMaxSold() {\n    if (swapType === 'exactin') {\n      return <p>Minimum Received:<span>{toLocaleFixed(token2Amount * (1 - slippage / 100), 6)} {token2.name}</span></p>\n    } else {\n      return <p>Maximum Sold:<span>{toLocaleFixed(token1Amount * (1 + slippage / 100), 6)} {token1.name}</span></p>\n    }\n  }\n\n  function getPriceImpact() {\n    let price\n    let pair = pairs.find((p) => p.token1 === token1.id && p.token2 === token2.id)\n\n    if (pair) {\n      price = new BigNumber(pair.reserve2).div(10 ** token2.decimals).div(pair.reserve1).times(10 ** token1.decimals).toString()\n    } else {\n      pair = pairs.find((p) => p.token1 === token2.id && p.token2 === token1.id)\n\n      if (pair) {\n        price = new BigNumber(pair.reserve1).div(10 ** token1.decimals).div(pair.reserve2).times(10 ** token2.decimals).toString()\n      }\n    }\n\n    return <p>Price Impact:<span>{Math.abs((token2Amount / token1Amount - price) / price * 100).toFixed(2)}%</span></p>\n  }\n\n  function getBestPath() {\n    if (bestPath.length) {\n      const items = []\n      bestPath.map((t, index) => {\n        const token = swapTokens.find((tk) => tk.id === t)\n        index > 0 && items.push((<div className=\"icon-arrow-right\"></div>))\n        items.push((<div className={`path-icon icon-${token.name}`}>{token.name}</div>))\n\n        return t\n      })\n\n      return items\n    }\n  }\n\n  return (\n    <div className=\"sw-wrapper\">\n      <div className=\"sw-container\">\n        <div className=\"sw-tabs\">\n          <div className=\"sw-tab active\">Swap</div>\n          <div className=\"sw-tab\" onClick={() => onNavigateToPool()}>Pool</div>\n        </div>\n        <div className=\"sw-content\">\n          <TokenInput\n            balanceChange={balanceChange}\n            label=\"From\"\n            tokens={swapTokens}\n            value={token1Amount}\n            round='up'\n            defaultToken={swapTokens.length && swapTokens.find((st) => st.name === (localStorage.getItem('swap_token1') || 'pDAI'))}\n            onTokenChange={(token) => onChangeToken1(token)}\n            onAmountChange={(amount) => onToken1AmountChange(amount)} />\n          <div className=\"icon-arrow-down\"></div>\n          <TokenInput\n            balanceChange={balanceChange}\n            label=\"To\"\n            tokens={swapTokens}\n            value={token2Amount}\n            round='down'\n            defaultToken={swapTokens.length && swapTokens.find((st) => st.name === (localStorage.getItem('swap_token2') || 'UNX'))}\n            onTokenChange={(token) => onChangeToken2(token)}\n            onAmountChange={(amount) => onToken2AmountChange(amount)} />\n          { showPrice ? <div className=\"sw-price-wrapper\">Price<span className=\"sw-price-info\">{getPrice()}</span></div> : null }\n          { isValidPair ? null : <div className=\"add-liquidity-hint\">Add liquidity to enable swaps for this pair.</div> }\n          { isValidPair ? ( isValidSwap ? <div className=\"sw-swap-btn\" onClick={() => handleSwap()}>Swap</div> : <div className=\"sw-swap-btn disabled\">Swap</div> ) : <div className=\"sw-swap-btn disabled\">Invalid Liquidity</div> }\n        </div>\n        {\n          isValidPair && isValidSwap ? (\n            <div className=\"sw-hint-wrapper\">\n              <div className=\"sw-input-output\">{getMinReceiveOrMaxSold()}</div>\n              <div className=\"sw-price-impact\">{getPriceImpact()}</div>\n              <div className=\"sw-best-path\">\n                <p>Route:</p>\n                <div className=\"sw-best-path-list\">\n                  {getBestPath()}\n                </div>\n              </div>\n            </div>\n          ) : null\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Swap\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState } from 'redux-react-hook';\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { readBigNumberUint128 } from '../../utils/token'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Pool = () => {\n  const [liquidityBalance, setLiquidityBalance] = useState([])\n  const { account, tokens, pairs, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (account && pairs.length && SWAP_ADDRESS) {\n      const getLiquidityBalanceByPairId = (id) => {\n        return client.api.smartContract.invokeWasmRead({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'balanceOf',\n          args: [\n            {\n              type: 'Long',\n              value: id\n            },\n            {\n              type: 'Address',\n              value: account\n            }\n          ]\n        }).then((resp) => {\n          const strReader = new StringReader(resp)\n          const balance = readBigNumberUint128(strReader)\n          \n          return { [id]: balance }\n        })\n      }\n      Promise.all(pairs.map((p) => getLiquidityBalanceByPairId(p.id))).then((resp) => {\n        setLiquidityBalance(resp)\n      })\n    }\n  }, [account, pairs, SWAP_ADDRESS])\n\n  function onNavigateToSwap() {\n    history.push('/swap')\n  }\n\n  function onNavigateToAddLiquidity() {\n    history.push('/pool/add')\n  }\n\n  function onRemoveLiquidity(pairId) {\n    history.push(`/pool/remove/${pairId}`)\n  }\n\n  function generateLiquidityList() {\n    const myLiquidities = liquidityBalance.filter((l) => l[Object.keys(l)[0]])\n    if (myLiquidities.length && pairs.length && tokens.length) {\n      return myLiquidities.map((lb) => {\n        const pairId = Object.keys(lb)[0]\n        const pair = pairs.find((p) => `${p.id}` === pairId)\n        const token1 = tokens.find((t) => t.id === pair.token1)\n        const token2 = tokens.find((t) => t.id === pair.token2)\n        const balance = new BigNumber(lb[pairId])\n        const shareOfPool = balance.div(pair.lp)\n        const token1Amount = shareOfPool.times(pair.reserve1).div(10 ** token1.decimals).toFixed(token1.decimals)\n        const token2Amount = shareOfPool.times(pair.reserve2).div(10 ** token2.decimals).toFixed(token2.decimals)\n        \n        return (\n          <div className=\"pool-liquidity-item\">\n            <div className=\"liquidity-item-detail\">\n              <div className={`token-icon icon-${token1.name}`}></div>\n              <div className={`token-icon icon-${token2.name}`}></div>\n              <div className=\"token-pair\"><strong>{token1.name}/{token2.name}</strong></div>\n              <div className=\"pair-position\"><strong>Pooled</strong>: {token1Amount} / {token2Amount}</div>\n              <div className=\"pool-tokens\"><strong>Pool Tokens</strong>: {balance.div(10 ** 18).toString()}</div>\n            </div>\n            <div className=\"remove-liquidity-btn\" onClick={() => onRemoveLiquidity(pairId)}>Remove</div>\n          </div>\n        )\n      })\n    } else {\n      return <div className=\"pool-empty-lp\">No Liquidities</div>\n    }\n  }\n\n  return (\n    <div className=\"pool-wrapper\">\n      <div className=\"pool-container\">\n        <div className=\"sw-tabs\">\n          <div className=\"sw-tab\" onClick={() => onNavigateToSwap()}>Swap</div>\n          <div className=\"sw-tab active\">Pool</div>\n        </div>\n        <div className=\"pool-content\">\n          <div className=\"pool-add-liquidity-btn\" onClick={() => onNavigateToAddLiquidity()}>Add Liquidity</div>\n          <div className=\"pool-liquidity-list\">\n            <div className=\"my-liquidity\">Your Liquidity</div>\n            {generateLiquidityList()}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Pool","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport TokenInput from '../../../components/tokenInput'\nimport { useFetchPairs } from '../../../hooks/usePair';\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\nimport './index.css'\n\nconst AddLiquidity = () => {\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState('')\n  const [token2Amount, setToken2Amount] = useState('')\n  const [isValidPair, setIsValidPair] = useState(true)\n  const [isFirstProvider, setIsFirstProvider] = useState(false)\n  const [showPriceInfo, setShowPriceInfo] = useState(false)\n  const [balanceChange, setBalanceChange] = useState(0)\n  const { account, slippage, pairs, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    pairs: state.swap.pairs,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (!token1.id || !token2.id || (token1.id === token2.id)) {\n      setIsValidPair(false)\n    } else {\n      setIsValidPair(true)\n    }\n  }, [token1, token2])\n\n  useEffect(() => {\n    const pair = getPairByToken()\n    if (token1.id && token2.id && token1.id != token2.id && (!pairs.length || !pair || (pair.reserve1 === 0 && pair.reserve2 === 0))) {\n      setIsFirstProvider(true)\n    } else {\n      setIsFirstProvider(false)\n    }\n  }, [pairs, token1, token2])\n\n  useEffect(() => {\n    if (token1.id && token2.id) {\n      setShowPriceInfo(true)\n    } else {\n      setShowPriceInfo(false)\n    }\n  }, [pairs, token1, token2, token1Amount, token2Amount])\n\n  useEffect(() => {\n    if (swapTokens.length) {\n      setToken1(swapTokens.find((st) => st.name === (localStorage.getItem('swap_token1') || 'pDAI')))\n      setToken2(swapTokens.find((st) => st.name === (localStorage.getItem('swap_token2') || 'UNX')))\n    }\n  }, [account, swapTokens])\n\n  function getPairByToken() {\n    return pairs.find((p) => (p.token1 === token1.id && p.token2 === token2.id) || (p.token1 === token2.id && p.token2 === token1.id))\n  }\n\n  function onChangeToken1(token) {\n    if (token.id !== token1.id) {\n      setToken1(token)\n      localStorage.setItem('swap_token1', token.name)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onChangeToken2(token) {\n    if (token.id !== token2.id) {\n      setToken2(token)\n      localStorage.setItem('swap_token2', token.name)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onToken1AmountChange(amount) {\n    setToken1Amount(amount)\n    if (!isFirstProvider) {\n      if (amount) {\n        setToken2Amount(new BigNumber(amount).times(getPairPrice()).times(10 ** token2.decimals).integerValue(BigNumber.ROUND_CEIL).div(10 ** token2.decimals).toString())\n      } else if (Number(amount) === 0) {\n        setToken2Amount('')\n      }\n    }\n  }\n\n  function onToken2AmountChange(amount) {\n    setToken2Amount(amount)\n    if (!isFirstProvider) {\n      if (amount) {\n        setToken1Amount(new BigNumber(amount).div(getPairPrice()).times(10 ** token1.decimals).integerValue(BigNumber.ROUND_CEIL).div(10 ** token1.decimals).toString())\n      } else if (Number(amount) === 0) {\n        setToken1Amount('')\n      }\n    }\n  }\n\n  function getPairPrice() {\n    if (token1.id && token2.id && pairs.length) {\n      if (isFirstProvider && token1Amount && token2Amount) {\n        return token2Amount / token1Amount\n      }\n      let pair = pairs.find((p) => p.token1 === token1.id && p.token2 === token2.id)\n      if (pair) {\n        return pair.reserve1 ? new BigNumber(pair.reserve2).div(10 ** token2.decimals).div(pair.reserve1).times(10 ** token1.decimals) : 0\n      }\n      pair = pairs.find((p) => p.token1 === token2.id && p.token2 === token1.id)\n      if (pair) {\n        return pair.reserve2 ? new BigNumber(pair.reserve1).div(10 ** token1.decimals).div(pair.reserve2).times(10 ** token2.decimals) : 0\n      }\n    }\n\n    return 0\n  }\n\n  function getShareOfPool() {\n    if (isFirstProvider) {\n      return '100%'\n    } else {\n      const pair = getPairByToken()\n      const amountProduct = new BigNumber(token1Amount || 0).times(10 ** token1.decimals).times(token2Amount || 0).times(10 ** token2.decimals)\n\n      if (pair) {\n        return `${amountProduct.times(100).div(new BigNumber(pair.reserve1).times(pair.reserve2).plus(amountProduct)).toFixed(2)}%`\n      }\n      return `0%`\n    }\n  }\n\n  function onNavigateToPool() {\n    history.goBack()\n  }\n\n  async function onAdd() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (token1Amount <= 0 || token2Amount <= 0) {\n      Alert.error('Amount should be greater than 0')\n      return\n    }\n    if (token1.id && token1.id === token2.id) {\n      Alert.error('Input should be different')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: token1.id\n          },\n          {\n            type: 'Long',\n            value: token2.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const addResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'add_liquidity',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (addResult.transaction) {\n          setBalanceChange(balanceChange + 1)\n          setToken1Amount('')\n          setToken2Amount('')\n          onNavigateToPool()\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${addResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"add-liquidity-wrapper\">\n      <div className=\"al-header\">Add Liquidity\n        <div className=\"back-icon\" onClick={() => onNavigateToPool()}></div>\n      </div>\n      <div className=\"al-wrapper\">\n        {\n          isValidPair && isFirstProvider ? (\n            <div className=\"first-provider-hint\">\n              <div><strong>You are the first liquidity provider.</strong><br /><br />The ratio of tokens you add will set the price of this pool.</div>\n            </div>\n          ) : null\n        }\n        <TokenInput\n          balanceChange={balanceChange}\n          tokens={swapTokens}\n          value={token1Amount}\n          defaultToken={swapTokens.length && swapTokens.find((st) => st.name === (localStorage.getItem('swap_token1') || 'pDAI'))}\n          onTokenChange={(token) => onChangeToken1(token)}\n          onAmountChange={(amount) => onToken1AmountChange(amount)} />\n        <div className=\"icon-plus\"></div>\n        <TokenInput\n          balanceChange={balanceChange}\n          tokens={swapTokens}\n          value={token2Amount}\n          defaultToken={swapTokens.length && swapTokens.find((st) => st.name === (localStorage.getItem('swap_token2') || 'UNX'))}\n          onTokenChange={(token) => onChangeToken2(token)}\n          onAmountChange={(amount) => onToken2AmountChange(amount)} />\n        {\n          isValidPair && showPriceInfo ? (\n            <div className=\"al-price-wrapper\">\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{getPairPrice().toFixed(4)}</div>\n                <div className=\"price-item-label\">{token2.name} per {token1.name}</div>\n              </div>\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{(getPairPrice() ? 1 / getPairPrice() : 0).toFixed(4)}</div>\n                <div className=\"price-item-label\">{token1.name} per {token2.name}</div>\n              </div>\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{getShareOfPool()}</div>\n                <div className=\"price-item-label\">Share of Pool</div>\n              </div>\n            </div>\n          ) : null\n        }\n        <div className=\"al-add-btn\" onClick={() => onAdd()}>Add</div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddLiquidity\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { utils } from 'ontology-ts-sdk'\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport Slider from 'rc-slider'\nimport { readBigNumberUint128 } from '../../../utils/token'\nimport { useFetchPairs } from '../../../hooks/usePair';\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\nimport 'rc-slider/assets/index.css'\nimport './index.css'\n\nconst { StringReader, reverseHex } = utils\n\nconst RemoveLiquidity = () => {\n  const [liquidityBalance, setLiquidityBalance] = useState(0)\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState(0)\n  const [token2Amount, setToken2Amount] = useState(0)\n  const [pair, setPair] = useState({})\n  const [amount, setAmount] = useState(0)\n  const [showPrice, setShowPrice] = useState(false)\n  const { account, slippage, tokens, pairs, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n  const location = useLocation()\n  const pairId = location.pathname.match(/\\/([^/]+)$/)[1]\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (account && pairs.length && pairId) {\n      getLiquidityBalanceByPairId(pairId).then((resp) => {\n        setLiquidityBalance(resp)\n      })\n    }\n  }, [account, pairs, SWAP_ADDRESS])\n\n  useEffect(() => {\n    if (tokens.length && pairs.length && pairId) {\n      const pair = pairs.find((p) => `${p.id}` === pairId)\n      setPair(pair)\n      setToken1(tokens.find((t) => t.id === pair.token1))\n      setToken2(tokens.find((t) => t.id === pair.token2))\n      setShowPrice(true)\n    }\n  }, [pairs, tokens])\n\n  useEffect(() => {\n    if (pair && token1.id && token2.id && pairId && liquidityBalance) {\n      const shareOfPool = new BigNumber(liquidityBalance).div(pair.lp)\n      const token1Amount = shareOfPool.times(pair.reserve1).div(10 ** token1.decimals)\n      const token2Amount = shareOfPool.times(pair.reserve2).div(10 ** token2.decimals)\n\n      setToken1Amount(new BigNumber(amount).div(100).times(token1Amount).toFixed(token1.decimals))\n      setToken2Amount(new BigNumber(amount).div(100).times(token2Amount).toFixed(token2.decimals))\n    }\n  }, [amount, pair, token1, token2])\n\n  function getLiquidityBalanceByPairId(id) {\n    if (SWAP_ADDRESS) {\n      return client.api.smartContract.invokeWasmRead({\n        scriptHash: SWAP_ADDRESS,\n        operation: 'balanceOf',\n        args: [\n          {\n            type: 'Long',\n            value: id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n      }).then((resp) => {\n        const strReader = new StringReader(resp)\n        const balance = readBigNumberUint128(strReader)\n        \n        return balance\n      })\n    }\n  }\n\n  function getPairPrice() {\n    return new BigNumber(pair.reserve2).div(10 ** token2.decimals).div(pair.reserve1).times(10 ** token1.decimals).toString()\n  }\n\n  function onNavigateToPool() {\n    history.goBack()\n  }\n\n  async function onRemove() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: token1.id\n          },\n          {\n            type: 'Long',\n            value: token2.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(liquidityBalance).times(amount / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(10 ** token1.decimals).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(10 ** token2.decimals).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n\n        const addResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'remove_liquidity',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (addResult.transaction) {\n          onNavigateToPool()\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${addResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"remove-liquidity-wrapper\">\n      <div className=\"rl-header\">Remove Liquidity\n        <div className=\"back-icon\" onClick={() => onNavigateToPool()}></div>\n      </div>\n      <div className=\"rl-wrapper\">\n        <div className=\"rl-amount\">\n          <div className=\"rl-amount-label\">Amount<span>{amount}%</span></div>\n          <Slider value={amount} onChange={(e) => setAmount(e)} />\n          <div className=\"quick-items\">\n            <div className=\"quick-item\" onClick={() => setAmount(25)}>25%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(50)}>50%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(75)}>75%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(100)}>Max</div>\n          </div>\n        </div>\n        <div className=\"icon-arrow-down\" />\n        <div className=\"rl-receive-wrapper\">\n          <div className={`receive-token-item icon-${token1.name}`}>\n            {token1.name}\n            <span>{token1Amount}</span>\n          </div>\n          <div className={`receive-token-item icon-${token2.name}`}>\n            {token2.name}\n            <span>{token2Amount}</span>\n          </div>\n        </div>\n        {\n          showPrice ? (\n            <div className=\"rl-price-wrapper\">\n              <div className=\"price-wrapper-lable\">Price</div>\n              <div className=\"price\">1 {token1.name} = {getPairPrice()} {token2.name}</div>\n              <div className=\"price-reverse\">1 {token2.name} = {new BigNumber(1).div(getPairPrice()).toString()} {token1.name}</div>\n            </div>\n          ) : null\n        }\n        { amount ? <div className=\"rl-remove-btn\" onClick={() => onRemove()}>Remove</div> : <div className=\"rl-remove-btn disabled\">Remove</div> }\n      </div>\n    </div>\n  )\n}\n\nexport default RemoveLiquidity","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport Tooltip from 'rc-tooltip'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { DAI_PRICE } from '../../utils/constants'\nimport { GOVERNANCE_ADDRESS } from '../../config'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport { readBigNumberUint128, getTokenIconDom } from '../../utils/token'\n\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Staking = () => {\n  const [showClosedEntry, setShowClosedEntry] = useState(false)\n  const [showClosed, setShowClosed] = useState(false)\n  const [unxPrice, setUnxPrice] = useState(0)\n  const [tokenPrices, setTokenPrices] = useState({})\n  const { account, tokens, stakingTokens, poolStat, pairs, stakingPoolWeightRatio, STAKING_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    stakingTokens: state.staking.tokens,\n    poolStat: state.gov.poolStat,\n    pairs: state.swap.pairs,\n    stakingPoolWeightRatio: state.gov.poolStat.pools.staking.ratio,\n    STAKING_ADDRESS: state.gov.poolStat.pools.staking.address\n  }))\n  const dispatch = useDispatch()\n  const setStakingTokens = useCallback((tokens) => dispatch({ type: 'SET_STAKING_TOKENS', tokens }), [])\n  const history = useHistory()\n  const Alert = useAlert()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (pairs.length && (!unxPrice || unxPrice === '0')) {\n      const unxTk = tokens.find((t) => t.name === 'UNX')\n      const daiTk = tokens.find((t) => t.name === 'pDAI')\n      const pair = pairs.find((p) => (p.token1 === unxTk.id && p.token2 === daiTk.id) || (p.token2 === unxTk.id && p.token1 === daiTk.id))\n\n      if (pair) {\n        if (pair.token1 === unxTk.id) {\n          setUnxPrice(new BigNumber(pair.reserve2).div(10 ** daiTk.decimals).div(pair.reserve1).times(10 ** unxTk.decimals).times(DAI_PRICE).toString())\n        } else {\n          setUnxPrice(new BigNumber(pair.reserve1).div(10 ** daiTk.decimals).div(pair.reserve2).times(10 ** unxTk.decimals).times(DAI_PRICE).toString())\n        }\n      }\n    }\n  }, [pairs, tokens])\n\n  useEffect(() => {\n    getStakingTokenPrice()\n    let interval = setInterval(() => getStakingTokenPrice, 3000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [stakingTokens])\n\n  useEffect(() => {\n    getStakingTokenBalance()\n    let interval = setInterval(() => getStakingTokenBalance, 3000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokens, STAKING_ADDRESS])\n\n  useEffect(() => {\n    if (stakingTokens.filter((st) => !st.originWeight).length) {\n      setShowClosedEntry(true)\n    } else {\n      setShowClosedEntry(false)\n    }\n  }, [stakingTokens])\n\n  async function getStakingTokenPrice() {\n    if (stakingTokens.length) {\n      try {\n        const unxToken = tokens.find((t) => t.name === 'UNX')\n        const parsedTokenPrices = {}\n        const LPTokens = stakingTokens.filter((st) => st.ty === 3)\n        const nonLPTokens = stakingTokens.filter((st) => st.ty !== 3)\n        const tokenIds = nonLPTokens.map((t) => t.id)\n        \n        LPTokens.map((lpt) => {\n          const tokenNames = lpt.name.split('-').filter((t) => t !== 'LP' && t !== 'UNX')\n\n          tokenNames.map((tn) => {\n            const tokenId = tokens.find((t) => t.name === tn).id\n          \n            if (tokenIds.indexOf(tokenId) < 0) {\n              tokenIds.push(tokenId)\n            }\n          })\n        })\n\n        const args = [\n          {\n            type: 'Array',\n            value: tokenIds.map((id) => ({ type: 'Long', value: id }))\n          }\n        ]\n        const tokenPriceStr = await client.api.smartContract.invokeWasmRead({\n          scriptHash: GOVERNANCE_ADDRESS,\n          operation: 'token_prices',\n          args\n        })\n        const strReader = new StringReader(tokenPriceStr)\n        const tokenCount = strReader.readNextLen()\n        for (let i = 0; i < tokenCount; i++) {\n          parsedTokenPrices[tokenIds[i]] = readBigNumberUint128(strReader)\n        }\n\n        LPTokens.map((lpt) => {\n          const tokenNames = lpt.name.split('-').filter((t) => t !== 'LP')\n          const token1 = tokens.find((t) => t.name === tokenNames[0])\n          const token2 = tokens.find((t) => t.name === tokenNames[1])\n          const pair = pairs.find((p) => (p.token1 === token1.id && p.token2 === token2.id) || p.token1 === token2.id && p.token2 === token1.id)\n\n          if (pair) {\n            let value = new BigNumber(0)\n            if (token1.name === 'UNX' || token2.name === 'UNX') {\n              const nonUnxToken = (token1.name === 'UNX') ? token2 : token1\n\n              if (pair.token1 === unxToken.id) {\n                value = value.plus(new BigNumber(pair.reserve2).div(10 ** nonUnxToken.decimals).times(parsedTokenPrices[pair.token2]).times(2))\n              } else {\n                value = value.plus(new BigNumber(pair.reserve1).div(10 ** nonUnxToken.decimals).times(parsedTokenPrices[pair.token1]).times(2))\n              }\n            } else {\n              if (pair.token1 === token1.id) {\n                value  = value.plus(new BigNumber(pair.reserve1).div(10 ** token1.decimals).times(parsedTokenPrices[pair.token1])).plus(new BigNumber(pair.reserve2).div(10 ** token2.decimals).times(parsedTokenPrices[pair.token2]))\n              } else {\n                value  = value.plus(new BigNumber(pair.reserve1).div(10 ** token2.decimals).times(parsedTokenPrices[pair.token1])).plus(new BigNumber(pair.reserve2).div(10 ** token1.decimals).times(parsedTokenPrices[pair.token2]))\n              }\n            }\n\n            parsedTokenPrices[lpt.id] = value.div(pair.lp).times(10 ** 18).toString()\n          }\n        })\n        \n        setTokenPrices(parsedTokenPrices)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  async function getStakingTokenBalance() {\n    if (tokens.length && STAKING_ADDRESS) {\n      try {\n        const statStr = await client.api.smartContract.invokeWasmRead({\n          scriptHash: STAKING_ADDRESS,\n          operation: 'stat',\n          args: []\n        })\n        const parsedTokens = []\n        const strReader = new StringReader(statStr)\n        const tokenCount = strReader.readNextLen()\n        for (let i = 0; i < tokenCount; i++) {\n          const token = {}\n          token.id = strReader.readUint128()\n          const tempToken = tokens.find((t) => t.id === token.id)\n          token.weight = strReader.readUint128()\n          token.balance = readBigNumberUint128(strReader)\n\n          parsedTokens.push(Object.assign(tempToken, token))\n        }\n\n        const totalWeight = parsedTokens.filter((t) => t.balance).reduce((a, b) => a + b.weight, 0)\n        const filteredTokens = parsedTokens.map((t) => {\n          return {\n            ...t,\n            originWeight: t.weight,\n            weight: t.balance ? (t.weight / totalWeight) : 0\n          }\n        })\n\n        setStakingTokens(filteredTokens)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  function onSelectToken(token) {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    history.push(`/staking/${token.id}`)\n  }\n\n  function getTip(token) {\n    return `${token.name} is the hidden receipt for WING ${token.name.replace('f', '')} suppliers`\n  }\n\n  function generateStakingPool() {\n    if (stakingTokens.length) {\n      const openStakingTokens = stakingTokens.filter((t) => !!t.originWeight)\n      const closedStakingTokens = stakingTokens.filter((t) => !t.originWeight)\n\n      return (showClosed ? closedStakingTokens : openStakingTokens).map((token) => {\n        const unxAmount = new BigNumber(poolStat.distributionInfo.amount || 0)\n          .div(poolStat.distributionInfo.period || 1)\n          .times(86400 * 365)\n          .times(stakingPoolWeightRatio || 0)\n          .times(token.weight)\n        const tokenAPY = tokenPrices[token.id] ? unxAmount\n          .times(unxPrice)\n          .times(10 ** 12)\n          .div(tokenPrices[token.id])\n          .div(token.balance)\n          .times(10 ** token.decimals)\n          .times(100)\n          .toFixed(2) : 0\n\n        return (\n          <div className={`pool-list-item ${!showClosed ? '' : 'pool-list-item-disabled'}`} key={token.name}>\n            <div className=\"item-detail\">\n              <div className=\"item-detail-wrapper\">\n                { token.ty === 3 && <div className=\"corner-badge\">10X</div> }\n                <div className=\"staking-token\">\n                  {\n                    token.ty === 3 ? (\n                      <div className=\"staking-text\">Deposit\n                        {getTokenIconDom(token, 'stake-lp-token')}\n                      </div>\n                    ) : (\n                      <div className={`staking-text icon-${token.name}`}>Deposit</div>\n                    )\n                  }\n                  {\n                    token.name.startsWith('f') ? (\n                      <Tooltip placement=\"top\" overlay={getTip(token)}>\n                        <div className=\"staking-token-name\">{token.name}</div>\n                      </Tooltip>\n                    ) : <div className=\"staking-token-name\">{token.name}</div>\n                  }\n                </div>\n                <div className=\"earn-line\">Earn<span>UNX</span></div>\n                <div className=\"earn-line\">APY<span>{tokenAPY}%</span></div>\n                <div className=\"total-staking\">Total Staking<span>{new BigNumber(token.balance || 0).div(10 ** token.decimals).toString()}</span></div>\n                <div className=\"select-btn\" onClick={() => onSelectToken(token)}>{ showClosed ? 'Unstake' : 'Stake' }</div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    }\n  }\n\n  return (\n    <div className=\"stake-container\">\n      <div className=\"stake-pool\">\n        { !stakingTokens.length ? <div className=\"title\">Loading...</div> : null }\n        {\n          showClosed ? (\n            <div className=\"unstake-pool-title\">\n              <div className=\"back-icon\" onClick={() => setShowClosed(false)}></div>\n              Unstake from Closed Pool\n            </div>\n          ) : null\n        }\n        <div className=\"pool-list\">\n          {generateStakingPool()}\n        </div>\n        { showClosedEntry ? <div className=\"closed-pool-entrance\" onClick={() => setShowClosed(true)}>Unstake from Closed Pool</div> : null }\n      </div>\n    </div>\n  )\n}\n\nexport default Staking","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport Tooltip from 'rc-tooltip';\nimport Input from '../../../components/input'\nimport { readBigNumberUint128, getTokenBalance, getTokenIconDom } from '../../../utils/token'\nimport { GOVERNANCE_ADDRESS, TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\n\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst StakingDetail = (props) => {\n  const [stakeToken, setStakeToken] = useState({})\n  const [tokenBalance, setTokenBalance] = useState('-')\n  const [tokenWeight, setTokenWeight] = useState(1)\n  const [amount, setAmount] = useState('')\n  const [myStake, setMyStake] = useState({})\n  const [stakeType, setStakeType] = useState('stake')\n  const [claimableWing, setClaimableWing] = useState(0)\n  const [showStakingModal, setShowStakingModal] = useState(false)\n  const { account, tokens, stakingTokens, STAKING_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    stakingTokens: state.staking.tokens,\n    STAKING_ADDRESS: state.gov.poolStat.pools.staking.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const Alert = useAlert()\n  const location = useLocation()\n  const history = useHistory()\n  const tokenId = location.pathname.match(/\\/([^/]+)$/)[1]\n\n  useEffect(() => {\n    if (stakingTokens.length) {\n      setTokenWeight(stakingTokens.find((t) => `${t.id}` === tokenId).originWeight)\n    }\n  }, [stakingTokens])\n\n  useEffect(() => {\n    if (account && tokens.length) {\n      const sToken = tokens.find((t) => `${t.id}` === tokenId)\n\n      setStakeToken(sToken)\n      getTokenBalance(account, sToken, setTokenBalance)\n    }\n  }, [tokens, account])\n\n\n  useEffect(() => {\n    const getClaimableWing = async () => {\n      if (account && stakeToken.ty === 2) {\n        try {\n          const resp = await client.api.smartContract.invokeWasmRead({\n            scriptHash: GOVERNANCE_ADDRESS,\n            operation: 'claimable_wing',\n            args: [\n              {\n                type: 'Address',\n                value: account\n              },\n              {\n                type: 'Long',\n                value: stakeToken.id\n              }\n            ]\n          })\n          const strReader = new StringReader(resp)\n\n          setClaimableWing(readBigNumberUint128(strReader))\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getClaimableWing()\n    let interval = setInterval(getClaimableWing, 10000)\n\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, stakeToken])\n\n  useEffect(() => {\n    if (account && stakeToken.id && STAKING_ADDRESS) {\n      getAccountStake()\n      const interval = setInterval(getAccountStake, 10000)\n      return () => {\n        interval && clearInterval(interval)\n      }\n    }\n  }, [stakeToken, account, STAKING_ADDRESS])\n\n  useEffect(() => {\n    if (!account) {\n      setMyStake({})\n    }\n  }, [account])\n\n  function getAccountStakeByTokenId(id) {\n    return client.api.smartContract.invokeWasmRead({\n      scriptHash: STAKING_ADDRESS,\n      operation: 'account_stake_info',\n      args: [\n        {\n          type: 'Address',\n          value: account\n        },\n        {\n          type: 'Long',\n          value: id\n        }\n      ]\n    }).then((stakeStr) => {\n      const strReader = new StringReader(stakeStr)\n      return {\n        id,\n        balance: new BigNumber(readBigNumberUint128(strReader) || 0).div(10 ** (stakeToken.decimals || 0)).toString(),\n        interest: readBigNumberUint128(strReader)\n      }\n    })\n  }\n\n  function getAccountStake() {\n    getAccountStakeByTokenId(tokenId)\n    .then((stake) => {\n      setMyStake(stake)\n    })\n    .catch((e) => {\n      console.log('get account stakes', e)\n    })\n  }\n\n  function handleStakeClick(action) {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    setStakeType(action)\n    setShowStakingModal(true)\n  }\n\n  async function onStake() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (stakeToken.id && STAKING_ADDRESS) {\n      if (amount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      if (stakeType === 'unstake' && new BigNumber(amount).gt(new BigNumber(myStake.balance))) {\n        Alert.error('Amount should be less than your balance')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: stakeToken.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(amount).times(new BigNumber(10 ** stakeToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const param = {\n          scriptHash: STAKING_ADDRESS,\n          operation: stakeType,\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        }\n\n        const stakeResult = await client.api.smartContract.invokeWasm(param)\n\n        if (stakeResult.transaction) {\n          setShowStakingModal(false)\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${stakeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setShowStakingModal(false)\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onHarvest() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (STAKING_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: stakeToken.id\n          }\n        ]\n        const param = {\n          scriptHash: STAKING_ADDRESS,\n          operation: 'harvest',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        }\n\n        const harvestResult = await client.api.smartContract.invokeWasm(param)\n\n        if (harvestResult.transaction) {\n          setShowStakingModal(false)\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${harvestResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function onNavigateToStaking() {\n    history.goBack()\n  }\n\n  const maxInput = () => {\n    if (stakeType === 'stake' && !isNaN(tokenBalance)) {\n      setAmount(tokenBalance)\n    } else if (stakeType === 'unstake' && !isNaN(myStake.balance)) {\n      setAmount(myStake.balance)\n    }\n  }\n\n  return (\n    <div className=\"stake-container\">\n      <div className=\"stake-title\">\n        <div className=\"back-icon\" onClick={() => onNavigateToStaking()} />\n        Earn <span className=\"icon-UNX\">UNX</span> by\n        {getTokenIconDom(stakeToken, 'inline-token-wrapper')}\n        {stakeToken.name || ''}\n      </div>\n      <div className=\"stake-token-detail\">\n        <div className=\"stake-token-amount\">\n          {getTokenIconDom(stakeToken, 'stake-token-wrapper')}\n          <div className=\"stake-token-amount-detail\">\n            <div className=\"stake-token-amount-label\">Current Staked</div>\n            <div className=\"stake-token-amount-info\">{myStake.balance} {stakeToken.name}</div>\n          </div>\n        </div>\n        <div className=\"stake-token-actions\">\n          { tokenWeight ? <div className=\"stake-token-action\" onClick={() => handleStakeClick('stake')}>Stake</div> : null }\n          <div className=\"stake-token-action\" onClick={() => handleStakeClick('unstake')}>Unstake</div>\n        </div>\n      </div>\n      <div className=\"harvest-token-detail\">\n        <div className=\"harvest-token-amount icon-UNX\">\n          <div className=\"harvest-token-amount-label\">Rewards Available</div>\n          <div className=\"harvest-token-amount-info\">{new BigNumber(myStake.interest || 0).div(10 ** 9).toString()} UNX</div>\n        </div>\n        <div className=\"harvest-token-actions\">\n          <div className=\"harvest-token-action\" onClick={() => onHarvest() }>Harvest</div>\n        </div>\n      </div>\n      {\n        stakeToken.ty === 2 ? (\n          <div className=\"claimable-wing-detail\">\n            <div className=\"claimable-wing-amount icon-WING\">{new BigNumber(claimableWing || 0).div(10 ** 9).toString()}\n              <div className=\"claimable-wing-label\">WING Earned\n                <Tooltip placement=\"top\" overlay=\"WING earned by ftoken will be transferred to your account when you stake or unstake\">\n                  <span>?</span>\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      { showStakingModal ? (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper\">\n            <div className=\"close-btn\" onClick={() => { setShowStakingModal(false); setAmount(''); }}></div>\n            <div className=\"stake-wrapper\">\n              {/* <div className={`icon-${stakeToken.name} token-placeholder`}></div> */}\n              {getTokenIconDom(stakeToken, 'token-placeholder')}\n              <div className=\"form-item\">\n                <div className=\"input-label\">Amount\n                  {\n                    stakeType === 'stake' ? (\n                      <span className=\"hint\">Balance: {tokenBalance}</span>\n                    ) : (\n                      <span className=\"hint\">Staked: {myStake.balance}</span>\n                    )\n                  }\n                </div>\n                <div className=\"input-wrapper\">\n                  <Input placeholder=\"0.0\" value={amount} decimals={stakeToken.decimals || 0} onChange={(amount) => setAmount(amount)} />\n                  <div className=\"input-max-btn\" onClick={() => maxInput()}>MAX</div>\n                </div>\n              </div>\n              <div className=\"stake-btn\" onClick={() => onStake()}>{ stakeType === 'stake' ? 'Stake' : 'Unstake'}</div>\n            </div>\n          </div>\n        </div>\n      ) : null }\n    </div>\n  )\n}\n\nexport default StakingDetail","import React from 'react'\nimport './index.css'\n\nconst Token = (props) => {\n  return (\n    <div className=\"coming-soon-placeholder\"></div>\n  )\n}\n\nexport default Token","import React from 'react'\nimport './index.css'\n\nconst Option = (props) => {\n  return (\n    <div className=\"coming-soon-placeholder\"></div>\n  )\n}\n\nexport default Option","import axios from 'axios'\nimport { EVENT_API_BASE_URL } from '../config'\n\nconst instance = axios.create({\n  baseURL: EVENT_API_BASE_URL,\n  timeout: 30000,\n  headers: { 'Content-Type': 'application/json' }\n})\n\ninstance.interceptors.response.use(\n  (response) => {\n    const res = response.data;\n    return res\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\nexport default instance","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport Tooltip from 'rc-tooltip';\nimport TokenInput from '../../components/tokenInput';\nimport Input from '../../components/input'\nimport EventRequest from '../../utils/eventRequest'\nimport { readBigNumberUint128 } from '../../utils/token'\nimport { DAI_PRICE, SYNTH_PRICE_DECIMALS, ASSET_STATUS, LEVERAGE_TYPE, TRANSACTION_FEE_RATE } from '../../utils/constants'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport './index.css'\n\nconst { StringReader, reverseHex } = utils\n\nconst Synth = () => {\n  const [mintAsset, setMintAsset] = useState({})\n  const [mintAmount, setMintAmount] = useState('')\n  const [unxNeededForMint, setUnxNeededForMint] = useState('')\n  const [burnAsset, setBurnAsset] = useState({})\n  const [burnAmount, setBurnAmount] = useState('')\n  const [unxGetForBurn, setUnxGetForBurn] = useState('')\n  const [exchangeAsset, setExchangeAsset] = useState({})\n  const [exchangeToAsset, setExchangeToAsset] = useState({})\n  const [exchangeAmount, setExchangeAmount] = useState('')\n  const [exchangeToAssets, setExchangeToAssets] = useState([])\n  const [exchangeToAmount, setExchangeToAmount] = useState('')\n  const [unxToken, setUnxToken] = useState({})\n  const [unxPrice, setUnxPrice] = useState(0)\n  const [showMintModal, setShowMintModal] = useState(false)\n  const [showBurnModal, setShowBurnModal] = useState(false)\n  const [showExchangeModal, setShowExchangeModal] = useState(false)\n  const { account, tokens, pairs, poolStat, stat, marketStat, availableReward, synthType, synthPoolWeightRatio, SYNTH_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    poolStat: state.gov.poolStat,\n    ...state.synth,\n    synthPoolWeightRatio: state.gov.poolStat.pools.synth.ratio,\n    SYNTH_ADDRESS: state.gov.poolStat.pools.synth.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const setStat = useCallback((stat) => dispatch({ type: 'SET_SYNTH_STAT', stat }), [])\n  const setMarketStat = useCallback((marketStat) => dispatch({ type: 'SET_SYNTH_MARKET_STAT', marketStat }), [])\n  const setAvailableReward = useCallback((availableReward) => dispatch({ type: 'SET_SYNTH_AVAILABLE_REWARD', availableReward }), [])\n  const setSynthType = useCallback((synthType) => dispatch({ type: 'SET_SYNTH_TYPE', synthType }), [])\n\n  const Alert = useAlert()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (tokens.length) {\n      setUnxToken(tokens.find((t) => t.name === 'UNX'))\n    }\n  }, [tokens])\n\n  useEffect(() => {\n    if (tokens.length && pairs.length && (!unxPrice || unxPrice === '0') && marketStat.marketAssetValue) {\n      const unxTk = tokens.find((t) => t.name === 'UNX')\n      if (!marketStat.marketAssetBalances.length) {\n        const daiTk = tokens.find((t) => t.name === 'pDAI')\n        const pair = pairs.find((p) => (p.token1 === unxTk.id && p.token2 === daiTk.id) || (p.token2 === unxTk.id && p.token1 === daiTk.id))\n\n        if (pair) {\n          if (pair.token1 === unxTk.id) {\n            setUnxPrice(new BigNumber(pair.reserve2).div(10 ** daiTk.decimals).div(pair.reserve1).times(10 ** unxTk.decimals).times(DAI_PRICE).times(SYNTH_PRICE_DECIMALS).toString())\n          } else {\n            setUnxPrice(new BigNumber(pair.reserve1).div(10 ** daiTk.decimals).div(pair.reserve2).times(10 ** unxTk.decimals).times(DAI_PRICE).times(SYNTH_PRICE_DECIMALS).toString())\n          }\n        }\n      } else {\n        setUnxPrice(new BigNumber(marketStat.marketAssetValue).div(marketStat.marketTokenBalance).times(10 ** unxTk.decimals).toString())\n      }\n\n      setUnxToken(unxTk)\n    }\n  }, [pairs, tokens, marketStat])\n\n  useEffect(() => {\n    async function getAvailableReward() {\n      if (account && unxToken.id && SYNTH_ADDRESS) {\n        try {\n          const claimStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'claim_unx',\n            args: [\n              {\n                type: 'Long',\n                value: unxToken.id\n              },\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n\n          const strReader = new StringReader(claimStr)\n          const availableReward = strReader.readUint128()\n\n          setAvailableReward(new BigNumber(availableReward).toString())\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getAvailableReward()\n    const interval = setInterval(getAvailableReward, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, unxToken, SYNTH_ADDRESS])\n\n  useEffect(() => {\n    async function getStat() {\n      if (tokens.length && SYNTH_ADDRESS) {\n        try {\n          const statStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'stat',\n            args: []\n          })\n          const strReader = new StringReader(statStr)\n  \n          reverseHex(strReader.read(20)) // govAddress\n          strReader.readUint128() // daiTokenId\n          strReader.readUint128() // unxTokenId\n          strReader.readUint128() // pairId\n\n          const liveAssetCount = strReader.readNextLen()\n          const liveAssets = []\n          for (let i = 0; i < liveAssetCount; i++) {\n            const asset = {}\n            asset.assetId = strReader.readUint128()\n            asset.tokenId = strReader.readUint128()\n\n            const token = tokens.find((t) => t.id === asset.tokenId)\n            asset.tokenName = token.name\n            asset.decimals = token.decimals\n            asset.leverageType = strReader.readNextByte()\n            asset.times = strReader.readUint128()\n            asset.entryPrice = readBigNumberUint128(strReader)\n            asset.lowLimit = readBigNumberUint128(strReader)\n            asset.highLimit = readBigNumberUint128(strReader)\n            asset.status = strReader.readNextByte()\n            asset.frozenBy = reverseHex(strReader.read(20))\n            asset.frozenTime = strReader.readUint64()\n\n            if (asset.tokenName.startsWith('p')) {\n              asset.tokenName = asset.tokenName.replace('p', '')\n            }\n            asset.tokenName = `${asset.leverageType === LEVERAGE_TYPE.Negative ? 'i' : 's'}${asset.tokenName}`\n            asset.id = asset.assetId\n            asset.value = asset.assetId\n            asset.label = `${asset.tokenName}${asset.times !== 1 ? ` (${asset.times}x)` : ''}`\n            liveAssets.push(asset)\n          }\n\n          const frozenAssetCount = strReader.readNextLen()\n          const frozenAssets = []\n          for (let i = 0; i < frozenAssetCount; i++) {\n            const asset = {}\n            asset.assetId = strReader.readUint128()\n            asset.tokenId = strReader.readUint128()\n\n            const token = tokens.find((t) => t.id === asset.tokenId)\n            asset.tokenName = token.name\n            asset.decimals = token.decimals\n            asset.leverageType = strReader.readNextByte()\n            asset.times = strReader.readUint128()\n            asset.entryPrice = readBigNumberUint128(strReader)\n            asset.lowLimit = readBigNumberUint128(strReader)\n            asset.highLimit = readBigNumberUint128(strReader)\n            asset.status = strReader.readNextByte()\n            asset.frozenBy = reverseHex(strReader.read(20))\n            asset.frozenTime = strReader.readUint64()\n\n            if (asset.tokenName.startsWith('p')) {\n              asset.tokenName = asset.tokenName.replace('p', '')\n            }\n            asset.tokenName = `${asset.leverageType === LEVERAGE_TYPE.Negative ? 'i' : 's'}${asset.tokenName}`\n            asset.label = `${asset.tokenName}${asset.times !== 1 ? ` (${asset.times}x)` : ''}`\n  \n            frozenAssets.push(asset)\n          }\n\n          const tokenPriceCount = strReader.readNextLen()\n          const tokenPrices = []\n          for (let i = 0; i < tokenPriceCount; i++) {\n            const tokenPrice = {}\n            tokenPrice.tokenId = strReader.readUint128()\n            tokenPrice.price = readBigNumberUint128(strReader)\n  \n            tokenPrices.push(tokenPrice)\n          }\n\n          for (let liveAsset of liveAssets) {\n            const currentPrice = tokenPrices.find((tp) => tp.tokenId === liveAsset.tokenId).price\n            let tokenPrice = currentPrice\n\n            if (liveAsset.lowLimit && new BigNumber(currentPrice).lte(new BigNumber(liveAsset.lowLimit))) {\n              tokenPrice = liveAsset.lowLimit\n            } else if (liveAsset.highLimit && new BigNumber(currentPrice).gte(new BigNumber(liveAsset.highLimit))) {\n              tokenPrice = liveAsset.highLimit\n            }\n\n            liveAsset.tokenPrice = tokenPrice\n\n            if (liveAsset.leverageType === LEVERAGE_TYPE.Positive) {\n              liveAsset.price = new BigNumber(liveAsset.entryPrice).plus(new BigNumber(tokenPrice).times(liveAsset.times)).minus(new BigNumber(liveAsset.entryPrice).times(liveAsset.times)).toString()\n            } else {\n              liveAsset.price = new BigNumber(liveAsset.entryPrice).plus(new BigNumber(liveAsset.entryPrice).times(liveAsset.times)).minus(new BigNumber(tokenPrice).times(liveAsset.times)).toString()\n            }\n\n            if ((liveAsset.lowLimit && new BigNumber(liveAsset.tokenPrice).lte(new BigNumber(liveAsset.lowLimit))) || (liveAsset.highLimit && new BigNumber(liveAsset.tokenPrice).gte(new BigNumber(liveAsset.highLimit)))) {\n              liveAsset.unprocessedFrozen = true\n            }\n          }\n\n          for (let frozenAsset of frozenAssets) {\n            frozenAsset.tokenPrice = tokenPrices.find((tp) => tp.tokenId === frozenAsset.tokenId).price\n            if (frozenAsset.status === ASSET_STATUS.HighLimit) {\n              frozenAsset.tokenPrice = frozenAsset.highLimit\n            } else if (frozenAsset.status === ASSET_STATUS.LowLimit) {\n              frozenAsset.tokenPrice = frozenAsset.lowLimit\n            }\n          }\n\n          setStat({\n            liveAssets,\n            frozenAssets,\n            tokenPrices\n          })\n        } catch (e) {\n          console.log('get synth stat', e)\n        }\n      }\n    }\n\n    getStat()\n    const interval = setInterval(getStat, 5000)\n\n    return () => clearInterval(interval)\n  }, [tokens, SYNTH_ADDRESS])\n\n  useEffect(() => {\n    async function getMarketStat() {\n      if (account && unxToken.id && SYNTH_ADDRESS) {\n        try {\n          const statStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'market_stat',\n            args: [\n              {\n                type: 'Long',\n                value: unxToken.id\n              },\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n          const strReader = new StringReader(statStr)\n\n          const marketAssetBalanceCount = strReader.readNextLen()\n          const marketAssetBalances = []\n          let marketAssetValueSum = new BigNumber(0)\n          for (let i = 0; i < marketAssetBalanceCount; i++) {\n            const assetBalance = {}\n            assetBalance.assetId = strReader.readUint128()\n            assetBalance.balance = readBigNumberUint128(strReader)\n            assetBalance.assetPrice = readBigNumberUint128(strReader)\n\n            const asset = stat.liveAssets ? [...stat.liveAssets, ...stat.frozenAssets].find((la) => la.assetId === assetBalance.assetId) : null\n\n            if (asset) {\n              marketAssetValueSum = marketAssetValueSum.plus(new BigNumber(assetBalance.assetPrice).times(assetBalance.balance).div(10 ** asset.decimals))\n            }\n  \n            marketAssetBalances.push(assetBalance)\n          }\n\n          const accountAssetBalanceCount = strReader.readNextLen()\n          const accountAssetBalances = []\n          let accountAssetValueSum = new BigNumber(0)\n          for (let i = 0; i < accountAssetBalanceCount; i++) {\n            const assetBalance = {}\n            assetBalance.assetId = strReader.readUint128()\n            assetBalance.balance = readBigNumberUint128(strReader)\n            assetBalance.assetPrice = readBigNumberUint128(strReader)\n\n            const asset = stat.liveAssets ? [...stat.liveAssets, ...stat.frozenAssets].find((la) => la.assetId === assetBalance.assetId) : null\n\n            if (asset) {\n              accountAssetValueSum = accountAssetValueSum.plus(new BigNumber(assetBalance.assetPrice).times(assetBalance.balance).div(10 ** asset.decimals))\n            }\n  \n            accountAssetBalances.push(assetBalance)\n          }\n\n          const marketStakeValue = readBigNumberUint128(strReader)\n          const accountStakeValue = readBigNumberUint128(strReader)\n          const marketTokenBalance = readBigNumberUint128(strReader)\n          const accountClaimedValue = readBigNumberUint128(strReader)\n          const accountWithdrawedStakeValue = readBigNumberUint128(strReader)\n          const transferable = (marketAssetValueSum.toString() !== '0') ? accountAssetValueSum.div(marketAssetValueSum).times(marketTokenBalance).toString() : '0'\n\n          const parsedMarketStat = {\n            marketAssetBalances,\n            accountAssetBalances,\n            marketAssetValue: marketAssetValueSum.toString(),\n            accountAssetValue: accountAssetValueSum.toString(),\n            transferable,\n            marketStakeValue,\n            accountStakeValue,\n            marketTokenBalance,\n            accountClaimedValue,\n            accountWithdrawedStakeValue\n          }\n\n          setMarketStat(parsedMarketStat)\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getMarketStat()\n    const interval = setInterval(getMarketStat, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, unxToken, stat.liveAssets, SYNTH_ADDRESS])\n\n  const handleMintAmountChange = (amount) => {\n    setMintAmount(amount)\n    if (unxPrice && amount) {\n      setUnxNeededForMint(new BigNumber(amount).times(mintAsset.price).div(unxPrice).div(1 - TRANSACTION_FEE_RATE).toFixed(unxToken.decimals))\n    } else if (Number(amount) === 0) {\n      setUnxNeededForMint('')\n    }\n  }\n\n  const handleUnxNeededForMintChange = (amount) => {\n    setUnxNeededForMint(amount)\n    if (unxPrice && amount) {\n      setMintAmount(new BigNumber(amount).times(unxPrice).div(mintAsset.price).times(1 - TRANSACTION_FEE_RATE).toFixed(mintAsset.decimals))\n    } else if (Number(amount) === 0) {\n      setMintAmount('')\n    }\n  }\n\n  const handleBurnAmountChange = (amount) => {\n    setBurnAmount(amount)\n    if (unxPrice && amount) {\n      setUnxGetForBurn(new BigNumber(amount).times(burnAsset.assetPrice).div(unxPrice).times(1 - TRANSACTION_FEE_RATE).toFixed(unxToken.decimals))\n    } else if (Number(amount) === 0) {\n      setUnxGetForBurn('')\n    }\n  }\n\n  const handleUnxGetForBurnChange = (amount) => {\n    setUnxGetForBurn(amount)\n    if (unxPrice && amount) {\n      setBurnAmount(new BigNumber(amount).times(unxPrice).div(burnAsset.assetPrice).div(1 - TRANSACTION_FEE_RATE).toFixed(burnAsset.decimals))\n    } else if (Number(amount) === 0) {\n      setBurnAmount('')\n    }\n  }\n\n  const handleExchangeAmountChange = (amount) => {\n    setExchangeAmount(amount)\n    if (amount) {\n      setExchangeToAmount(new BigNumber(exchangeAsset.price).div(exchangeToAsset.price).times(amount).times(10 ** exchangeAsset.decimals).div(10 ** exchangeToAsset.decimals).times(1 - TRANSACTION_FEE_RATE).toFixed(exchangeToAsset.decimals))\n    } else if (Number(amount) === 0) {\n      setExchangeToAmount('')\n    }\n  }\n\n  const handleChengeExchangeToAmount = (amount) => {\n    setExchangeToAmount(amount)\n    if (amount) {\n      setExchangeAmount(new BigNumber(amount).times(10 ** exchangeToAsset.decimals).div(10 ** exchangeAsset.decimals).times(exchangeToAsset.price).div(exchangeAsset.price).div(1 - TRANSACTION_FEE_RATE).toFixed(exchangeAsset.decimals))\n    } else if (Number(amount) === 0) {\n      setExchangeAmount('')\n    }\n  }\n\n  const maxBurnAmount = () => {\n    if (burnAsset) {\n      handleBurnAmountChange(new BigNumber(burnAsset.balance).div(10 ** burnAsset.decimals).toString())\n    }\n  }\n\n  const maxExchangeAmount = () => {\n    if (exchangeAsset) {\n      handleExchangeAmountChange(new BigNumber(exchangeAsset.balance).div(10 ** exchangeAsset.decimals).toString())\n    }\n  }\n\n  const handleChangeExchangeToAsset = (asset) => {\n    setExchangeToAsset(asset)\n    if (exchangeAmount) {\n      setExchangeToAmount(new BigNumber(exchangeAsset.price).div(asset.price).times(exchangeAmount).times(10 ** exchangeAsset.decimals).div(10 ** asset.decimals).times(1 - TRANSACTION_FEE_RATE).toFixed(asset.decimals))\n    } else if (Number(exchangeAmount) === 0) {\n      setExchangeToAmount('')\n    }\n  }\n\n  async function onMint() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && mintAsset.assetId && SYNTH_ADDRESS) {\n      if (mintAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(unxNeededForMint).times(new BigNumber(10 ** unxToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: mintAsset.assetId\n          }\n        ]\n        const mintResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'mint',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (mintResult.transaction) {\n          setShowMintModal(false)\n          setMintAmount('')\n          setUnxNeededForMint('')\n\n          let detail = ''\n\n          EventRequest({\n            method: 'get',\n            url: `${mintResult.transaction}`\n          }).then((resp) => {\n            if (resp.Desc === 'SUCCESS') {\n              try {\n                const eventStates = resp.Result.Notify.find((notify) => notify.States[0] === 'mint').States\n\n                if (eventStates[5] === '0') {\n                  detail = `Your last transaction successfully freezed the ${mintAsset.label} asset, you'll get 1‰ of the redeemed UNX when burnt.`\n                }\n              } catch (e) {}\n\n              setInfoModal('success', mintResult.transaction, detail)\n            }\n          }).catch((e) => {\n            setInfoModal('success', mintResult.transaction)\n          })\n        }\n      } catch (e) {\n        setShowMintModal(false)\n        setMintAmount('')\n        setUnxNeededForMint('')\n        setInfoModal('error')\n      }\n    }\n  }\n\n  async function onBurn() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && burnAsset.assetId && SYNTH_ADDRESS) {\n      if (burnAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: burnAsset.assetId\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(burnAmount).times(new BigNumber(10 ** burnAsset.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const burnResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'burn',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (burnResult.transaction) {\n          setShowBurnModal(false)\n          setBurnAmount('')\n          setUnxGetForBurn('')\n          setInfoModal('success', burnResult.transaction)\n        }\n      } catch (e) {\n        setShowBurnModal(false)\n        setBurnAmount('')\n        setUnxGetForBurn('')\n        setInfoModal('error')\n      }\n    }\n  }\n\n  async function onBurnAll() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const burnAllResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'burn_all_asset',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (burnAllResult.transaction) {\n          setInfoModal('success', burnAllResult.transaction)\n        }\n      } catch (e) {\n        setInfoModal('error')\n      }\n    }\n  }\n\n  async function onExchange() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && exchangeAsset.assetId && SYNTH_ADDRESS) {\n      if (exchangeAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: exchangeAsset.assetId\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(exchangeAmount).times(new BigNumber(10 ** exchangeAsset.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },{\n            type: 'Long',\n            value: exchangeToAsset.assetId\n          }\n        ]\n        const exchangeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'asset_swap',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (exchangeResult.transaction) {\n          setShowExchangeModal(false)\n          setExchangeAmount('')\n          setExchangeToAmount('')\n\n          let detail = ''\n\n          EventRequest({\n            method: 'get',\n            url: `${exchangeResult.transaction}`\n          }).then((resp) => {\n            if (resp.Desc === 'SUCCESS') {\n              try {\n                const eventStates = resp.Result.Notify.find((notify) => notify.States[0] === 'asset_swap').States\n\n                if (eventStates[4] === '0') {\n                  detail = `Your last transaction successfully freezed the ${exchangeAsset.label} asset, you'll get 1‰ of the redeemed UNX when burnt.`\n                }\n              } catch (e) {}\n\n              setInfoModal('success', exchangeResult.transaction, detail)\n            }\n          }).catch((e) => {\n            setInfoModal('success', exchangeResult.transaction)\n          })\n        }\n      } catch (e) {\n        setShowExchangeModal(false)\n        setExchangeAmount('')\n        setExchangeToAmount('')\n        setInfoModal('error')\n      }\n    }\n  }\n\n  async function onClaim() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const claimResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'claim_unx',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (claimResult.transaction) {\n          setInfoModal('success', claimResult.transaction)\n        }\n      } catch (e) {\n        setInfoModal('error')\n      }\n    }\n  }\n\n  const handleFreezeAsset = async (asset) => {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: asset.assetId\n          }\n        ]\n        const freezeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'freeze_asset',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (freezeResult.transaction) {\n          setInfoModal('success', freezeResult.transaction)\n        }\n      } catch (e) {\n        setInfoModal('error')\n      }\n    }\n  }\n\n  const calcEffectiveLeverage = (asset) => {\n    if (asset.leverageType === LEVERAGE_TYPE.Positive) {\n      return new BigNumber(asset.tokenPrice).times(asset.times)\n        .div(new BigNumber(asset.tokenPrice).times(asset.times).plus(asset.entryPrice).minus(new BigNumber(asset.entryPrice).times(asset.times)))\n        .toFixed(2)\n    } else if (asset.leverageType === LEVERAGE_TYPE.Negative) {\n      return new BigNumber(asset.tokenPrice).times(asset.times)\n        .div(new BigNumber(asset.entryPrice).times(asset.times).plus(asset.entryPrice).minus(new BigNumber(asset.tokenPrice).times(asset.times)))\n        .toFixed(2)\n    }\n  }\n\n  const getPriceDetail = (asset) => {\n    let txt = `Entry Price: ${new BigNumber(asset.entryPrice).div(SYNTH_PRICE_DECIMALS).toString()}`\n    if (Number(asset.lowLimit)) {\n      txt += ` Low Limit: ${new BigNumber(asset.lowLimit).div(SYNTH_PRICE_DECIMALS).toString()}`\n    }\n    if (Number(asset.highLimit)) {\n      txt += ` High Limit: ${new BigNumber(asset.highLimit).div(SYNTH_PRICE_DECIMALS).toString()}`\n    }\n    \n    return txt\n  }\n\n  const renderAssetList = () => {\n    if (synthType === 'mint') {\n      if (stat.liveAssets) {\n        const assetList = stat.liveAssets.map((la) => {\n          const accountAsset = marketStat.accountAssetBalances ? marketStat.accountAssetBalances.find((ab) => ab.assetId === la.assetId) : null\n          const showPriceDetail = !(la.times === 1 && la.leverageType === LEVERAGE_TYPE.Positive)\n\n          if (accountAsset) {\n            la.holdings = new BigNumber(accountAsset.assetPrice).div(SYNTH_PRICE_DECIMALS).times(accountAsset.balance).div(10 ** la.decimals).toString()\n          }\n\n          la.effectiveLeverage = calcEffectiveLeverage(la)\n\n          return (\n            <div className={`synth-assets-list-item ${la.unprocessedFrozen ? 'unprocessed-frozen' : ''}`} key={la.assetId}>\n              <div className=\"synth-assets-list-item-name\">\n                <div className={`synth-assets-list-item-icon icon-${la.tokenName}`}>\n                  {\n                    showPriceDetail ? (\n                      <Tooltip placement=\"top\" overlay={getPriceDetail(la)}><span>{la.label}</span></Tooltip>\n                    ) : <span>{la.label}</span>\n                  }\n                  {\n                    la.unprocessedFrozen ? (\n                      <Tooltip placement=\"top\" overlay=\"The first one that freezes an asset will get 1‰ of burning fee from all holders\">\n                        <span className=\"freeze-asset-btn\" onClick={() => handleFreezeAsset(la)}></span>\n                      </Tooltip>\n                    ) : null\n                  }\n                </div>\n              </div>\n              <div className=\"synth-assets-list-item-price\">{new BigNumber(la.price).div(SYNTH_PRICE_DECIMALS).toString()}</div>\n              <div className=\"synth-assets-list-item-holding\">{la.holdings || 0}</div>\n              <div className=\"synth-assets-list-item-leverage\">{la.effectiveLeverage}</div>\n              <div className=\"synth-assets-list-item-action\">\n                <div className=\"synth-assets-list-item-action-mint\" onClick={() => { setShowMintModal(true); setMintAsset(la); }}>Mint</div>\n              </div>\n            </div>\n          )\n        })\n        return assetList.length ? assetList : (<div className=\"empty-asset-hint\">No Assets</div>)\n      } else {\n        return (<div className=\"asset-loading-hint\">Loading...</div>)\n      }\n    } else {\n      if (marketStat.accountAssetBalances) {\n        const assetList = marketStat.accountAssetBalances.map((ab) => {\n          let asset = stat.liveAssets ? stat.liveAssets.find((la) => la.assetId === ab.assetId) : null\n\n          if (!asset) {\n            asset = stat.frozenAssets ? stat.frozenAssets.find((fa) => fa.assetId === ab.assetId) : null\n\n            if (asset) {\n              asset.isFrozen = true\n            }\n          }\n\n          if (asset) {\n            if (!asset.isFrozen) {\n              if ((asset.lowLimit && new BigNumber(asset.tokenPrice).lte(new BigNumber(asset.lowLimit))) || (asset.highLimit && new BigNumber(asset.tokenPrice).gte(new BigNumber(asset.highLimit)))) {\n                asset.unprocessedFrozen = true\n              }\n            }\n            asset.balance = ab.balance\n            asset.assetPrice = ab.assetPrice\n            asset.effectiveLeverage = calcEffectiveLeverage(asset)\n          }\n          return asset ? (\n            <div className={`synth-assets-list-item ${asset.isFrozen ? 'frozen' : ''} ${asset.unprocessedFrozen ? 'unprocessed-frozen' : ''}`} key={ab.assetId}>\n              <div className=\"synth-assets-list-item-name\">\n                <div className={`synth-assets-list-item-icon icon-${asset.tokenName}`}>\n                  {asset.label}\n                  {\n                    asset.unprocessedFrozen ? (\n                      <Tooltip placement=\"top\" overlay=\"The first one that freezes an asset will get 1‰ of burning fee from all holders\">\n                        <span onClick={() => handleFreezeAsset(asset)}></span>\n                      </Tooltip>\n                    ) : null\n                  }\n                </div>\n              </div>\n              <div className=\"synth-assets-list-item-price\">{new BigNumber(ab.assetPrice).div(SYNTH_PRICE_DECIMALS).toString()}</div>\n              <div className=\"synth-assets-list-item-holding\">{new BigNumber(ab.assetPrice).div(SYNTH_PRICE_DECIMALS).times(ab.balance).div(10 ** asset.decimals).toString()}</div>\n              <div className=\"synth-assets-list-item-leverage\">{asset.effectiveLeverage}</div>\n              <div className=\"synth-assets-list-item-action\">\n                <div className=\"synth-assets-list-item-action-burn\" onClick={() => { setShowBurnModal(true); setBurnAsset(asset); }}>Burn</div>\n                <div className=\"synth-assets-list-item-action-exchange\"\n                  onClick={() => {\n                    setShowExchangeModal(true)\n                    setExchangeAsset(asset)\n                    const toAssets = stat.liveAssets.filter((la) => la.assetId !== asset.assetId)\n                    setExchangeToAssets(toAssets)\n                    setExchangeToAsset(toAssets[0])\n                  }}\n                >Exchange</div>\n              </div>\n            </div>\n          ) : null\n        })\n\n        return assetList.length ? assetList : (<div className=\"empty-asset-hint\">No Assets</div>)\n      } else {\n        return (<div className=\"asset-loading-hint\">Loading...</div>)\n      }\n    }\n  }\n\n  const setInfoModal = (type, transaction, detail) => {\n    setModal('infoModal', {\n      show: true,\n      type,\n      text: type === 'success' ? 'Transaction Successful' : 'Transaction Failed',\n      detail,\n      extraText: type === 'success' ? 'View Transaction' : '',\n      extraLink: type === 'success' ? `${TRANSACTION_BASE_URL}${transaction}${TRANSACTION_AFTERFIX}` : ''\n    })\n  }\n\n  return (\n    <div className=\"synth-container\">\n      <div className=\"synth-overview-sections\">\n        <div className=\"synth-overview-section\">\n          <div className=\"synth-overview-sub-section\">\n            <p className=\"synth-overview-section-title\">Mint APY</p>\n            <p className=\"synth-overview-detail\">{(marketStat.marketStakeValue && unxToken.id) ? new BigNumber(poolStat.distributionInfo.amount || 0).div(poolStat.distributionInfo.period || 1).times(86400 * 365).times(10 ** unxToken.decimals).times(synthPoolWeightRatio || 0).div(marketStat.marketStakeValue).toFixed(2) : 0}%</p>\n          </div>\n          <div className=\"synth-overview-section-group\">\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Market Balance</p>\n              <p className=\"synth-overview-detail\">{marketStat.marketTokenBalance ? new BigNumber(marketStat.marketTokenBalance).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span></p>\n            </div>\n          </div>\n        </div>\n        <div className=\"synth-overview-section-right\">\n          <div className=\"synth-overview-sub-section\">\n            <p className=\"synth-overview-section-title\">Transferable</p>\n            <p className=\"synth-overview-detail\">{(marketStat.transferable && marketStat.transferable !== '0') ? new BigNumber(marketStat.transferable).plus(availableReward).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span></p>\n          </div>\n          <div className=\"synth-overview-section-group\">\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Staked Available</p>\n              <p className=\"synth-overview-detail\">{(marketStat.transferable && marketStat.transferable !== '0') ? (new BigNumber(marketStat.transferable)).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span>\n                { (marketStat.transferable && marketStat.transferable !== '0') ? <span className=\"synth-overview-action-btn synth-overview-action-btn-burn\" onClick={() => onBurnAll()}>Burn All</span> : null }\n              </p>\n            </div>\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Rewards Available</p>\n              <p className=\"synth-overview-detail\">{unxToken.id ? new BigNumber(availableReward).div(10 ** unxToken.decimals).toString() : 0}\n                <span>UNX</span>\n                { (availableReward && availableReward !== '0') ? <span className=\"synth-overview-action-btn\" onClick={() => onClaim()}>Claim</span> : null }\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mint-burn-wrapper\">\n        <div className=\"mint-burn-main\">\n          <div className=\"synth-type-switch\">\n            <div className={`synth-type-item ${synthType === 'mint' ? 'selected' : ''}`} onClick={() => setSynthType('mint')}>Mint</div>\n            <div className={`synth-type-item ${synthType === 'burn' ? 'selected' : ''}`} onClick={() => setSynthType('burn')}>Burn</div>\n          </div>\n          <div className=\"market-asset-value\">Market Asset Value: &nbsp;&nbsp;<span>${new BigNumber(marketStat.marketAssetValue || 0).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n          <div className=\"synth-assets-panel\">\n            <div className=\"synth-assets-panel-header\">\n              <div className=\"panel-header-item panel-header-item-asset\">Asset</div>\n              <div className=\"panel-header-item\">Price($)</div>\n              <div className=\"panel-header-item\">Holdings($)</div>\n              <div className=\"panel-header-item\">Effective Leverage</div>\n              <div className=\"panel-header-item panel-header-item-action\"></div>\n            </div>\n            <div className=\"synth-assets-list\">\n              {renderAssetList()}\n            </div>\n          </div>\n        </div>\n        {\n          synthType === 'mint' ? (\n            <div className=\"mint-burn-info\">\n              <div className=\"mint-burn-info-title\">Mint Synthetics by staking UNX</div>\n              <div className=\"mint-burn-info-desc\">UNX stakers earn staking rewards once minted.</div>\n              <div className=\"mint-burn-account-info\">\n                <div className=\"mint-burn-account-info-line\">Minted With <span>{new BigNumber(marketStat.accountStakeValue || 0).div(10 ** unxToken.decimals).toString() || '0'} UNX</span></div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"mint-burn-info\">\n              <div className=\"mint-burn-info-title\">Burn Synthetics to unstake UNX</div>\n              <div className=\"mint-burn-info-desc\">Burn your synthetics to withdraw UNX.</div>\n              <div className=\"mint-burn-account-info\">\n                <div className=\"mint-burn-account-info-line\">Assets($) <span>{new BigNumber(marketStat.accountAssetValue).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n              </div>\n              <div className=\"mint-burn-info-note\"><strong>NOTE</strong>: when \"Effective Leverage\" is lower than 0.5 or higher than 2.0 times of nominal leverage, your asset will be frozen. <span>You have to burn it within 3 days.</span> Otherwise, your asset will be burned and the UNX will be donated to staked pool.</div>\n            </div>\n          )\n        }\n        \n      </div>\n      {\n        showMintModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => {setShowMintModal(false);setMintAmount('');setUnxNeededForMint('');}}></div>\n              <div className=\"mint-wrapper\">\n                <div className=\"mint-wrapper-title\">Mint {mintAsset.label}</div>\n                <div className=\"mint-wrapper-info\">Price($)<span>{new BigNumber(mintAsset.price).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount</div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={mintAmount} decimals={mintAsset.decimals || 0} onChange={(amount) => handleMintAmountChange(amount)} />\n                  </div>\n                </div>\n                <TokenInput\n                  label=\"You need to pay (UNX)\"\n                  value={unxNeededForMint}\n                  defaultToken={unxToken}\n                  decimals={unxToken.decimals || 0}\n                  onAmountChange={(amount) => handleUnxNeededForMintChange(amount)} />\n                <div className=\"mint-btn\" onClick={() => onMint()}>Mint</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      {\n        showBurnModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => {setShowBurnModal(false);setBurnAmount('');setUnxGetForBurn('');}}></div>\n              <div className=\"burn-wrapper\">\n                <div className=\"burn-wrapper-title\">Burn {burnAsset.label}</div>\n                <div className=\"burn-wrapper-info\">Price($)<span>{new BigNumber(burnAsset.assetPrice).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount\n                    <span className=\"hint\">Balance: {new BigNumber(burnAsset.balance).div(10 ** burnAsset.decimals).toString()}</span>\n                  </div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={burnAmount} decimals={burnAsset.decimals || 0} onChange={(amount) => handleBurnAmountChange(amount)} />\n                    <div className=\"input-max-btn\" onClick={() => maxBurnAmount()}>MAX</div>\n                  </div>\n                </div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">You will get (UNX)</div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={unxGetForBurn} decimals={unxToken.decimals || 0} onChange={(amount) => handleUnxGetForBurnChange(amount)} />\n                  </div>\n                </div>\n                <div className=\"burn-btn\" onClick={() => onBurn()}>Burn</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      {\n        showExchangeModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => {setShowExchangeModal(false);setExchangeAmount('');setExchangeToAmount('');}}></div>\n              <div className=\"exchange-wrapper\">\n                <div className=\"exchange-wrapper-title\">Exchange {exchangeAsset.label}</div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount\n                    <span className=\"hint\">Balance: {new BigNumber(exchangeAsset.balance).div(10 ** exchangeAsset.decimals).toString()}</span>\n                  </div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={exchangeAmount} decimals={exchangeAsset.decimals || 0} onChange={(amount) => handleExchangeAmountChange(amount)} />\n                    <div className=\"input-max-btn\" onClick={() => maxExchangeAmount()}>MAX</div>\n                  </div>\n                </div>\n                <TokenInput\n                  cls=\"asset-select\"\n                  label=\"Exchange to\"\n                  value={exchangeToAmount}\n                  tokens={exchangeToAssets}\n                  showBalance={false}\n                  withMax={false}\n                  onTokenChange={(asset) => handleChangeExchangeToAsset(asset)}\n                  onAmountChange={(amount) => handleChengeExchangeToAmount(amount)}\n                  />\n                <div className=\"exchange-btn\" onClick={() => onExchange()}>Exchange</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n    </div>\n  )\n}\n\nexport default Synth","import React from 'react'\nimport { useMappedState } from 'redux-react-hook';\nimport { toLocaleFixed } from '../../utils/common'\nimport './index.css'\n\nconst Governance = (props) => {\n  const { poolStat } = useMappedState((state) => ({\n    poolStat: state.gov.poolStat\n  }))\n\n  return (\n    <div className=\"governance-wrapper\">\n      <div className=\"overview-wrapper\">\n        <div className=\"overview-title\">Overview</div>\n        <div className=\"overview-sections\">\n          <div className=\"overview-left\">\n            <p className=\"overview-section-title\">Total UNX</p>\n            <p className=\"overview-detail\">{toLocaleFixed(poolStat.distributionInfo.amount || 0)}</p>\n          </div>\n          <div className=\"overview-right\">\n            <p className=\"overview-section-title\">Daily Distribution</p>\n            <p className=\"overview-detail\">{toLocaleFixed(((poolStat.distributionInfo.amount || 0) / (poolStat.distributionInfo.period || 1) * 86400).toFixed(9))} <span>UNX</span></p>\n          </div>\n        </div>\n      </div>\n      <div className=\"distribution-wrapper\">\n        <div className=\"overview-title\">Distribution</div>\n        <div className=\"distribution-sections\">\n          <div className=\"pie-svg\">\n            <svg className=\"donut\" width=\"240px\" height=\"240px\" viewBox=\"0 0 42 42\" role=\"img\">\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#2BBE7F\" stroke-width=\"4\" stroke-dasharray=\"80, 20\" stroke-dashoffset=\"100\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"120\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FE332F\" stroke-width=\"4\" stroke-dasharray=\"8, 92\" stroke-dashoffset=\"219.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"311.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#F4BA5E\" stroke-width=\"4\" stroke-dasharray=\"8, 92\" stroke-dashoffset=\"411\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"503\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#2B3962\" stroke-width=\"4\" stroke-dasharray=\"3, 97\" stroke-dashoffset=\"602.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"699.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#F18DA5\" stroke-width=\"4\" stroke-dasharray=\"1, 99\" stroke-dashoffset=\"799\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"898\"></circle>\n            </svg>\n          </div>\n          <div className=\"pie-desc\">\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#2BBE7F' } }></div>\n              <div className=\"d-item-name\">Community</div>\n              <div className=\"d-item-ratio\">80%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#FE332F' } }></div>\n              <div className=\"d-item-name\">Developer</div>\n              <div className=\"d-item-ratio\">8%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#F4BA5E' } }></div>\n              <div className=\"d-item-name\">Foundation</div>\n              <div className=\"d-item-ratio\">8%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#2B3962' } }></div>\n              <div className=\"d-item-name\">Resoucse Extension</div>\n              <div className=\"d-item-ratio\">3%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#F18DA5' } }></div>\n              <div className=\"d-item-name\">Volunteer</div>\n              <div className=\"d-item-ratio\">1%</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Governance","import { useEffect, useCallback } from 'react'\nimport { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport { GOVERNANCE_ADDRESS } from '../config'\nimport { handleError } from '../utils/errorHandle'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\n\nconst { StringReader, hexstr2str, reverseHex } = utils\n\nexport const useFetchTokens = () => {\n  const { stopInterval, tokens } = useMappedState((state) => ({\n    stopInterval: state.common.stopInterval,\n    tokens: state.common.tokens\n  }))\n  const dispatch = useDispatch()\n  const setIsUpgrading = useCallback((isUpgrading) => dispatch({ type: 'SET_IS_UPGRADING', isUpgrading }), [])\n  const setLoadingToken = useCallback((loadingToken) => dispatch({ type: 'SET_LOADING_TOKEN', loadingToken }), [])\n  const setTokens = useCallback((tokens) => dispatch({ type: 'SET_TOKENS', tokens }), [])\n  const setStopInterval = useCallback((stopInterval) => dispatch({ type: 'SET_STOP_INTERVAL', stopInterval }), [])\n  const setPoolStat = useCallback((poolStat) => dispatch({ type: 'SET_POOL_STAT', poolStat }), [])\n\n  useEffect(() => {\n    getGovStat()\n    let interval = !stopInterval && !tokens.length && setInterval(() => getGovStat, 1000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokens, stopInterval])\n\n  async function getGovStat() {\n    if (!tokens.length) {\n      try {\n        const statStr = await client.api.smartContract.invokeWasmRead({\n          scriptHash: GOVERNANCE_ADDRESS,\n          operation: 'stat',\n          args: []\n        })\n\n        const strReader = new StringReader(statStr)\n        const distributionInfo = {}\n        distributionInfo.amount = strReader.readUint128() / (10 ** 9)\n        distributionInfo.period = strReader.readUint128()\n        distributionInfo.startTimeStamp = strReader.readUint128()\n        distributionInfo.settledTimeStamp = strReader.readUint128()\n  \n        const pools = {}\n        const poolCount = strReader.readNextLen()\n        let totalWeight = 0\n        for (let i = 0; i < poolCount; i++) {\n          const pool = {}\n          const nameLength = strReader.readNextLen()\n          pool.name = hexstr2str(strReader.read(nameLength))\n          pool.address = reverseHex(strReader.read(20))\n          pool.weight = strReader.readUint128()\n          totalWeight += pool.weight\n          pools[pool.name] = pool\n        }\n\n        for (let poolName in pools) {\n          pools[poolName].ratio = pools[poolName].weight / totalWeight\n        }\n  \n        const upgrade = strReader.readBoolean()\n        const parsedTokens = []\n        const tokenCount = strReader.readNextLen()\n        for (let i = 0; i < tokenCount; i++) {\n          const token = {}\n          token.id = strReader.readUint128()\n          const nameLength = strReader.readNextLen()\n          token.name = hexstr2str(strReader.read(nameLength))\n          token.address = reverseHex(strReader.read(20))\n          token.ty = strReader.readUint8()\n          token.decimals = strReader.readUint128()\n\n          token.value = token.id\n          token.label = token.name\n\n          parsedTokens.push(token)\n        }\n\n        if (upgrade) {\n          setIsUpgrading(true)\n        }\n\n        setLoadingToken(false)\n        setTokens(parsedTokens)\n        setPoolStat({\n          distributionInfo,\n          pools,\n          upgrade\n        })\n      } catch (e) {\n        console.log(e)\n        handleError(e, (errorCode) => {\n          console.log(errorCode)\n          if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n            setStopInterval(true)\n          } else {\n            console.log('get all tokens', e)\n          }\n        })\n      }\n    }\n  }\n\n  return null\n}","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useEffect, useCallback } from 'react'\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport Header from './components/header'\nimport Modal from './components/modal'\nimport Transaction from './pages/transaction'\nimport Swap from './pages/swap'\nimport Pool from './pages/pool'\nimport AddLiquidity from './pages/pool/addLiquidity'\nimport RemoveLiquidity from './pages/pool/removeLiquidity'\nimport Staking from './pages/staking'\nimport StakingDetail from './pages/staking/detail'\nimport Token from './pages/token'\nimport Option from './pages/option'\n// import Trade from './pages/trade'\nimport Synth from './pages/synth'\nimport Overview from './pages/governance'\nimport { NETWORK_TYPE, READY_TABS } from './config'\nimport { useFetchTokens } from './hooks/useToken'\nimport './App.css'\n\nexport const App = () => {\n  const Alert = useAlert()\n  const { account, isUpgrading, loadingToken } = useMappedState((state) => ({\n    isUpgrading: state.common.isUpgrading,\n    loadingToken: state.common.loadingToken,\n    account: state.wallet.account\n  }))\n  const dispatch = useDispatch()\n  const setAccount = useCallback((account) => dispatch({ type: 'SET_ACCOUNT', account }), [])\n\n  useEffect(() => {\n    let retryTimes = 3\n    const interval = setInterval(() => {\n      client.api.provider.getProvider()\n        .then(() => {\n          clearInterval(interval)\n        })\n        .catch((e) => {\n          if (e === 'NO_PROVIDER') {\n            retryTimes--\n            if (!retryTimes) {\n              Alert.error('Please install wallet extension first')\n            }\n          }\n        })\n    }, 500)\n  }, [])\n\n  useEffect(() => {\n    client.api.network.getNetwork()\n      .then((network) => {\n        if (network && network.type !== NETWORK_TYPE) {\n          Alert.error(`Please connect to the ${NETWORK_TYPE}-Net`)\n          return\n        }\n      })\n      .catch((e) => {\n        console.log(e)\n      })\n  }, [])\n\n  useFetchTokens()\n\n  async function onConnectWallet() {\n    try {\n      const accountAddress = await client.api.asset.getAccount()\n      setAccount(accountAddress)\n      localStorage.setItem('account', accountAddress)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  function onSignOut() {\n    setAccount('')\n    localStorage.setItem('account', '')\n  }\n\n  function renderLoading() {\n    if (loadingToken) {\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper transparent-bg\">\n            <div className=\"modal-icon-loading modal-icon\"></div>\n            <div className=\"modal-text light\">Loading...</div>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  function renderUpgrading() {\n    if (isUpgrading) {\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper transparent-bg\">\n            <div className=\"modal-icon-upgrading modal-icon\"></div>\n            <div className=\"modal-text light\">UNIQ-EX is upgrading...</div>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Router>\n      {renderLoading()}\n      {\n        !isUpgrading ? (\n          <div className=\"app\">\n            <React.Fragment>\n              {\n                (account === null) && <div className=\"connect-wallet-overlay\">\n                  <div className=\"connect-wrapper\">\n                    <p className=\"connect-title\">Connect Wallet</p>\n                    <div className=\"wallet-item\" onClick={() => onConnectWallet()}>Cyano Wallet</div>\n                  </div>\n                </div>\n              }\n              <Modal />\n              <Header onSignOut={() => onSignOut()} onConnectWallet={() => onConnectWallet()} />\n              <div className=\"main-wrapper\">\n                <Switch>\n                  {\n                    READY_TABS.indexOf('/') >= 0 ?\n                    <Route exact path=\"/\">\n                      <Staking />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/') >= 0 ?\n                    <Route exact path=\"/staking/:id\">\n                      <StakingDetail />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/swap') >= 0 ?\n                    <Route exact path=\"/swap\">\n                      <Swap />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/swap') >= 0 ?\n                    <Route exact path=\"/pool\">\n                      <Pool />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/swap') >= 0 ?\n                    <Route exact path=\"/pool/add\">\n                      <AddLiquidity />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/swap') >= 0 ?\n                    <Route exact path=\"/pool/remove/:id\">\n                      <RemoveLiquidity />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/trade') >= 0 ?\n                    <Route exact path=\"/trade\">\n                      <Transaction />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/governance') >= 0 ?\n                    <Route exact path=\"/governance\">\n                      <Overview />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/token') >= 0 ?\n                    <Route exact path=\"/token\">\n                      <Token />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/option') >= 0 ?\n                    <Route exact path=\"/option\">\n                      <Option />\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/synth') >= 0 ?\n                    <Route exact path=\"/synth\">\n                      <Synth />\n                    </Route> : null\n                  }\n                </Switch>\n              </div>\n            </React.Fragment>\n          </div>\n        ) : renderUpgrading()\n      }\n      \n    </Router>\n  )\n}\n","const initState = {\n  infoModal: {\n    show: false,\n    type: '',\n    text: '',\n    extraText: '',\n    extraLink: ''\n  },\n}\n\nexport const modal = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_MODAL':\n      return { ...state, [action.modalType]: action.modalDetail }\n    default:\n      return { ...state }\n  }\n}","const initState = {\n  account: localStorage.getItem('account'),\n  slippage: localStorage.getItem('slippage') || '0.1'\n}\n\nexport const wallet = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_ACCOUNT':\n      return { ...state, account: action.account }\n    case 'SET_SLIPPAGE':\n      localStorage.setItem('slippage', action.slippage)\n      return { ...state, slippage: action.slippage }\n    default:\n      return { ...state }\n  }\n}","const initState = {\n  isUpgrading: false,\n  loadingToken: true,\n  stopInterval: false,\n  tokens: []\n}\n\nexport const common = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_IS_UPGRADING':\n      return { ...state, isUpgrading: action.isUpgrading }\n    case 'SET_LOADING_TOKEN':\n      return { ...state, loadingToken: action.loadingToken }\n    case 'SET_STOP_INTERVAL':\n      return { ...state, stopInterval: action.stopInterval }\n    case 'SET_TOKENS':\n      return { ...state, tokens: action.tokens }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  poolStat: {\n    distributionInfo: {},\n    pools: {\n      staking: {},\n      swap: {},\n      dex: {},\n      synth: {}\n    },\n    upgrade: false\n  }\n}\n\nexport const gov = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_POOL_STAT':\n      return { ...state, poolStat: action.poolStat }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  tokens: [],\n  pairs: []\n}\n\nexport const swap = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_SWAP_TOKENS':\n      return { ...state, tokens: action.tokens }\n    case 'SET_PAIRS':\n      return { ...state, pairs: action.pairs }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  tokens: []\n}\n\nexport const staking = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_STAKING_TOKENS':\n      return { ...state, tokens: action.tokens }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  stat: {},\n  marketStat: {},\n  availableReward: 0,\n  synthType: 'mint'\n}\n\nexport const synth = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_SYNTH_STAT':\n      return { ...state, stat: action.stat }\n    case 'SET_SYNTH_MARKET_STAT':\n      return { ...state, marketStat: action.marketStat }\n    case 'SET_SYNTH_AVAILABLE_REWARD':\n      return { ...state, availableReward: action.availableReward }\n    case 'SET_SYNTH_TYPE':\n      return { ...state, synthType: action.synthType }\n    default:\n      return { ...state }\n  }\n}\n","import { combineReducers } from 'redux'\nimport { modal } from './modal'\nimport { wallet } from './wallet'\nimport { common } from './common'\nimport { gov } from './gov'\nimport { swap } from './swap'\nimport { staking } from './staking'\nimport { synth } from './synth'\n\nconst reducers = combineReducers({\n  modal,\n  wallet,\n  common,\n  gov,\n  swap,\n  staking,\n  synth\n})\n\nexport default reducers","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as Ontology from '@ont-dev/ontology-dapi';\nimport { positions, Provider } from \"react-alert\";\nimport { createStore } from 'redux';\nimport { StoreContext } from 'redux-react-hook';\nimport AlertTemplate from \"react-alert-template-basic\";\nimport reducers from './reducers';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'rc-tooltip/assets/bootstrap.css'\nimport './styles/font.css';\nimport './styles/common.css';\nimport './index.css';\n\nconst store = createStore(reducers)\n\nOntology.client.registerClient({});\n\nconst options = {\n  timeout: 10000,\n  position: positions.TOP_CENTER\n};\n\nReactDOM.render(\n  <Provider template={AlertTemplate} {...options}>\n    <StoreContext.Provider value={store}>\n      <App />\n    </StoreContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}