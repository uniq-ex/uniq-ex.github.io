{"version":3,"sources":["../node_modules/milagro-crypto-js/src sync /^/.//.*$","components/input/index.js","config.js","utils/common.js","components/header/index.js","components/modal/index.js","utils/request.js","utils/token.js","utils/errorHandle.js","utils/constants.js","pages/transaction/index.js","components/tokenInput/index.js","hooks/usePair.js","utils/swap.js","pages/swap/index.js","pages/pool/index.js","pages/pool/addLiquidity/index.js","pages/pool/removeLiquidity/index.js","pages/staking/index.js","pages/staking/detail/index.js","pages/token/index.js","pages/option/index.js","pages/trade/index.js","utils/eventRequest.js","pages/synth/index.js","pages/governance/index.js","hooks/useToken.js","App.js","reducers/modal.js","reducers/wallet.js","reducers/common.js","reducers/gov.js","reducers/swap.js","reducers/staking.js","reducers/index.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Input","props","value","cls","disabled","round","decimals","inline","onChange","useState","val","setVal","useEffect","placeholder","handleInput","formattedValue","v","RegExp","test","formatter","target","className","type","onInput","NETWORK_TYPE","GOVERNANCE_ADDRESS","TRANSACTION_BASE_URL","TRANSACTION_AFTERFIX","READY_TABS","toLocaleFixed","num","n","priceNum","parseFloat","Math","toFixed","toString","indexOf","replace","$0","$1","formatAccount","account","substr","Header","selectedTab","setSelectedTab","showProfilePanel","setShowProfilePanel","useMappedState","state","wallet","slippage","showSiteIntro","setShowSiteIntro","dispatch","useDispatch","setSlippage","useCallback","pathname","useLocation","tab","href","window","location","origin","onClick","rel","renderSiteIntro","to","onConnectWallet","Number","amount","onSignOut","InfoModal","onCloseModal","text","detail","extraLink","extraText","Modal","infoModal","modal","setModal","modalType","modalDetail","modals","show","push","assign","buildModals","instance","axios","create","baseURL","timeout","headers","interceptors","response","use","data","error","Promise","reject","reverseHex","utils","readBigNumberUint128","reader","str","read","split","reverse","total","BigNumber","i","length","plus","pow","times","parseInt","isZero","getTokenBalance","token","cb","name","param","scriptHash","address","operation","args","invokeMethod","client","api","smartContract","invokeRead","ty","invokeWasmRead","then","bl","div","Request","method","url","resp","targetToken","result","find","t","asset_name","toLowerCase","balance","catch","console","log","getTokenIconDom","slice","tokenName","handleError","callback","json","JSON","parse","Result","SYNTH_PRICE_DECIMALS","ASSET_STATUS","LEVERAGE_TYPE","StringReader","TokenInput","tokens","defaultToken","inputDisabled","showBalance","withMax","onTokenChange","onAmountChange","balanceChange","setToken","setBalance","label","dToken","defaultValue","options","isSearchable","components","Option","SingleValue","children","newToken","handleTokenChange","theme","borderRadius","colors","primary","renderTokenSeletion","isNaN","useFetchPairs","common","swapTokens","swap","SWAP_ADDRESS","gov","poolStat","pools","setSwapTokens","setPairs","pairs","getSwapStat","a","pairStr","parsedPairs","strReader","pairCount","readNextLen","pair","token1","readUint128","token2","reserve1","reserve2","lp","tokenIds","tokenCount","tk","interval","setInterval","clearInterval","REST","findAllPaths","sourceId","targetId","pathArr","findPath","pathNodes","neighborNodes","p","includes","sort","p1","p2","getInputAmount","output","minus","integerValue","ROUND_CEIL","getOutputAmount","input","ROUND_FLOOR","findNextOutput","findPrevInput","bestSwap","paths","originAmount","maxOutput","minInput","Infinity","path","j","gt","lt","Swap","swapType","setSwapType","setToken1","setToken2","token1Amount","setToken1Amount","token2Amount","setToken2Amount","isValidPair","setIsValidPair","isValidSwap","setIsValidSwap","bestPath","setBestPath","showPrice","setShowPrice","setBalanceChange","Alert","useAlert","history","useHistory","ROUND_DOWN","invokeWasm","gasPrice","gasLimit","requireIdentity","swapResult","transaction","st","validPair","onChangeToken1","inputAmount","onToken1AmountChange","onChangeToken2","outputAmount","onToken2AmountChange","handleSwap","price","abs","getPriceImpact","items","index","getBestPath","Pool","liquidityBalance","setLiquidityBalance","all","myLiquidities","filter","l","lb","pairId","shareOfPool","onRemoveLiquidity","generateLiquidityList","AddLiquidity","isFirstProvider","setIsFirstProvider","showPriceInfo","setShowPriceInfo","getPairByToken","getPairPrice","onNavigateToPool","goBack","ROUND_UP","addResult","amountProduct","getShareOfPool","onAdd","RemoveLiquidity","setPair","setAmount","match","getLiquidityBalanceByPairId","onRemove","Staking","showClosedEntry","setShowClosedEntry","showClosed","setShowClosed","stakingTokens","staking","STAKING_ADDRESS","setStakingTokens","getStakingTokenBalance","statStr","parsedTokens","tempToken","weight","totalWeight","reduce","b","filteredTokens","originWeight","getTip","openStakingTokens","closedStakingTokens","startsWith","placement","overlay","onSelectToken","generateStakingPool","StakingDetail","stakeToken","setStakeToken","tokenBalance","setTokenBalance","tokenWeight","setTokenWeight","myStake","setMyStake","stakeType","setStakeType","claimableWing","setClaimableWing","showStakingModal","setShowStakingModal","tokenId","getAccountStake","stakeStr","interest","stake","handleStakeClick","action","stakeResult","harvestResult","sToken","getClaimableWing","onHarvest","onStake","Token","Trade","Synth","synthType","setSynthType","mintAsset","setMintAsset","mintAmount","setMintAmount","unxNeededForMint","setUnxNeededForMint","burnAsset","setBurnAsset","burnAmount","setBurnAmount","unxGetForBurn","setUnxGetForBurn","exchangeAsset","setExchangeAsset","exchangeToAsset","setExchangeToAsset","exchangeAmount","setExchangeAmount","exchangeToAssets","setExchangeToAssets","exchangeToAmount","setExchangeToAmount","unxToken","setUnxToken","unxPrice","setUnxPrice","showMintModal","setShowMintModal","showBurnModal","setShowBurnModal","showExchangeModal","setShowExchangeModal","availableReward","setAvailableReward","marketStat","setMarketStat","stat","setStat","synthPoolWeightRatio","synth","ratio","SYNTH_ADDRESS","marketAssetValue","unxTk","marketAssetBalances","marketTokenBalance","daiTk","getAvailableReward","claimStr","getStat","liveAssetCount","liveAssets","asset","assetId","leverageType","readNextByte","entryPrice","lowLimit","highLimit","status","frozenBy","frozenTime","readUint64","frozenAssetCount","frozenAssets","tokenPriceCount","tokenPrices","tokenPrice","liveAsset","currentPrice","tp","lte","gte","unprocessedFrozen","frozenAsset","getMarketStat","marketAssetBalanceCount","marketAssetValueSum","assetBalance","assetPrice","la","accountAssetBalanceCount","accountAssetBalances","accountAssetValueSum","marketStakeValue","accountStakeValue","accountClaimedValue","accountWithdrawedStakeValue","transferable","parsedMarketStat","accountAssetValue","handleBurnAmountChange","handleExchangeAmountChange","mintResult","EventRequest","Desc","Notify","notify","States","setInfoModal","burnResult","burnAllResult","exchangeResult","claimResult","handleFreezeAsset","freezeResult","calcEffectiveLeverage","getPriceDetail","txt","distributionInfo","period","onBurnAll","onClaim","accountAsset","ab","showPriceDetail","holdings","effectiveLeverage","fa","isFrozen","toAssets","handleMintAmountChange","handleUnxNeededForMintChange","onMint","handleUnxGetForBurnChange","onBurn","handleChangeExchangeToAsset","handleChengeExchangeToAmount","onExchange","Governance","width","height","viewBox","role","cx","cy","r","fill","stroke","stroke-width","stroke-dasharray","stroke-dashoffset","style","background","hexstr2str","App","loadingToken","setAccount","network","getNetwork","getAccount","accountAddress","localStorage","setItem","stopInterval","setLoadingToken","setTokens","setStopInterval","setPoolStat","getGovStat","startTimeStamp","settledTimeStamp","poolCount","pool","nameLength","poolName","upgrade","readBoolean","readUint8","errorCode","useFetchTokens","provider","getProvider","exact","initState","getItem","dex","reducers","combineReducers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","Ontology","registerClient","position","positions","TOP_CENTER","ReactDOM","render","template","AlertTemplate","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.cfec08de.chunk.js","sourcesContent":["var map = {\n\t\"./aes\": 271,\n\t\"./aes.js\": 271,\n\t\"./big\": 272,\n\t\"./big.js\": 272,\n\t\"./ctx\": 172,\n\t\"./ctx.js\": 172,\n\t\"./ecdh\": 273,\n\t\"./ecdh.js\": 273,\n\t\"./ecp\": 274,\n\t\"./ecp.js\": 274,\n\t\"./ecp2\": 275,\n\t\"./ecp2.js\": 275,\n\t\"./ff\": 276,\n\t\"./ff.js\": 276,\n\t\"./fp\": 277,\n\t\"./fp.js\": 277,\n\t\"./fp12\": 278,\n\t\"./fp12.js\": 278,\n\t\"./fp2\": 279,\n\t\"./fp2.js\": 279,\n\t\"./fp4\": 280,\n\t\"./fp4.js\": 280,\n\t\"./gcm\": 281,\n\t\"./gcm.js\": 281,\n\t\"./hash256\": 282,\n\t\"./hash256.js\": 282,\n\t\"./hash384\": 283,\n\t\"./hash384.js\": 283,\n\t\"./hash512\": 284,\n\t\"./hash512.js\": 284,\n\t\"./mpin\": 285,\n\t\"./mpin.js\": 285,\n\t\"./newhope\": 286,\n\t\"./newhope.js\": 286,\n\t\"./nhs\": 287,\n\t\"./nhs.js\": 287,\n\t\"./pair\": 288,\n\t\"./pair.js\": 288,\n\t\"./rand\": 289,\n\t\"./rand.js\": 289,\n\t\"./rom_curve\": 290,\n\t\"./rom_curve.js\": 290,\n\t\"./rom_field\": 291,\n\t\"./rom_field.js\": 291,\n\t\"./rsa\": 292,\n\t\"./rsa.js\": 292,\n\t\"./sha3\": 293,\n\t\"./sha3.js\": 293,\n\t\"./uint64\": 294,\n\t\"./uint64.js\": 294\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 593;","import React, { useState, useEffect } from 'react';\n\nconst Input = (props) => {\n  const { value = '', cls = '', round, disabled, decimals, inline = true, onChange } = props\n  const [val, setVal] = useState('')\n\n  useEffect(() => {\n    setVal(value)\n  //   if (value === '') {\n  //     setVal('')\n  //   } else if (`${value}`.endsWith('.')) {\n  //     setVal(value)\n  //   } else {\n  //     if (round === 'down') {\n  //       setVal(Math.floor(value * (10 ** decimals)) / (10 ** decimals))\n  //     } else if (round === 'up') {\n  //       setVal(Math.ceil(value * (10 ** decimals)) / (10 ** decimals))\n  //     }\n  //   }\n  }, [value])\n\n  const placeholder = decimals > 0 ? '0.0' : '0'\n  const formatter = (v, decimals = 9) => {\n    if (v === '' || v === '0') {\n      return v\n    } else {\n      const reg = (decimals > 0) ? new RegExp(\n        `^(([0-9]{0,20})|(([0]\\\\.\\\\d{0,${decimals}}|[0-9]{0,20}\\\\.\\\\d{0,${decimals}})))$`\n      ) : new RegExp('^[0-9]{0,20}$')\n      if (reg.test(v)) {\n        return v\n      } else {\n        return val\n      }\n    }\n  };\n  const handleInput = (e) => {\n    const formattedValue = formatter(e.target.value, decimals)\n\n    setVal(formattedValue)\n    typeof onChange === 'function' && onChange(formattedValue)\n  }\n\n  // const handleChange = (e) => {\n  //   typeof onChange === 'function' && onChange(e.target.value)\n  // }\n\n  return (\n    <input\n      className={`input ${inline ? 'inline-input' : ''} ${cls}`}\n      type=\"text\"\n      placeholder={placeholder}\n      value={val}\n      disabled={disabled}\n      onInput={(e) => handleInput(e)}\n      // onChange={(e) => handleChange(e)}\n    />\n  );\n};\n\nexport default Input;\n","export const NETWORK_TYPE = 'TEST'\nexport const GOVERNANCE_ADDRESS = '4bedf72d787de53ab91ead1db1ef709f7472ec24'\nexport const API_BASE_URL = 'https://polarisexplorer.ont.io'\nexport const TRANSACTION_BASE_URL = 'https://explorer.ont.io/transaction/'\nexport const EVENT_API_BASE_URL = 'https://polaris1.ont.io:10334/api/v1/smartcode/event/txhash/'\nexport const TRANSACTION_AFTERFIX = '/testnet'\nexport const READY_TABS = ['/', '/swap', '/trade', '/governance', '/synth', '/option']","export const getQueryString = (search, name) => {\n  const reg = new RegExp(`(^|&)${name}=([^&]*)(&|$)`, 'i')\n  const value = search.substr(1).match(reg)\n\n  if (value != null) {\n    return (value[2])\n  }\n\n  return null\n}\n\nexport const getHashString = (hash, name) => {\n  const reg = new RegExp(`(^|&|[/?]+)${name}=([^&]*)(&|$)`, 'i')\n  const value = hash.substr(1).match(reg)\n\n  if (value != null) {\n    return (value[2])\n  }\n\n  return null\n}\n\nexport function toLocaleFixed(num, n = 9) {\n  const priceNum = parseFloat(n === 0 ? Math.round(num).toFixed(n) : parseFloat(num).toFixed(n)).toString()\n  return priceNum && (priceNum.indexOf('.') !== -1 ? priceNum.replace(/(\\d)(?=(\\d{3})+\\.)/g, ($0, $1) => `${$1},`) : priceNum.replace(/(?=(\\B\\d{3})+$)/g, ','))\n}\n\nexport const formatAccount = (account = '') => {\n  return `${account.substr(0, 4)}...${account.substr(-4)}`\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { Link, useLocation } from 'react-router-dom'\nimport Input from '../input'\nimport { READY_TABS } from '../../config'\nimport { formatAccount } from '../../utils/common'\nimport './index.css'\n\nconst Header = (props) => {\n  const [selectedTab, setSelectedTab] = useState('')\n  const [showProfilePanel, setShowProfilePanel] = useState(false)\n  const { account, slippage } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage\n  }))\n  const [showSiteIntro, setShowSiteIntro] = useState(false)\n  const dispatch = useDispatch()\n  const setSlippage = useCallback((slippage) => dispatch({ type: 'SET_SLIPPAGE', slippage }), [])\n  const pathname = useLocation().pathname\n\n  const toggleShowSiteIntro = (show) => {\n    setShowSiteIntro(show)\n  }\n\n  useEffect(() => {\n    let tab = ''\n    if (pathname === '/' || pathname.indexOf('/staking') >= 0) {\n      tab = '/'\n    } else if (pathname.indexOf('/synth') >= 0) {\n      tab = '/synth'\n    } else if (pathname.indexOf('/swap') >= 0 || pathname.indexOf('/pool') >= 0) {\n      tab = '/swap'\n    } else if (pathname.indexOf('/trade') >= 0) {\n      tab = '/trade'\n    } else if (pathname.indexOf('/governance') >= 0) {\n      tab = '/governance'\n    } else if (pathname.indexOf('/token') >= 0) {\n      tab = '/token'\n    } else if (pathname.indexOf('/option') >= 0) {\n      tab = '/option'\n    }\n    \n    setSelectedTab(tab)\n  }, [pathname])\n\n  const renderSiteIntro = () => {\n    if (showSiteIntro) {\n      const href = `${window.location.origin}${window.location.pathname}#/trade?pair=pDAI%2FUNX`\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper\">\n            <div className=\"close-btn\" onClick={() => toggleShowSiteIntro(false)}></div>\n            <p className=\"intro-line\">uniq-ex is a pure github based DAO dex, all activities are logged on github.</p>\n            <p className=\"intro-line\">You can open issues for discussion <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/uniq-ex/uniq-ex/issues\">here</a></p>\n            <p className=\"intro-line\">uniq-ex's future business will not be limited to exchanges though, we may enter various DeFi markets like compound or hegic.</p>\n            <p className=\"intro-line\">You can buy UNX(the governance token of uniq-ex) <a target=\"_blank\" rel=\"noreferrer\" href={href}>here</a></p>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  const onSignOut = () => {\n    setShowProfilePanel(false)\n    typeof props.onSignOut === 'function' && props.onSignOut()\n  }\n\n  const onConnectWallet = () => {\n    typeof props.onConnectWallet === 'function' && props.onConnectWallet()\n  }\n\n  const toggleProfilePanel = () => {\n    setShowProfilePanel(!showProfilePanel)\n  }\n\n  return (\n    <div className=\"header-wrapper\">\n      {renderSiteIntro()}\n      <div className=\"header\">\n        <div className=\"content-wrapper\">\n          <div className=\"logo-wrapper\">\n            UNIQ-EX\n            {/* <div className=\"site-intro\" onClick={() => toggleShowSiteIntro(true)}></div> */}\n          </div>\n          <div className=\"nav-list\">\n            { READY_TABS.indexOf('/') >= 0 ? <div className={`nav-item ${selectedTab === '/' ? 'selected' : ''}`}><Link to=\"/\">Staking</Link></div> : null }\n            { READY_TABS.indexOf('/synth') >= 0 ? <div className={`nav-item ${selectedTab === '/synth' ? 'selected' : ''}`}><Link to=\"/synth\">Synth</Link></div> : null }\n            { READY_TABS.indexOf('/swap') >= 0 ? <div className={`nav-item ${selectedTab === '/swap' ? 'selected' : ''}`}><Link to=\"/swap\">Swap</Link></div> : null }\n            { READY_TABS.indexOf('/governance') >= 0 ? <div className={`nav-item ${selectedTab === '/governance' ? 'selected' : ''}`}><Link to=\"/governance\">Governance</Link></div> : null }\n            { READY_TABS.indexOf('/trade') >= 0 ? <div className={`nav-item ${selectedTab === '/trade' ? 'selected' : ''}`}><Link to=\"/trade\">Trade</Link></div> : null }\n            { READY_TABS.indexOf('/token') >= 0 ? <div className={`nav-item ${selectedTab === '/token' ? 'selected' : ''}`}><Link to=\"/token\">Token</Link></div> : null }\n            { READY_TABS.indexOf('/option') >= 0 ? <div className={`nav-item ${selectedTab === '/option' ? 'selected' : ''}`}><Link to=\"/option\">Option</Link></div> : null }\n          </div>\n          <div className={`${account ? 'active' : ''} profile-wrapper`}>\n            { !account && <span className=\"connect-btn\" onClick={() => onConnectWallet()}>Connect Wallet</span>}\n            { account && <span className=\"account-address\" onClick={() => toggleProfilePanel()}>{formatAccount(account)}</span> }\n            {\n              showProfilePanel ? (\n                <div className=\"profile-panel\">\n                  <div className=\"setting-wrapper\">\n                    <div className=\"setting-section-title\">SLIPPAGE</div>\n                    <div className=\"slippage-setting\">\n                      <div className={`slippage-item ${Number(slippage) === 0.1 ? 'selected' : ''}`} onClick={() => setSlippage('0.1')}>0.1%</div>\n                      <div className={`slippage-item ${Number(slippage) === 0.5 ? 'selected' : ''}`} onClick={() => setSlippage('0.5')}>0.5%</div>\n                      <div className={`slippage-item ${Number(slippage) === 1 ? 'selected' : ''}`} onClick={() => setSlippage('1.0')}>1.0%</div>\n                      <div className=\"slippage-input-wrapper\">\n                        <Input value={slippage} cls=\"slippage-input\" decimals=\"2\" placeholder={slippage} onChange={(amount) => setSlippage(amount)} />%\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"signout-btn\" onClick={() => onSignOut()}>Sign Out</div>\n                </div>\n              ) : null\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import React, { useCallback } from 'react'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport './index.css'\n\nconst InfoModal = (props) => {\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-wrapper\">\n        <div className=\"close-btn\" onClick={() => props.onCloseModal()}></div>\n        <div className={`modal-icon-${props.type} modal-icon`}></div>\n        <div className={`modal-text-${props.type} modal-text`}>{props.text}</div>\n        { props.detail ? <div className=\"modal-detail\">{props.detail}</div> : null }\n        <div className=\"modal-extra-text\">\n        {\n          props.extraLink ? (\n            <a className=\"transaction-link\" target=\"_blank\" rel=\"noreferrer\" href={props.extraLink}>{props.extraText}</a>\n          ) : props.extraText\n        }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Modal = (props) => {\n  const { infoModal } = useMappedState((state) => ({\n    infoModal: state.modal.infoModal\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const onCloseInfoModal = () => {\n    setModal('infoModal', Object.assign({}, infoModal, { show: false }))\n  }\n\n  const buildModals = () => {\n    const modals = []\n    if (infoModal.show) {\n      modals.push(<InfoModal {...infoModal} onCloseModal={() => onCloseInfoModal()} />)\n    }\n    return modals\n  }\n\n  return (\n    <div className=\"modal-container\">\n      {buildModals()}\n    </div>\n  )\n}\n\nexport default Modal","import axios from 'axios'\nimport { API_BASE_URL } from '../config'\n\nconst instance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: { 'Content-Type': 'application/json' }\n})\n\ninstance.interceptors.response.use(\n  (response) => {\n    const res = response.data;\n    return res\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\nexport default instance","import { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport Request from './request'\n\nconst { reverseHex } = utils\n\nexport const readBigNumberUint128 = (reader) => {\n  const hexRev = reverseHex(reader.read(16))\n  const str = hexRev.split('').reverse()\n  let total = new BigNumber(0)\n  \n  for (let i = 0; i < str.length; i++) {\n    total = total.plus(new BigNumber(16).pow(i).times(parseInt(str[i], 16)))\n  }\n\n  return total.isZero() ? 0 : total.toString()\n}\n\nexport const getTokenBalance = (account, token, cb) => {\n  \n  if (token.name !== 'ONT' && token.name !== 'ONG') {\n    const param = {\n      scriptHash: token.address,\n      operation: 'balanceOf',\n      args: [\n        {\n          type: 'Address',\n          value: account,\n        },\n      ],\n    }\n    let invokeMethod = client.api.smartContract.invokeRead\n\n    if (token.ty === 2 || token.ty === 3) {\n      invokeMethod = client.api.smartContract.invokeWasmRead\n    }\n    invokeMethod(param).then((bl) => {\n      if (bl) {\n        const str = reverseHex(bl).split('').reverse()\n        let total = new BigNumber(0)\n        \n        for (let i = 0; i < str.length; i++) {\n          total = total.plus(new BigNumber(16 ** i).times(parseInt(str[i], 16)))\n        }\n        \n        cb(total.div(10 ** token.decimals).toString())\n      }\n    })\n  } else {\n    Request({\n      method: 'get',\n      url: `/v2/addresses/${account}/native/balances`\n    }).then((resp) => {\n      if (resp.code === 0) {\n        const targetToken = resp.result.find((t) => t.asset_name === token.name.toLowerCase())\n        cb(targetToken.balance)\n      }\n    })\n    .catch((e) => {\n      console.log(e)\n    })\n  }\n}\n\nexport const getTokenIconDom = (token, cls = '') => {\n  if (token.id) {\n    return (\n      <div className={`token-icon-wrapper ${cls}`}>\n        {\n          token.ty === 3\n            ? token.name.split('-').slice(1).map((tokenName) => (<div key={`${token.name}-${tokenName}`} className={`token-icon-item with-drop-shadow icon-${tokenName}`} />))\n            : (<div className={`token-icon-item icon-${token.name}`} />)\n        }\n      </div>\n    )\n  }\n  return null\n}","export const handleError = (e, callback = () => {}) => {\n  try {\n    const json = JSON.parse(e)\n    if (json.Result === 'wasm contract does not exist') {\n      callback('CONTRACT_ADDRESS_ERROR')\n    }\n  } catch(error) {\n    // TODO\n  }\n}","export const PRICE_DECIMALS = 10 ** 6\nexport const SYNTH_PRICE_DECIMALS = 10 ** 12\nexport const DAI_PRICE = 1\nexport const TRANSACTION_FEE_RATE = 0.001\nexport const ASSET_STATUS = {\n  Live: '00',\n  HighLimit: '01',\n  LowLimit: '02'\n}\nexport const LEVERAGE_TYPE = {\n  Positive: '00',\n  Negative: '01'\n}","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { getTokenBalance } from '../../utils/token'\nimport Input from '../../components/input'\nimport { handleError } from '../../utils/errorHandle'\nimport { getHashString } from '../../utils/common'\nimport { PRICE_DECIMALS } from '../../utils/constants'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Transaction = () => {\n  const [pairNameKeyword, setPairNameKeyword] = useState('')\n  const [pairs, setPairs] = useState([])\n  const [tokenPair, setTokenPair] = useState({})\n  const [showPairSelectModal, setShowPairSelectModal] = useState(false)\n  const [tradeType, setTradeType] = useState('buy')\n  const [tokenBalance, setTokenBalance] = useState('-')\n  const [makes, setMakes] = useState([])\n  const [myMakes, setMyMakes] = useState([])\n  const [makeView, setMakeView] = useState('all')\n  const [price, setPrice] = useState('')\n  const [amount, setAmount] = useState('')\n  const [total, setTotal] = useState('')\n  const [pool, setPool] = useState([])\n  const [lastPrice, setLastPrice] = useState(0)\n  const [feeRate, setFeeRate] = useState(0)\n  const [isValid, setIsValid] = useState(false)\n  const { account, stopInterval, tokens, CONTRACT_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    stopInterval: state.common.stopInterval,\n    tokens: state.common.tokens,\n    CONTRACT_ADDRESS: state.gov.poolStat.pools.dex.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const setStopInterval = useCallback((stopInterval) => dispatch({ type: 'SET_STOP_INTERVAL', stopInterval }), [])\n\n  const Alert = useAlert()\n\n  const urlPairName = decodeURIComponent(getHashString(window.location.hash, 'pair') || '')\n\n  useEffect(() => {\n    if (pairs.length && !tokenPair.name) {\n      setTokenPair(pairs.find((p) => p.name === `${urlPairName}`) || pairs.find((p) => p.name === 'pDAI/UNX'))\n    }\n  }, [pairs])\n\n  useEffect(() => {\n    if (account && tokenPair.name) {\n      setTokenBalance('-')\n      getTokenBalance(account, tradeType === 'buy' ? tokenPair.tokens[1] : tokenPair.tokens[0], (bl) => {\n        setTokenBalance(bl)\n      })\n    }\n  }, [account, tokenPair, tradeType])\n\n  useEffect(() => {\n    async function getMakesOfPair() {\n      if (tokenPair.name && CONTRACT_ADDRESS) {\n        try {\n          const makeStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'get_makes_of_pair',\n            args: [\n              {\n                type: 'Long',\n                value: tokenPair.tokens[0].id\n              },\n              {\n                type: 'Long',\n                value: tokenPair.tokens[1].id\n              }\n            ]\n          })\n          const parsedMakes = []\n          const strReader = new StringReader(makeStr)\n          const pairLastPrice = strReader.readUint128()\n  \n          for (let j = 0; j <= 1; j++) {\n            const makeCount = strReader.readNextLen()\n            for (let i = 0; i < makeCount; i++) {\n              const make = {}\n              make.make_id = strReader.readUint128()\n              make.price = strReader.readUint128()\n              make.amount = new BigNumber(strReader.readUint128()).toString()\n              make.asset_token_id = (j === 0 ? tokenPair.tokens[0].id : tokenPair.tokens[1].id)\n              make.price_token_id = (j === 0 ? tokenPair.tokens[1].id : tokenPair.tokens[0].id)\n      \n              parsedMakes.push(make)\n            }\n          }\n  \n          setLastPrice(pairLastPrice ? new BigNumber(pairLastPrice).div(PRICE_DECIMALS).toString() : 0)\n          setMakes(parsedMakes)\n        } catch (e) {\n          handleError(e, (errorCode) => {\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get makes of pair', e)\n            }\n          })\n        }\n      }\n    }\n    getMakesOfPair()\n    const interval = !stopInterval && setInterval(getMakesOfPair, 2000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokenPair, account, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    async function getUserMakes() {\n      if (account && CONTRACT_ADDRESS) {\n        try {\n          const makeStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'get_user_makes',\n            args: [\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n          const parsedMakes = []\n          const strReader = new StringReader(makeStr)\n          const makeCount = strReader.readNextLen()\n          for (let i = 0; i < makeCount; i++) {\n            const make = {}\n            make.address = client.api.utils.hexToAddress(strReader.read(20))\n            make.asset_token_id = strReader.readUint128()\n            make.price_token_id = strReader.readUint128()\n            make.price = strReader.readUint128()\n            make.amount = strReader.readUint128()\n            make.make_id = strReader.readUint128()\n  \n            parsedMakes.push(make)\n          }\n  \n          setMyMakes(parsedMakes)\n        } catch (e) {\n          handleError(e, (errorCode) => {\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get user makes', e)\n            }\n          })\n        }\n      }\n    }\n\n    getUserMakes()\n    const interval = !stopInterval && setInterval(getUserMakes, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokenPair, account, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    async function getStat() {\n      if (tokens.length && CONTRACT_ADDRESS) {\n        try {\n          const statStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'stat',\n            args: []\n          })\n          \n          const tokenPool = []\n          const strReader = new StringReader(statStr)\n          setFeeRate(strReader.readUint128())\n          const tokenCount = strReader.readNextLen()\n  \n          for (let i = 0; i < tokenCount; i++) {\n            const token = {}\n            token.id = strReader.readUint128()\n            const tempToken = tokens.find((t) => t.id === token.id)\n            token.balance = new BigNumber(strReader.readUint128()).div(new BigNumber(10 ** tempToken.decimals)).toString()\n  \n            tokenPool.push(Object.assign(tempToken, token))\n          }\n\n          if (!pairs.length) {\n            const tokenPairs = []\n            for (let i = 0; i < tokenPool.length; i++) {\n              for (let j = i + 1; j < tokenPool.length; j++) {\n                tokenPairs.push({\n                  name: `${tokenPool[i].name}/${tokenPool[j].name}`,\n                  tokens: [tokenPool[i], tokenPool[j]]\n                })\n              }\n            }\n\n            setPairs(tokenPairs)\n          }\n\n          setPool(tokenPool)\n        } catch (e) {\n          handleError(e, (errorCode) => {\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get stat', e)\n            }\n          })\n        }\n      }\n    }\n\n    getStat()\n    const interval = setInterval(() => {\n      if (stopInterval) {\n        clearInterval(interval)\n      } else {\n        getStat()\n      }\n    }, 5000)\n    return () => clearInterval(interval)\n  }, [tokens, pairs, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    if (price > 0 && amount > 0) {\n      setTotal(new BigNumber(price).times(amount).toString())\n    }\n  }, [price, amount])\n\n  useEffect(() => {\n    if (price > 0) {\n      setAmount(new BigNumber(total || 0).div(price).toString())\n    }\n  }, [total])\n\n  useEffect(() => {\n    if (tokenPair.name && price > 0 && amount > 0) {\n      setIsValid(true)\n    } else {\n      setIsValid(false)\n    }\n  }, [tokenPair, amount, price])\n\n  useEffect(() => {\n    setMakeView('all')\n  }, [account])\n\n  function onChangeToUserMakeView() {\n    if (account) {\n      setMakeView('my')\n    } else {\n      Alert.show('Please Connect Wallet First')\n    }\n  }\n\n  function getMakes(type) {\n    if (tokenPair.name) {\n      const curMakes = (makeView === 'my' ? myMakes : makes)\n      if (type === 'sell') {\n        return curMakes.filter((m) => m.asset_token_id === tokenPair.tokens[0].id && m.price_token_id === tokenPair.tokens[1].id).map((m) => {\n          return (\n            <div key={m.make_id} className=\"my-make-item reverse\">\n              <div className=\"make-item-detail make-sell\">{new BigNumber(m.price).div(PRICE_DECIMALS).toString()}</div>\n              <div className=\"make-item-detail\">{new BigNumber(m.amount).div((10 ** tokenPair.tokens[0].decimals)).toString()}</div>\n              { makeView === 'my' && <div className=\"unmake-btn\" onClick={() => onUnmake(m.make_id)}>Cancel</div> }\n            </div>)\n        })\n      } else {\n        return curMakes.filter((m) => m.asset_token_id === tokenPair.tokens[1].id && m.price_token_id === tokenPair.tokens[0].id).map((m) => {\n          return (\n            <div key={m.make_id} className=\"my-make-item\">\n              <div className=\"make-item-detail make-buy\">{new BigNumber(PRICE_DECIMALS).div(m.price).toString()}</div>\n              <div className=\"make-item-detail\">{new BigNumber(m.amount).times(m.price).div(PRICE_DECIMALS).div((10 ** tokenPair.tokens[1].decimals)).toString()}</div>\n              { makeView === 'my' && <div className=\"unmake-btn\" onClick={() => onUnmake(m.make_id)}>Cancel</div> }\n            </div>)\n        })\n      }\n    }\n    return null\n  }\n\n\n\n  async function onMake() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (tokenPair.name && CONTRACT_ADDRESS) {\n      if (price <= 0) {\n        Alert.error('Price should be greater than 0')\n        return\n      }\n      if (amount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const assetToken = tradeType === 'buy' ? tokenPair.tokens[1] : tokenPair.tokens[0]\n        const priceToken = tradeType === 'buy' ? tokenPair.tokens[0] : tokenPair.tokens[1]\n        const tradePrice = tradeType === 'buy' ? new BigNumber(1).div(price).toString() : price\n        const tradeAmount = tradeType === 'buy' ? total : amount\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: assetToken.id\n          },\n          {\n            type: 'Long',\n            value: priceToken.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(tradePrice).times(PRICE_DECIMALS).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(tradeAmount).times(new BigNumber(10 ** assetToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const makeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: CONTRACT_ADDRESS,\n          operation: 'make',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (makeResult.transaction) {\n          setAmount('')\n          setPrice('')\n          setTotal('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${makeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onUnmake(makeId) {\n    if (account && makeId && CONTRACT_ADDRESS) {\n      try {\n        const unmakeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: CONTRACT_ADDRESS,\n          operation: 'unmake',\n          args: [\n            {\n              type: 'Address',\n              value: account\n            },\n            {\n              type: 'Long',\n              value: makeId\n            }\n          ],\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n        if (unmakeResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${unmakeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function getPriceHint() {\n    if (tokenPair.name) {\n      return tokenPair.tokens[1].name\n    }\n  }\n\n  function getAmountHint() {\n    if (tokenPair.name) {\n      return tokenPair.tokens[0].name\n    }\n  }\n\n  function generateTokenPool() {\n    if (pool.length) {\n      return pool.filter((tp) => Number(tp.balance) !== 0).map((tp) => {\n        return (\n          <div className=\"pool-item\" key={tp.name}>\n            <div className={`icon-${tp.name} token-name`}>{tp.name}</div>\n            <div className=\"token-balance\">{tp.balance}</div>\n          </div>\n        )\n      })\n    }\n  }\n\n  const handlePairClick = (pair) => {\n    setTokenPair(pair)\n    setShowPairSelectModal(false)\n  }\n\n  return (\n    <div className=\"swap-wrapper\">\n      <div className=\"trade-container\">\n        <div className=\"make-wrapper\">\n          <div className=\"container-header\">Trade\n            {\n              tokenPair.name ? (\n                <div className=\"token-pair-select\" onClick={() => setShowPairSelectModal(true)}>\n                  <div className=\"token-pair-name\">{tokenPair.name}</div>\n                </div>\n              ) : null\n            }\n          </div>\n          <div className=\"trade-type-switch\">\n            <div className={`trade-type-item ${tradeType === 'buy' ? 'trade-buy' : ''}`} onClick={() => setTradeType('buy')}>Buy</div>\n            <div className={`trade-type-item ${tradeType === 'sell' ? 'trade-sell' : ''}`} onClick={() => setTradeType('sell')}>Sell</div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Price\n              <span className=\"hint\">{getPriceHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={price} decimals=\"9\" onChange={(amount) => setPrice(amount)} />\n            </div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Amount\n              <span className=\"hint\">{getAmountHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={amount} decimals={tokenPair.tokens ? tokenPair.tokens[0].decimals : '9'} onChange={(amount) => setAmount(amount)} />\n            </div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Total {tradeType === 'buy' ? 'Need' : 'Receive'}\n              <span className=\"hint\">{getPriceHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={total} decimals=\"9\" onChange={(amount) => setTotal(amount)} />\n            </div>\n          </div>\n          { tokenPair.name ? <div className=\"balance-line\">Balance: <span>{tokenBalance} {tradeType === 'buy' ? tokenPair.tokens[1].name : tokenPair.tokens[0].name}</span></div> : null }\n          { feeRate ? <p className=\"fee-rate\">* The fee rate of transaction is {feeRate / 100}%</p> : null }\n          { isValid ? <div className={`make-btn make-btn-${tradeType}`} onClick={() => onMake()}>{tradeType.toUpperCase()} {tokenPair.tokens[0].name}</div> : <div className=\"make-btn disabled\">{tradeType.toUpperCase()} {tokenPair.tokens ? tokenPair.tokens[0].name : ''}</div> }\n        </div>\n        <div className=\"trade-panel\">\n          <div className=\"panel-header\">\n            <div className=\"panel-title\">Order Book</div>\n            <div className=\"tabs\">\n              <div className={makeView === 'all' ? \"tab-wrapper selected\" : \"tab-wrapper\"} onClick={() => setMakeView('all')}>All</div>\n              <div className={makeView === 'my' ? \"tab-wrapper selected\" : \"tab-wrapper\"} onClick={() => onChangeToUserMakeView()}>My</div>\n            </div>\n          </div>\n          <div className=\"list-title\">\n            <div className=\"blank-placeholder\"></div>\n            <div className=\"title-items\">\n              <div className=\"item-text\">Price ({getPriceHint()})</div>\n              <div className=\"item-text\">Amount ({getAmountHint()})</div>\n              { makeView === 'my' && <div className=\"item-placeholder\"></div> }\n            </div>\n          </div>\n          <div className=\"sell-section\">\n            <div className=\"section-title\">Sell</div>\n            <div className=\"make-list reverse\">\n            {getMakes('sell')}\n            </div>\n          </div>\n          {\n            (makeView === 'all' && Number(lastPrice) !== 0) ? <div className=\"last-price-wrapper\">\n              <div className=\"last-price-label\">Last Price</div>\n              <div className=\"last-price\">{lastPrice}</div>\n              <div className=\"last-price-placeholder\"></div>\n            </div> : null\n          }\n          <div className=\"buy-section\">\n            <div className=\"section-title\">Buy</div>\n            <div className=\"make-list\">\n            {getMakes('buy')}\n            </div>\n          </div>\n        </div>\n      </div>\n      {\n        pool.filter((tp) => Number(tp.balance) !== 0).length ? (\n          <div className=\"token-pool\">\n            <div className=\"container-header\">Token Balance</div>\n            <div className=\"pool-items\">\n            {generateTokenPool()}\n            </div>\n          </div>\n        ) : null\n      }\n      {\n        showPairSelectModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => setShowPairSelectModal(false)}></div>\n              <div className=\"pair-select-modal-wrapper\">\n                <div className=\"pair-select-modal-title\">Select</div>\n                <input type=\"text\" className=\"pair-select-modal-input\" value={pairNameKeyword} onInput={(e) => setPairNameKeyword(e.target.value)} />\n                <div className=\"pair-select-modal-list\">\n                  {\n                    pairs.filter((p) => {\n                      const nameLC = p.name.toLowerCase()\n                      const tNames = pairNameKeyword.split(' ').filter((n) => n)\n                      \n                      return tNames.reduce((a, b) => a && nameLC.indexOf(b) >= 0, true)\n                    }).map((p) => {\n                      return (\n                        <div key={p.name} className=\"pair-select-modal-list-item\" onClick={() => handlePairClick(p)}>\n                          {\n                            p.tokens.map((t) => <div key={`${p.name}-${t.name}`} className={`pair-select-modal-list-item-icon icon-${t.name}`}></div>)\n                          }\n                          <div className=\"pair-select-modal-list-item-name\">{p.name}</div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n    </div>\n  )\n}\n\nexport default Transaction","import React, { useState, useEffect } from 'react'\nimport { useMappedState } from 'redux-react-hook';\nimport Select, { components } from 'react-select'\nimport Input from '../input'\nimport { getTokenBalance } from '../../utils/token'\n\nimport './index.css'\n\nconst TokenInput = (props) => {\n  const { cls, value, round, tokens = [], defaultToken, inputDisabled = false, showBalance = true, withMax = true, onTokenChange, onAmountChange, balanceChange = 0 } = props\n  const [token, setToken] = useState(defaultToken || {})\n  const [balance, setBalance] = useState('-')\n  const { account } = useMappedState((state) => ({\n    account: state.wallet.account\n  }))\n\n  useEffect(() => {\n    if (account && showBalance && token.id) {\n      getTokenBalance(account, token, setBalance)\n    }\n  }, [token, showBalance, account, balanceChange])\n\n  const handleTokenChange = (e) => {\n    if (e.value !== token.id) {\n      const newToken = tokens.find((t) => t.id === e.value)\n\n      setToken(newToken)\n      typeof onTokenChange === 'function' && onTokenChange(newToken)\n    }\n  }\n\n  const renderTokenSeletion = (dToken) => {\n    if (tokens.length) {\n      const CustomOption = (props) => {\n        const label = props.label.split(' ')[0]\n        return (\n          <components.Option {...props}>\n            <div className=\"option-wrapper\">\n              <div className={`icon-${label} option-icon`}></div>\n              <div className=\"option-label\">{props.label}</div>\n            </div>\n          </components.Option>\n        )\n      }\n      const SingleValue = ({ children, ...props }) => {\n        const label = children.split(' ')[0]\n        return (\n          <components.SingleValue {...props}>\n            <div className=\"option-wrapper\">\n              <div className={`icon-${label} option-icon`}></div>\n              <div className=\"option-label\">{children}</div>\n            </div>\n          </components.SingleValue>\n        )\n      }\n      let defaultToken = dToken ? dToken : tokens[0]\n\n      if (!token.id || !tokens.find((t) => t.id === token.id)) {\n        setToken(defaultToken)\n      }\n\n      return (\n        <Select\n          className={`token-select ${cls}`}\n          defaultValue={defaultToken}\n          options={tokens}\n          isSearchable={false}\n          components={{ Option: CustomOption, SingleValue }}\n          onChange={(e) => handleTokenChange(e)}\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            colors: {\n              ...theme.colors,\n              primary: '#2c2c2c',\n            },\n          })}\n        />\n      )\n    }\n  }\n\n  const maxInput = () => {\n    if (!isNaN(balance) && typeof onAmountChange === 'function') {\n      onAmountChange(balance)\n    }\n  }\n\n  return (\n    <div className=\"token-input-wrapper\">\n      <div className=\"input-label\">{props.label || 'Input'}\n        { showBalance ? <span className=\"hint\">Balance: {balance}</span> : null }\n      </div>\n      <div className=\"input-wrapper\">\n        { renderTokenSeletion(defaultToken) }\n        <Input decimals={token.decimals} disabled={inputDisabled} value={value} round={round} onChange={(value) => onAmountChange(value)} />\n        { withMax && <div className=\"input-max-btn\" onClick={() => maxInput()}>MAX</div> }\n      </div>\n    </div>\n  )\n}\n\nexport default TokenInput\n","import { useEffect, useCallback } from 'react'\nimport { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { readBigNumberUint128 } from '../utils/token'\n\nconst { StringReader, reverseHex } = utils\n\nexport const useFetchPairs = () => {\n  const { account, tokens, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setSwapTokens = useCallback((tokens) => dispatch({ type: 'SET_SWAP_TOKENS', tokens }), [])\n  const setPairs = useCallback((pairs) => dispatch({ type: 'SET_PAIRS', pairs }), [])\n\n  useEffect(() => {\n    getSwapStat()\n    let interval = setInterval(getSwapStat, 3000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, tokens, swapTokens, SWAP_ADDRESS])\n\n  async function getSwapStat() {\n    if (SWAP_ADDRESS) {\n      try {\n        const pairStr = await client.api.smartContract.invokeWasmRead({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'stat',\n          args: []\n        })\n\n        const parsedPairs = []\n        const strReader = new StringReader(pairStr)\n        const pairCount = strReader.readNextLen()\n        for (let i = 0; i < pairCount; i++) {\n          const pair = {}\n          pair.address = reverseHex(strReader.read(20))\n          pair.token1 = strReader.readUint128()\n          pair.token2 = strReader.readUint128()\n          pair.id = strReader.readUint128()\n          pair.reserve1 = readBigNumberUint128(strReader)\n          pair.reserve2 = readBigNumberUint128(strReader)\n          pair.lp = readBigNumberUint128(strReader)\n\n          parsedPairs.push(pair)\n        }\n\n        const tokenIds = []\n        const tokenCount = strReader.readNextLen()\n        for (let i = 0; i < tokenCount; i++) {\n          tokenIds.push(strReader.readUint128())\n        }\n\n        setPairs(parsedPairs)\n        if (tokens.length && !swapTokens.length) {\n          setSwapTokens(tokenIds.map((t) => tokens.find((tk) => tk.id === t)))\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  return null\n}","import BigNumber from 'bignumber.js'\n\nconst REST = 0.997\n\nexport const findAllPaths = (pairs, sourceId, targetId) => {\n  let pathArr = []\n  const findPath = (sourceId, targetId, pathNodes = []) => {\n    pathNodes = [...pathNodes]\n    pathNodes.push(sourceId)\n\n    if (sourceId === targetId) {\n      pathArr.push(pathNodes)\n      return\n    }\n\n    let neighborNodes = []\n    pairs.map((p) => {\n      if (p.token1 === sourceId) {\n        neighborNodes.push(p.token2)\n      } else if (p.token2 === sourceId) {\n        neighborNodes.push(p.token1)\n      }\n    })\n\n    for (let id of neighborNodes) {\n      if (!pathNodes.includes(id)) {\n        findPath(id, targetId, pathNodes)\n      }\n    }\n  }\n\n  findPath(sourceId, targetId)\n\n  pathArr.sort((p1, p2) => {\n    return p1.length - p2.length\n  })\n  \n  return pathArr\n}\n\nconst getInputAmount = (output, pair, reverse = false) => {\n  let amount\n  if (reverse) {\n    amount = new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(pair.reserve1).minus(output)).minus(pair.reserve2).div(REST).integerValue(BigNumber.ROUND_CEIL).toString()\n  } else {\n    amount = new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(pair.reserve2).minus(output)).minus(pair.reserve1).div(REST).integerValue(BigNumber.ROUND_CEIL).toString()\n  }\n  return amount\n}\n\nconst getOutputAmount = (input, pair, reverse = false) => {\n  let amount\n  if (reverse) {\n    amount = new BigNumber(pair.reserve1).minus(new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(input).times(REST).plus(pair.reserve2))).integerValue(BigNumber.ROUND_FLOOR).toString()\n  } else {\n    amount = new BigNumber(pair.reserve2).minus(new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(input).times(REST).plus(pair.reserve1))).integerValue(BigNumber.ROUND_FLOOR).toString()\n  }\n  return amount\n}\n\nconst findNextOutput = (input, pairs, token1, token2) => {\n  let pair = pairs.find((p) => p.token1 === token1 && p.token2 === token2)\n\n  if (pair) {\n    return getOutputAmount(input, pair)\n  }\n\n  pair = pairs.find((p) => p.token1 === token2 && p.token2 === token1)\n\n  if (pair) {\n    return getOutputAmount(input, pair, true)\n  }\n}\n\nconst findPrevInput = (output, pairs, token1, token2) => {\n  let pair = pairs.find((p) => p.token1 === token1 && p.token2 === token2)\n\n  if (pair) {\n    return getInputAmount(output, pair)\n  }\n\n  pair = pairs.find((p) => p.token1 === token2 && p.token2 === token1)\n\n  if (pair) {\n    return getInputAmount(output, pair, true)\n  }\n}\n\nexport const bestSwap = (type = 'exactin', amount, pairs, token1, token2) => {\n  const paths = findAllPaths(pairs, token1, token2)\n  const originAmount = amount\n  let maxOutput = 0\n  let minInput = Infinity\n  let path = []\n  \n  for (let i = 0; i < paths.length; i++) {\n    amount = originAmount\n    if (type === 'exactin') {\n      for (let j = 0; j < paths[i].length - 1; j++) {\n        amount = findNextOutput(amount, pairs, paths[i][j], paths[i][j + 1])\n      }\n  \n      if (new BigNumber(amount).gt(new BigNumber(maxOutput))) {\n        maxOutput = amount\n        path = paths[i]\n      }\n    } else {\n      for (let j = paths[i].length - 1; j > 0; j--) {\n        amount = findPrevInput(amount, pairs, paths[i][j - 1], paths[i][j])\n      }\n  \n      if (new BigNumber(amount).lt(new BigNumber(minInput)) && amount > 0) {\n        minInput = amount\n        path = paths[i]\n      }\n    }\n  }\n\n  if (type === 'exactin') {\n    return [maxOutput, path]\n  } else if (type === 'exactout') {\n    return [minInput, path]\n  }\n}\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport TokenInput from '../../components/tokenInput'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport { toLocaleFixed } from '../../utils/common'\nimport { bestSwap } from '../../utils/swap'\nimport './index.css'\n\nconst Swap = () => {\n  const [swapType, setSwapType] = useState('exactin')\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState('')\n  const [token2Amount, setToken2Amount] = useState('')\n  const [isValidPair, setIsValidPair] = useState(false)\n  const [isValidSwap, setIsValidSwap] = useState(false)\n  const [bestPath, setBestPath] = useState([])\n  const [showPrice, setShowPrice] = useState(false)\n  const [balanceChange, setBalanceChange] = useState(0)\n  const { account, slippage, pairs, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    pairs: state.swap.pairs,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (token1.id !== token2.id && token1Amount > 0 && token2Amount > 0 && bestPath.length) {\n      setShowPrice(true)\n      setIsValidSwap(true)\n    } else {\n      setShowPrice(false)\n      setIsValidSwap(false)\n    }\n  }, [token1, token2, token1Amount, token2Amount, bestPath])\n\n  useEffect(() => {\n    if (swapTokens.length) {\n      setToken1(swapTokens.find((st) => st.name === 'pDAI'))\n      setToken2(swapTokens.find((st) => st.name === 'UNX'))\n    }\n  }, [swapTokens])\n\n  useEffect(() => {\n    if (token1.id && token2.id && validPair(token1.id, token2.id)) {\n      setIsValidPair(true)\n    } else {\n      setIsValidPair(false)\n    }\n  }, [token1, token2])\n\n  function validPair(token1, token2) {\n    if (pairs.length) {\n      if (token1 && token2 && pairs.find((p) => (p.token1 === token1 && p.token2 === token2) || (p.token1 === token2 && p.token2 === token1))) {\n        return true\n      }\n    }\n    return false\n  }\n\n  function onChangeToken1(token) {\n    if (token.id !== token1.id) {\n      setToken1(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onChangeToken2(token) {\n    if (token.id !== token2.id) {\n      setToken2(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onToken1AmountChange(amount) {\n    if (amount !== token1Amount) {\n      setSwapType('exactin')\n      setToken1Amount(amount)\n      if (pairs.length && amount) {\n        const inputAmount = new BigNumber(amount).times(10 ** token1.decimals).toString()\n        const [maxOutput, path] = bestSwap('exactin', inputAmount, pairs, token1.id, token2.id)\n\n        setToken2Amount(new BigNumber(maxOutput).div(10 ** token2.decimals).toString())\n        setBestPath(path)\n      } else if (Number(amount) === 0) {\n        setToken2Amount('')\n      }\n    }\n  }\n\n  function onToken2AmountChange(amount) {\n    if (amount !== token2Amount) {\n      setSwapType('exactout')\n      setToken2Amount(amount)\n      if (pairs.length && amount) {\n        const outputAmount = amount * (10 ** token2.decimals)\n        const [minInput, path] = bestSwap('exactout', outputAmount, pairs, token1.id, token2.id)\n\n        if (minInput === Infinity) {\n          setToken1Amount('')\n        } else {\n          setToken1Amount(new BigNumber(minInput).div(10 ** token1.decimals).toString())\n        }\n        setBestPath(path)\n      } else if (Number(amount) === 0) {\n        setToken1Amount('')\n      }\n    }\n  }\n\n  function onNavigateToPool() {\n    history.push('/pool')\n  }\n\n  async function handleSwap() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (token1Amount <= 0 || token2Amount <= 0) {\n      Alert.error('Amount should be greater than 0')\n      return\n    }\n    if (token1.id && token1.id === token2.id) {\n      Alert.error('Input should be different')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Array',\n            value: bestPath.map((p) => ({ type: 'Long', value: p }))\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const swapResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: swapType === 'exactin' ? 'swap_exact_tokens_for_tokens' : 'swap_tokens_for_exact_tokens',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (swapResult.transaction) {\n          setBalanceChange(balanceChange + 1)\n          setToken1Amount('')\n          setToken2Amount('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${swapResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function getPrice() {\n    return `${toLocaleFixed(token2Amount / token1Amount, 6)} ${token2.name} per ${token1.name}`\n  }\n\n  function getMinReceiveOrMaxSold() {\n    if (swapType === 'exactin') {\n      return <p>Minimum Received:<span>{toLocaleFixed(token2Amount * (1 - slippage / 100), 6)} {token2.name}</span></p>\n    } else {\n      return <p>Maximum Sold:<span>{toLocaleFixed(token1Amount * (1 + slippage / 100), 6)} {token1.name}</span></p>\n    }\n  }\n\n  function getPriceImpact() {\n    let price\n    let pair = pairs.find((p) => p.token1 === token1.id && p.token2 === token2.id)\n\n    if (pair) {\n      price = new BigNumber(pair.reserve2).div(10 ** token2.decimals).div(pair.reserve1).times(10 ** token1.decimals).toString()\n    } else {\n      pair = pairs.find((p) => p.token1 === token2.id && p.token2 === token1.id)\n\n      if (pair) {\n        price = new BigNumber(pair.reserve1).div(10 ** token1.decimals).div(pair.reserve2).times(10 ** token2.decimals).toString()\n      }\n    }\n\n    return <p>Price Impact:<span>{Math.abs((token2Amount / token1Amount - price) / price * 100).toFixed(2)}%</span></p>\n  }\n\n  function getBestPath() {\n    if (bestPath.length) {\n      const items = []\n      bestPath.map((t, index) => {\n        const token = swapTokens.find((tk) => tk.id === t)\n        index > 0 && items.push((<div className=\"icon-arrow-right\"></div>))\n        items.push((<div className={`path-icon icon-${token.name}`}>{token.name}</div>))\n\n        return t\n      })\n\n      return items\n    }\n  }\n\n  return (\n    <div className=\"sw-wrapper\">\n      <div className=\"sw-container\">\n        <div className=\"sw-tabs\">\n          <div className=\"sw-tab active\">Swap</div>\n          <div className=\"sw-tab\" onClick={() => onNavigateToPool()}>Pool</div>\n        </div>\n        <div className=\"sw-content\">\n          <TokenInput\n            balanceChange={balanceChange}\n            label=\"From\"\n            tokens={swapTokens}\n            value={token1Amount}\n            round='up'\n            defaultToken={swapTokens.length && swapTokens.find((st) => st.name === 'pDAI')}\n            onTokenChange={(token) => onChangeToken1(token)}\n            onAmountChange={(amount) => onToken1AmountChange(amount)} />\n          <div className=\"icon-arrow-down\"></div>\n          <TokenInput\n            balanceChange={balanceChange}\n            label=\"To\"\n            tokens={swapTokens}\n            value={token2Amount}\n            round='down'\n            defaultToken={swapTokens.length && swapTokens.find((st) => st.name === 'UNX')}\n            onTokenChange={(token) => onChangeToken2(token)}\n            onAmountChange={(amount) => onToken2AmountChange(amount)} />\n          { showPrice ? <div className=\"sw-price-wrapper\">Price<span className=\"sw-price-info\">{getPrice()}</span></div> : null }\n          { isValidPair ? null : <div className=\"add-liquidity-hint\">Add liquidity to enable swaps for this pair.</div> }\n          { isValidPair ? ( isValidSwap ? <div className=\"sw-swap-btn\" onClick={() => handleSwap()}>Swap</div> : <div className=\"sw-swap-btn disabled\">Swap</div> ) : <div className=\"sw-swap-btn disabled\">Invalid Liquidity</div> }\n        </div>\n        {\n          isValidPair && isValidSwap ? (\n            <div className=\"sw-hint-wrapper\">\n              <div className=\"sw-input-output\">{getMinReceiveOrMaxSold()}</div>\n              <div className=\"sw-price-impact\">{getPriceImpact()}</div>\n              <div className=\"sw-best-path\">\n                <p>Route:</p>\n                <div className=\"sw-best-path-list\">\n                  {getBestPath()}\n                </div>\n              </div>\n            </div>\n          ) : null\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Swap\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState } from 'redux-react-hook';\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { readBigNumberUint128 } from '../../utils/token'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Pool = () => {\n  const [liquidityBalance, setLiquidityBalance] = useState([])\n  const { account, tokens, pairs, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (account && pairs.length && SWAP_ADDRESS) {\n      const getLiquidityBalanceByPairId = (id) => {\n        return client.api.smartContract.invokeWasmRead({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'balanceOf',\n          args: [\n            {\n              type: 'Long',\n              value: id\n            },\n            {\n              type: 'Address',\n              value: account\n            }\n          ]\n        }).then((resp) => {\n          const strReader = new StringReader(resp)\n          const balance = readBigNumberUint128(strReader)\n          \n          return { [id]: balance }\n        })\n      }\n      Promise.all(pairs.map((p) => getLiquidityBalanceByPairId(p.id))).then((resp) => {\n        setLiquidityBalance(resp)\n      })\n    }\n  }, [account, pairs, SWAP_ADDRESS])\n\n  function onNavigateToSwap() {\n    history.push('/swap')\n  }\n\n  function onNavigateToAddLiquidity() {\n    history.push('/pool/add')\n  }\n\n  function onRemoveLiquidity(pairId) {\n    history.push(`/pool/remove/${pairId}`)\n  }\n\n  function generateLiquidityList() {\n    const myLiquidities = liquidityBalance.filter((l) => l[Object.keys(l)[0]])\n    if (myLiquidities.length && pairs.length && tokens.length) {\n      return myLiquidities.map((lb) => {\n        const pairId = Object.keys(lb)[0]\n        const pair = pairs.find((p) => `${p.id}` === pairId)\n        const token1 = tokens.find((t) => t.id === pair.token1)\n        const token2 = tokens.find((t) => t.id === pair.token2)\n        const balance = new BigNumber(lb[pairId])\n        const shareOfPool = balance.div(pair.lp)\n        const token1Amount = shareOfPool.times(pair.reserve1).div(10 ** token1.decimals).toFixed(token1.decimals)\n        const token2Amount = shareOfPool.times(pair.reserve2).div(10 ** token2.decimals).toFixed(token2.decimals)\n        \n        return (\n          <div className=\"pool-liquidity-item\">\n            <div className=\"liquidity-item-detail\">\n              <div className={`token-icon icon-${token1.name}`}></div>\n              <div className={`token-icon icon-${token2.name}`}></div>\n              <div className=\"token-pair\"><strong>{token1.name}/{token2.name}</strong></div>\n              <div className=\"pair-position\"><strong>Pooled</strong>: {token1Amount} / {token2Amount}</div>\n              <div className=\"pool-tokens\"><strong>Pool Tokens</strong>: {balance.div(10 ** 18).toString()}</div>\n            </div>\n            <div className=\"remove-liquidity-btn\" onClick={() => onRemoveLiquidity(pairId)}>Remove</div>\n          </div>\n        )\n      })\n    } else {\n      return <div className=\"pool-empty-lp\">No Liquidities</div>\n    }\n  }\n\n  return (\n    <div className=\"pool-wrapper\">\n      <div className=\"pool-container\">\n        <div className=\"sw-tabs\">\n          <div className=\"sw-tab\" onClick={() => onNavigateToSwap()}>Swap</div>\n          <div className=\"sw-tab active\">Pool</div>\n        </div>\n        <div className=\"pool-content\">\n          <div className=\"pool-add-liquidity-btn\" onClick={() => onNavigateToAddLiquidity()}>Add Liquidity</div>\n          <div className=\"pool-liquidity-list\">\n            <div className=\"my-liquidity\">Your Liquidity</div>\n            {generateLiquidityList()}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Pool","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport TokenInput from '../../../components/tokenInput'\nimport { useFetchPairs } from '../../../hooks/usePair';\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\nimport './index.css'\n\nconst AddLiquidity = () => {\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState('')\n  const [token2Amount, setToken2Amount] = useState('')\n  const [isValidPair, setIsValidPair] = useState(true)\n  const [isFirstProvider, setIsFirstProvider] = useState(false)\n  const [showPriceInfo, setShowPriceInfo] = useState(false)\n  const [balanceChange, setBalanceChange] = useState(0)\n  const { account, slippage, pairs, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    pairs: state.swap.pairs,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (!token1.id || !token2.id || (token1.id === token2.id)) {\n      setIsValidPair(false)\n    } else {\n      setIsValidPair(true)\n    }\n  }, [token1, token2])\n\n  useEffect(() => {\n    const pair = getPairByToken()\n    if (token1.id && token2.id && token1.id != token2.id && (!pairs.length || !pair || (pair.reserve1 === 0 && pair.reserve2 === 0))) {\n      setIsFirstProvider(true)\n    } else {\n      setIsFirstProvider(false)\n    }\n  }, [pairs, token1, token2])\n\n  useEffect(() => {\n    if (token1.id && token2.id) {\n      setShowPriceInfo(true)\n    } else {\n      setShowPriceInfo(false)\n    }\n  }, [pairs, token1, token2, token1Amount, token2Amount])\n\n  useEffect(() => {\n    if (swapTokens.length) {\n      setToken1(swapTokens.find((st) => st.name === 'pDAI'))\n      setToken2(swapTokens.find((st) => st.name === 'UNX'))\n    }\n  }, [account, swapTokens])\n\n  function getPairByToken() {\n    return pairs.find((p) => (p.token1 === token1.id && p.token2 === token2.id) || (p.token1 === token2.id && p.token2 === token1.id))\n  }\n\n  function onChangeToken1(token) {\n    if (token.id !== token1.id) {\n      setToken1(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onChangeToken2(token) {\n    if (token.id !== token2.id) {\n      setToken2(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onToken1AmountChange(amount) {\n    setToken1Amount(amount)\n    if (!isFirstProvider) {\n      if (amount) {\n        setToken2Amount(new BigNumber(amount).times(getPairPrice()).times(10 ** token2.decimals).integerValue(BigNumber.ROUND_CEIL).div(10 ** token2.decimals).toString())\n      } else if (Number(amount) === 0) {\n        setToken2Amount('')\n      }\n    }\n  }\n\n  function onToken2AmountChange(amount) {\n    setToken2Amount(amount)\n    if (!isFirstProvider) {\n      if (amount) {\n        setToken1Amount(new BigNumber(amount).div(getPairPrice()).times(10 ** token1.decimals).integerValue(BigNumber.ROUND_CEIL).div(10 ** token1.decimals).toString())\n      } else if (Number(amount) === 0) {\n        setToken1Amount('')\n      }\n    }\n  }\n\n  function getPairPrice() {\n    if (token1.id && token2.id && pairs.length) {\n      if (isFirstProvider && token1Amount && token2Amount) {\n        return token2Amount / token1Amount\n      }\n      let pair = pairs.find((p) => p.token1 === token1.id && p.token2 === token2.id)\n      if (pair) {\n        return pair.reserve1 ? new BigNumber(pair.reserve2).div(10 ** token2.decimals).div(pair.reserve1).times(10 ** token1.decimals) : 0\n      }\n      pair = pairs.find((p) => p.token1 === token2.id && p.token2 === token1.id)\n      if (pair) {\n        return pair.reserve2 ? new BigNumber(pair.reserve1).div(10 ** token1.decimals).div(pair.reserve2).times(10 ** token2.decimals) : 0\n      }\n    }\n\n    return 0\n  }\n\n  function getShareOfPool() {\n    if (isFirstProvider) {\n      return '100%'\n    } else {\n      const pair = getPairByToken()\n      const amountProduct = new BigNumber(token1Amount || 0).times(10 ** token1.decimals).times(token2Amount || 0).times(10 ** token2.decimals)\n\n      if (pair) {\n        return `${amountProduct.times(100).div(new BigNumber(pair.reserve1).times(pair.reserve2).plus(amountProduct)).toFixed(2)}%`\n      }\n      return `0%`\n    }\n  }\n\n  function onNavigateToPool() {\n    history.goBack()\n  }\n\n  async function onAdd() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (token1Amount <= 0 || token2Amount <= 0) {\n      Alert.error('Amount should be greater than 0')\n      return\n    }\n    if (token1.id && token1.id === token2.id) {\n      Alert.error('Input should be different')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: token1.id\n          },\n          {\n            type: 'Long',\n            value: token2.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const addResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'add_liquidity',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (addResult.transaction) {\n          setBalanceChange(balanceChange + 1)\n          setToken1Amount('')\n          setToken2Amount('')\n          onNavigateToPool()\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${addResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"add-liquidity-wrapper\">\n      <div className=\"al-header\">Add Liquidity\n        <div className=\"back-icon\" onClick={() => onNavigateToPool()}></div>\n      </div>\n      <div className=\"al-wrapper\">\n        {\n          isValidPair && isFirstProvider ? (\n            <div className=\"first-provider-hint\">\n              <div><strong>You are the first liquidity provider.</strong><br /><br />The ratio of tokens you add will set the price of this pool.</div>\n            </div>\n          ) : null\n        }\n        <TokenInput\n          balanceChange={balanceChange}\n          tokens={swapTokens}\n          value={token1Amount}\n          defaultToken={swapTokens.length && swapTokens.find((st) => st.name === 'pDAI')}\n          onTokenChange={(token) => onChangeToken1(token)}\n          onAmountChange={(amount) => onToken1AmountChange(amount)} />\n        <div className=\"icon-plus\"></div>\n        <TokenInput\n          balanceChange={balanceChange}\n          tokens={swapTokens}\n          value={token2Amount}\n          defaultToken={swapTokens.length && swapTokens.find((st) => st.name === 'UNX')}\n          onTokenChange={(token) => onChangeToken2(token)}\n          onAmountChange={(amount) => onToken2AmountChange(amount)} />\n        {\n          isValidPair && showPriceInfo ? (\n            <div className=\"al-price-wrapper\">\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{getPairPrice().toFixed(4)}</div>\n                <div className=\"price-item-label\">{token2.name} per {token1.name}</div>\n              </div>\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{(getPairPrice() ? 1 / getPairPrice() : 0).toFixed(4)}</div>\n                <div className=\"price-item-label\">{token1.name} per {token2.name}</div>\n              </div>\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{getShareOfPool()}</div>\n                <div className=\"price-item-label\">Share of Pool</div>\n              </div>\n            </div>\n          ) : null\n        }\n        <div className=\"al-add-btn\" onClick={() => onAdd()}>Add</div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddLiquidity\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { utils } from 'ontology-ts-sdk'\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport Slider from 'rc-slider'\nimport { readBigNumberUint128 } from '../../../utils/token'\nimport { useFetchPairs } from '../../../hooks/usePair';\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\nimport 'rc-slider/assets/index.css'\nimport './index.css'\n\nconst { StringReader, reverseHex } = utils\n\nconst RemoveLiquidity = () => {\n  const [liquidityBalance, setLiquidityBalance] = useState(0)\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState(0)\n  const [token2Amount, setToken2Amount] = useState(0)\n  const [pair, setPair] = useState({})\n  const [amount, setAmount] = useState(0)\n  const [showPrice, setShowPrice] = useState(false)\n  const { account, slippage, tokens, pairs, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n  const location = useLocation()\n  const pairId = location.pathname.match(/\\/([^/]+)$/)[1]\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (account && pairs.length && pairId) {\n      getLiquidityBalanceByPairId(pairId).then((resp) => {\n        setLiquidityBalance(resp)\n      })\n    }\n  }, [account, pairs, SWAP_ADDRESS])\n\n  useEffect(() => {\n    if (tokens.length && pairs.length && pairId) {\n      const pair = pairs.find((p) => `${p.id}` === pairId)\n      setPair(pair)\n      setToken1(tokens.find((t) => t.id === pair.token1))\n      setToken2(tokens.find((t) => t.id === pair.token2))\n      setShowPrice(true)\n    }\n  }, [pairs, tokens])\n\n  useEffect(() => {\n    if (pair && token1.id && token2.id && pairId && liquidityBalance) {\n      const shareOfPool = new BigNumber(liquidityBalance).div(pair.lp)\n      const token1Amount = shareOfPool.times(pair.reserve1).div(10 ** token1.decimals)\n      const token2Amount = shareOfPool.times(pair.reserve2).div(10 ** token2.decimals)\n\n      setToken1Amount(new BigNumber(amount).div(100).times(token1Amount).toFixed(token1.decimals))\n      setToken2Amount(new BigNumber(amount).div(100).times(token2Amount).toFixed(token2.decimals))\n    }\n  }, [amount, pair, token1, token2])\n\n  function getLiquidityBalanceByPairId(id) {\n    if (SWAP_ADDRESS) {\n      return client.api.smartContract.invokeWasmRead({\n        scriptHash: SWAP_ADDRESS,\n        operation: 'balanceOf',\n        args: [\n          {\n            type: 'Long',\n            value: id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n      }).then((resp) => {\n        const strReader = new StringReader(resp)\n        const balance = readBigNumberUint128(strReader)\n        \n        return balance\n      })\n    }\n  }\n\n  function getPairPrice() {\n    return new BigNumber(pair.reserve2).div(10 ** token2.decimals).div(pair.reserve1).times(10 ** token1.decimals).toString()\n  }\n\n  function onNavigateToPool() {\n    history.goBack()\n  }\n\n  async function onRemove() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: token1.id\n          },\n          {\n            type: 'Long',\n            value: token2.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(liquidityBalance).times(amount / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(10 ** token1.decimals).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(10 ** token2.decimals).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n\n        const addResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'remove_liquidity',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (addResult.transaction) {\n          onNavigateToPool()\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${addResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"remove-liquidity-wrapper\">\n      <div className=\"rl-header\">Remove Liquidity\n        <div className=\"back-icon\" onClick={() => onNavigateToPool()}></div>\n      </div>\n      <div className=\"rl-wrapper\">\n        <div className=\"rl-amount\">\n          <div className=\"rl-amount-label\">Amount<span>{amount}%</span></div>\n          <Slider value={amount} onChange={(e) => setAmount(e)} />\n          <div className=\"quick-items\">\n            <div className=\"quick-item\" onClick={() => setAmount(25)}>25%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(50)}>50%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(75)}>75%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(100)}>Max</div>\n          </div>\n        </div>\n        <div className=\"icon-arrow-down\" />\n        <div className=\"rl-receive-wrapper\">\n          <div className={`receive-token-item icon-${token1.name}`}>\n            {token1.name}\n            <span>{token1Amount}</span>\n          </div>\n          <div className={`receive-token-item icon-${token2.name}`}>\n            {token2.name}\n            <span>{token2Amount}</span>\n          </div>\n        </div>\n        {\n          showPrice ? (\n            <div className=\"rl-price-wrapper\">\n              <div className=\"price-wrapper-lable\">Price</div>\n              <div className=\"price\">1 {token1.name} = {getPairPrice()} {token2.name}</div>\n              <div className=\"price-reverse\">1 {token2.name} = {new BigNumber(1).div(getPairPrice()).toString()} {token1.name}</div>\n            </div>\n          ) : null\n        }\n        { amount ? <div className=\"rl-remove-btn\" onClick={() => onRemove()}>Remove</div> : <div className=\"rl-remove-btn disabled\">Remove</div> }\n      </div>\n    </div>\n  )\n}\n\nexport default RemoveLiquidity","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport Tooltip from 'rc-tooltip'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { readBigNumberUint128, getTokenIconDom } from '../../utils/token'\n\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Staking = () => {\n  const [showClosedEntry, setShowClosedEntry] = useState(false)\n  const [showClosed, setShowClosed] = useState(false)\n  const { account, tokens, stakingTokens, STAKING_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    stakingTokens: state.staking.tokens,\n    STAKING_ADDRESS: state.gov.poolStat.pools.staking.address\n  }))\n  const dispatch = useDispatch()\n  const setStakingTokens = useCallback((tokens) => dispatch({ type: 'SET_STAKING_TOKENS', tokens }), [])\n  const history = useHistory()\n  const Alert = useAlert()\n\n  useEffect(() => {\n    getStakingTokenBalance()\n    let interval = setInterval(() => getStakingTokenBalance, 3000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokens, STAKING_ADDRESS])\n\n  useEffect(() => {\n    if (stakingTokens.filter((st) => !st.originWeight).length) {\n      setShowClosedEntry(true)\n    } else {\n      setShowClosedEntry(false)\n    }\n  }, [stakingTokens])\n\n  async function getStakingTokenBalance() {\n    if (tokens.length && STAKING_ADDRESS) {\n      try {\n        const statStr = await client.api.smartContract.invokeWasmRead({\n          scriptHash: STAKING_ADDRESS,\n          operation: 'stat',\n          args: []\n        })\n        const parsedTokens = []\n        const strReader = new StringReader(statStr)\n        const tokenCount = strReader.readNextLen()\n        for (let i = 0; i < tokenCount; i++) {\n          const token = {}\n          token.id = strReader.readUint128()\n          const tempToken = tokens.find((t) => t.id === token.id)\n          token.weight = strReader.readUint128()\n          token.balance = readBigNumberUint128(strReader)\n\n          parsedTokens.push(Object.assign(tempToken, token))\n        }\n\n        const totalWeight = parsedTokens.filter((t) => t.balance).reduce((a, b) => a + b.weight, 0)\n        const filteredTokens = parsedTokens.map((t) => {\n          return {\n            ...t,\n            originWeight: t.weight,\n            weight: t.balance ? (t.weight / totalWeight) : 0\n          }\n        })\n\n        setStakingTokens(filteredTokens)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  function onSelectToken(token) {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    history.push(`/staking/${token.id}`)\n  }\n\n  function getTip(token) {\n    return `${token.name} is the hidden receipt for WING ${token.name.replace('f', '')} suppliers`\n  }\n\n  function generateStakingPool() {\n    if (stakingTokens.length) {\n      const openStakingTokens = stakingTokens.filter((t) => !!t.originWeight)\n      const closedStakingTokens = stakingTokens.filter((t) => !t.originWeight)\n\n      return (showClosed ? closedStakingTokens : openStakingTokens).map((token) => {\n        return (\n          <div className={`pool-list-item ${!showClosed ? '' : 'pool-list-item-disabled'}`} key={token.name}>\n            <div className=\"item-detail\">\n              <div className=\"item-detail-wrapper\">\n                { token.ty === 3 && <div className=\"corner-badge\">10X</div> }\n                <div className=\"staking-token\">\n                  {\n                    token.ty === 3 ? (\n                      <div className=\"staking-text\">Deposit\n                        {getTokenIconDom(token, 'stake-lp-token')}\n                      </div>\n                    ) : (\n                      <div className={`staking-text icon-${token.name}`}>Deposit</div>\n                    )\n                  }\n                  {\n                    token.name.startsWith('f') ? (\n                      <Tooltip placement=\"top\" overlay={getTip(token)}>\n                        <div className=\"staking-token-name\">{token.name}</div>\n                      </Tooltip>\n                    ) : <div className=\"staking-token-name\">{token.name}</div>\n                  }\n                </div>\n                <div className=\"earn-line\">Earn<span>UNX</span></div>\n                <div className=\"total-staking\">Total Staking<span>{new BigNumber(token.balance || 0).div(10 ** token.decimals).toString()}</span></div>\n                <div className=\"select-btn\" onClick={() => onSelectToken(token)}>{ showClosed ? 'Unstake' : 'Stake' }</div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    }\n  }\n\n  return (\n    <div className=\"stake-container\">\n      <div className=\"stake-pool\">\n        { !stakingTokens.length ? <div className=\"title\">Loading...</div> : null }\n        {\n          showClosed ? (\n            <div className=\"unstake-pool-title\">\n              <div className=\"back-icon\" onClick={() => setShowClosed(false)}></div>\n              Unstake from Closed Pool\n            </div>\n          ) : null\n        }\n        <div className=\"pool-list\">\n          {generateStakingPool()}\n        </div>\n        { showClosedEntry ? <div className=\"closed-pool-entrance\" onClick={() => setShowClosed(true)}>Unstake from Closed Pool</div> : null }\n      </div>\n    </div>\n  )\n}\n\nexport default Staking","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport Tooltip from 'rc-tooltip';\nimport Input from '../../../components/input'\nimport { readBigNumberUint128, getTokenBalance, getTokenIconDom } from '../../../utils/token'\nimport { GOVERNANCE_ADDRESS, TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\n\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst StakingDetail = (props) => {\n  const [stakeToken, setStakeToken] = useState({})\n  const [tokenBalance, setTokenBalance] = useState('-')\n  const [tokenWeight, setTokenWeight] = useState(1)\n  const [amount, setAmount] = useState('')\n  const [myStake, setMyStake] = useState({})\n  const [stakeType, setStakeType] = useState('stake')\n  const [claimableWing, setClaimableWing] = useState(0)\n  const [showStakingModal, setShowStakingModal] = useState(false)\n  const { account, tokens, stakingTokens, STAKING_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    stakingTokens: state.staking.tokens,\n    STAKING_ADDRESS: state.gov.poolStat.pools.staking.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const Alert = useAlert()\n  const location = useLocation()\n  const history = useHistory()\n  const tokenId = location.pathname.match(/\\/([^/]+)$/)[1]\n\n  useEffect(() => {\n    if (stakingTokens.length) {\n      setTokenWeight(stakingTokens.find((t) => `${t.id}` === tokenId).originWeight)\n    }\n  }, [stakingTokens])\n\n  useEffect(() => {\n    if (account && tokens.length) {\n      const sToken = tokens.find((t) => `${t.id}` === tokenId)\n\n      setStakeToken(sToken)\n      getTokenBalance(account, sToken, setTokenBalance)\n    }\n  }, [tokens, account])\n\n\n  useEffect(() => {\n    const getClaimableWing = async () => {\n      if (account && stakeToken.ty === 2) {\n        try {\n          const resp = await client.api.smartContract.invokeWasmRead({\n            scriptHash: GOVERNANCE_ADDRESS,\n            operation: 'claimable_wing',\n            args: [\n              {\n                type: 'Address',\n                value: account\n              },\n              {\n                type: 'Long',\n                value: stakeToken.id\n              }\n            ]\n          })\n          const strReader = new StringReader(resp)\n\n          setClaimableWing(readBigNumberUint128(strReader))\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getClaimableWing()\n    let interval = setInterval(getClaimableWing, 10000)\n\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, stakeToken])\n\n  useEffect(() => {\n    if (account && stakeToken.id && STAKING_ADDRESS) {\n      getAccountStake()\n      const interval = setInterval(getAccountStake, 10000)\n      return () => {\n        interval && clearInterval(interval)\n      }\n    }\n  }, [stakeToken, account, STAKING_ADDRESS])\n\n  useEffect(() => {\n    if (!account) {\n      setMyStake({})\n    }\n  }, [account])\n\n  function getAccountStakeByTokenId(id) {\n    return client.api.smartContract.invokeWasmRead({\n      scriptHash: STAKING_ADDRESS,\n      operation: 'account_stake_info',\n      args: [\n        {\n          type: 'Address',\n          value: account\n        },\n        {\n          type: 'Long',\n          value: id\n        }\n      ]\n    }).then((stakeStr) => {\n      const strReader = new StringReader(stakeStr)\n      return {\n        id,\n        balance: new BigNumber(readBigNumberUint128(strReader) || 0).div(10 ** (stakeToken.decimals || 0)).toString(),\n        interest: readBigNumberUint128(strReader)\n      }\n    })\n  }\n\n  function getAccountStake() {\n    getAccountStakeByTokenId(tokenId)\n    .then((stake) => {\n      setMyStake(stake)\n    })\n    .catch((e) => {\n      console.log('get account stakes', e)\n    })\n  }\n\n  function handleStakeClick(action) {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    setStakeType(action)\n    setShowStakingModal(true)\n  }\n\n  async function onStake() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (stakeToken.id && STAKING_ADDRESS) {\n      if (amount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      if (stakeType === 'unstake' && new BigNumber(amount).gt(new BigNumber(myStake.balance))) {\n        Alert.error('Amount should be less than your balance')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: stakeToken.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(amount).times(new BigNumber(10 ** stakeToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const param = {\n          scriptHash: STAKING_ADDRESS,\n          operation: stakeType,\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        }\n\n        const stakeResult = await client.api.smartContract.invokeWasm(param)\n\n        if (stakeResult.transaction) {\n          setShowStakingModal(false)\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${stakeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setShowStakingModal(false)\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onHarvest() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (STAKING_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: stakeToken.id\n          }\n        ]\n        const param = {\n          scriptHash: STAKING_ADDRESS,\n          operation: 'harvest',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        }\n\n        const harvestResult = await client.api.smartContract.invokeWasm(param)\n\n        if (harvestResult.transaction) {\n          setShowStakingModal(false)\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${harvestResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function onNavigateToStaking() {\n    history.goBack()\n  }\n\n  const maxInput = () => {\n    if (stakeType === 'stake' && !isNaN(tokenBalance)) {\n      setAmount(tokenBalance)\n    } else if (stakeType === 'unstake' && !isNaN(myStake.balance)) {\n      setAmount(myStake.balance)\n    }\n  }\n\n  return (\n    <div className=\"stake-container\">\n      <div className=\"stake-title\">\n        <div className=\"back-icon\" onClick={() => onNavigateToStaking()} />\n        Earn <span className=\"icon-UNX\">UNX</span> by\n        {getTokenIconDom(stakeToken, 'inline-token-wrapper')}\n        {stakeToken.name || ''}\n      </div>\n      <div className=\"stake-token-detail\">\n        <div className=\"stake-token-amount\">\n          {getTokenIconDom(stakeToken, 'stake-token-wrapper')}\n          <div className=\"stake-token-amount-detail\">\n            <div className=\"stake-token-amount-label\">Current Staked</div>\n            <div className=\"stake-token-amount-info\">{myStake.balance} {stakeToken.name}</div>\n          </div>\n        </div>\n        <div className=\"stake-token-actions\">\n          { tokenWeight ? <div className=\"stake-token-action\" onClick={() => handleStakeClick('stake')}>Stake</div> : null }\n          <div className=\"stake-token-action\" onClick={() => handleStakeClick('unstake')}>Unstake</div>\n        </div>\n      </div>\n      <div className=\"harvest-token-detail\">\n        <div className=\"harvest-token-amount icon-UNX\">\n          <div className=\"harvest-token-amount-label\">Rewards Available</div>\n          <div className=\"harvest-token-amount-info\">{new BigNumber(myStake.interest || 0).div(10 ** 9).toString()} UNX</div>\n        </div>\n        <div className=\"harvest-token-actions\">\n          <div className=\"harvest-token-action\" onClick={() => onHarvest() }>Harvest</div>\n        </div>\n      </div>\n      {\n        stakeToken.ty === 2 ? (\n          <div className=\"claimable-wing-detail\">\n            <div className=\"claimable-wing-amount icon-WING\">{new BigNumber(claimableWing || 0).div(10 ** 9).toString()}\n              <div className=\"claimable-wing-label\">WING Earned\n                <Tooltip placement=\"top\" overlay=\"WING earned by ftoken will be transferred to your account when you stake or unstake\">\n                  <span>?</span>\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      { showStakingModal ? (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper\">\n            <div className=\"close-btn\" onClick={() => { setShowStakingModal(false); setAmount(''); }}></div>\n            <div className=\"stake-wrapper\">\n              <div className={`icon-${stakeToken.name} token-placeholder`}></div>\n              <div className=\"form-item\">\n                <div className=\"input-label\">Amount\n                  {\n                    stakeType === 'stake' ? (\n                      <span className=\"hint\">Balance: {tokenBalance}</span>\n                    ) : (\n                      <span className=\"hint\">Staked: {myStake.balance}</span>\n                    )\n                  }\n                </div>\n                <div className=\"input-wrapper\">\n                  <Input placeholder=\"0.0\" value={amount} decimals={stakeToken.decimals || 0} onChange={(amount) => setAmount(amount)} />\n                  <div className=\"input-max-btn\" onClick={() => maxInput()}>MAX</div>\n                </div>\n              </div>\n              <div className=\"stake-btn\" onClick={() => onStake()}>{ stakeType === 'stake' ? 'Stake' : 'Unstake'}</div>\n            </div>\n          </div>\n        </div>\n      ) : null }\n    </div>\n  )\n}\n\nexport default StakingDetail","import React from 'react'\nimport './index.css'\n\nconst Token = (props) => {\n  return (\n    <div className=\"coming-soon-placeholder\"></div>\n  )\n}\n\nexport default Token","import React from 'react'\nimport './index.css'\n\nconst Option = (props) => {\n  return (\n    <div className=\"coming-soon-placeholder\"></div>\n  )\n}\n\nexport default Option","import React from 'react'\nimport './index.css'\n\nconst Trade = (props) => {\n  return (\n    <div className=\"coming-soon-placeholder\"></div>\n  )\n}\n\nexport default Trade","import axios from 'axios'\nimport { EVENT_API_BASE_URL } from '../config'\n\nconst instance = axios.create({\n  baseURL: EVENT_API_BASE_URL,\n  timeout: 30000,\n  headers: { 'Content-Type': 'application/json' }\n})\n\ninstance.interceptors.response.use(\n  (response) => {\n    const res = response.data;\n    return res\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\nexport default instance","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport Tooltip from 'rc-tooltip';\nimport TokenInput from '../../components/tokenInput';\nimport Input from '../../components/input'\nimport EventRequest from '../../utils/eventRequest'\nimport { readBigNumberUint128 } from '../../utils/token'\nimport { DAI_PRICE, SYNTH_PRICE_DECIMALS, ASSET_STATUS, LEVERAGE_TYPE, TRANSACTION_FEE_RATE } from '../../utils/constants'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport './index.css'\n\nconst { StringReader, reverseHex } = utils\n\nconst Synth = () => {\n  const [synthType, setSynthType] = useState('mint')\n  const [mintAsset, setMintAsset] = useState({})\n  const [mintAmount, setMintAmount] = useState('')\n  const [unxNeededForMint, setUnxNeededForMint] = useState('')\n  const [burnAsset, setBurnAsset] = useState({})\n  const [burnAmount, setBurnAmount] = useState('')\n  const [unxGetForBurn, setUnxGetForBurn] = useState('')\n  const [exchangeAsset, setExchangeAsset] = useState({})\n  const [exchangeToAsset, setExchangeToAsset] = useState({})\n  const [exchangeAmount, setExchangeAmount] = useState('')\n  const [exchangeToAssets, setExchangeToAssets] = useState([])\n  const [exchangeToAmount, setExchangeToAmount] = useState('')\n  const [unxToken, setUnxToken] = useState({})\n  const [unxPrice, setUnxPrice] = useState(0)\n  const [showMintModal, setShowMintModal] = useState(false)\n  const [showBurnModal, setShowBurnModal] = useState(false)\n  const [showExchangeModal, setShowExchangeModal] = useState(false)\n  const [availableReward, setAvailableReward] = useState(0)\n  const [marketStat, setMarketStat] = useState({})\n  const [stat, setStat] = useState({})\n  const { account, tokens, pairs, poolStat, synthPoolWeightRatio, SYNTH_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    poolStat: state.gov.poolStat,\n    synthPoolWeightRatio: state.gov.poolStat.pools.synth.ratio,\n    SYNTH_ADDRESS: state.gov.poolStat.pools.synth.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const Alert = useAlert()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (tokens.length) {\n      setUnxToken(tokens.find((t) => t.name === 'UNX'))\n    }\n  }, [tokens])\n\n  useEffect(() => {\n    if (tokens.length && pairs.length && (!unxPrice || unxPrice === '0') && marketStat.marketAssetValue) {\n      const unxTk = tokens.find((t) => t.name === 'UNX')\n      if (!marketStat.marketAssetBalances.length) {\n        const daiTk = tokens.find((t) => t.name === 'pDAI')\n        const pair = pairs.find((p) => (p.token1 === unxTk.id && p.token2 === daiTk.id) || (p.token2 === unxTk.id && p.token1 === daiTk.id))\n\n        if (pair) {\n          if (pair.token1 === unxTk.id) {\n            setUnxPrice(new BigNumber(pair.reserve2).div(10 ** daiTk.decimals).div(pair.reserve1).times(10 ** unxTk.decimals).times(DAI_PRICE).times(SYNTH_PRICE_DECIMALS).toString())\n          } else {\n            setUnxPrice(new BigNumber(pair.reserve1).div(10 ** daiTk.decimals).div(pair.reserve2).times(10 ** unxTk.decimals).times(DAI_PRICE).times(SYNTH_PRICE_DECIMALS).toString())\n          }\n        }\n      } else {\n        setUnxPrice(new BigNumber(marketStat.marketAssetValue).div(marketStat.marketTokenBalance).times(10 ** unxTk.decimals).toString())\n      }\n\n      setUnxToken(unxTk)\n    }\n  }, [pairs, tokens, marketStat])\n\n  useEffect(() => {\n    async function getAvailableReward() {\n      if (account && unxToken.id && SYNTH_ADDRESS) {\n        try {\n          const claimStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'claim_unx',\n            args: [\n              {\n                type: 'Long',\n                value: unxToken.id\n              },\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n\n          const strReader = new StringReader(claimStr)\n          const availableReward = strReader.readUint128()\n\n          setAvailableReward(new BigNumber(availableReward).toString())\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getAvailableReward()\n    const interval = setInterval(getAvailableReward, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, unxToken, SYNTH_ADDRESS])\n\n  useEffect(() => {\n    async function getStat() {\n      if (tokens.length && SYNTH_ADDRESS) {\n        try {\n          const statStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'stat',\n            args: []\n          })\n          const strReader = new StringReader(statStr)\n  \n          reverseHex(strReader.read(20)) // govAddress\n          strReader.readUint128() // daiTokenId\n          strReader.readUint128() // unxTokenId\n          strReader.readUint128() // pairId\n\n          const liveAssetCount = strReader.readNextLen()\n          const liveAssets = []\n          for (let i = 0; i < liveAssetCount; i++) {\n            const asset = {}\n            asset.assetId = strReader.readUint128()\n            asset.tokenId = strReader.readUint128()\n\n            const token = tokens.find((t) => t.id === asset.tokenId)\n            asset.tokenName = token.name\n            asset.decimals = token.decimals\n            asset.leverageType = strReader.readNextByte()\n            asset.times = strReader.readUint128()\n            asset.entryPrice = readBigNumberUint128(strReader)\n            asset.lowLimit = readBigNumberUint128(strReader)\n            asset.highLimit = readBigNumberUint128(strReader)\n            asset.status = strReader.readNextByte()\n            asset.frozenBy = reverseHex(strReader.read(20))\n            asset.frozenTime = strReader.readUint64()\n\n            if (asset.tokenName.startsWith('p')) {\n              asset.tokenName = asset.tokenName.replace('p', '')\n            }\n            asset.tokenName = `${asset.leverageType === LEVERAGE_TYPE.Negative ? 'i' : 's'}${asset.tokenName}`\n            asset.id = asset.assetId\n            asset.value = asset.assetId\n            asset.label = `${asset.tokenName}${asset.times !== 1 ? ` (${asset.times}x)` : ''}`\n            liveAssets.push(asset)\n          }\n\n          const frozenAssetCount = strReader.readNextLen()\n          const frozenAssets = []\n          for (let i = 0; i < frozenAssetCount; i++) {\n            const asset = {}\n            asset.assetId = strReader.readUint128()\n            asset.tokenId = strReader.readUint128()\n\n            const token = tokens.find((t) => t.id === asset.tokenId)\n            asset.tokenName = token.name\n            asset.decimals = token.decimals\n            asset.leverageType = strReader.readNextByte()\n            asset.times = strReader.readUint128()\n            asset.entryPrice = readBigNumberUint128(strReader)\n            asset.lowLimit = readBigNumberUint128(strReader)\n            asset.highLimit = readBigNumberUint128(strReader)\n            asset.status = strReader.readNextByte()\n            asset.frozenBy = reverseHex(strReader.read(20))\n            asset.frozenTime = strReader.readUint64()\n\n            if (asset.tokenName.startsWith('p')) {\n              asset.tokenName = asset.tokenName.replace('p', '')\n            }\n            asset.tokenName = `${asset.leverageType === LEVERAGE_TYPE.Negative ? 'i' : 's'}${asset.tokenName}`\n            asset.label = `${asset.tokenName}${asset.times !== 1 ? ` (${asset.times}x)` : ''}`\n  \n            frozenAssets.push(asset)\n          }\n\n          const tokenPriceCount = strReader.readNextLen()\n          const tokenPrices = []\n          for (let i = 0; i < tokenPriceCount; i++) {\n            const tokenPrice = {}\n            tokenPrice.tokenId = strReader.readUint128()\n            tokenPrice.price = readBigNumberUint128(strReader)\n  \n            tokenPrices.push(tokenPrice)\n          }\n\n          for (let liveAsset of liveAssets) {\n            const currentPrice = tokenPrices.find((tp) => tp.tokenId === liveAsset.tokenId).price\n            let tokenPrice = currentPrice\n\n            if (liveAsset.lowLimit && new BigNumber(currentPrice).lte(new BigNumber(liveAsset.lowLimit))) {\n              tokenPrice = liveAsset.lowLimit\n            } else if (liveAsset.highLimit && new BigNumber(currentPrice).gte(new BigNumber(liveAsset.highLimit))) {\n              tokenPrice = liveAsset.highLimit\n            }\n\n            liveAsset.tokenPrice = tokenPrice\n\n            if (liveAsset.leverageType === LEVERAGE_TYPE.Positive) {\n              liveAsset.price = new BigNumber(liveAsset.entryPrice).plus(new BigNumber(tokenPrice).times(liveAsset.times)).minus(new BigNumber(liveAsset.entryPrice).times(liveAsset.times)).toString()\n            } else {\n              liveAsset.price = new BigNumber(liveAsset.entryPrice).plus(new BigNumber(liveAsset.entryPrice).times(liveAsset.times)).minus(new BigNumber(tokenPrice).times(liveAsset.times)).toString()\n            }\n\n            if ((liveAsset.lowLimit && new BigNumber(liveAsset.tokenPrice).lte(new BigNumber(liveAsset.lowLimit))) || (liveAsset.highLimit && new BigNumber(liveAsset.tokenPrice).gte(new BigNumber(liveAsset.highLimit)))) {\n              liveAsset.unprocessedFrozen = true\n            }\n          }\n\n          for (let frozenAsset of frozenAssets) {\n            frozenAsset.tokenPrice = tokenPrices.find((tp) => tp.tokenId === frozenAsset.tokenId).price\n            if (frozenAsset.status === ASSET_STATUS.HighLimit) {\n              frozenAsset.tokenPrice = frozenAsset.highLimit\n            } else if (frozenAsset.status === ASSET_STATUS.LowLimit) {\n              frozenAsset.tokenPrice = frozenAsset.lowLimit\n            }\n          }\n\n          setStat({\n            liveAssets,\n            frozenAssets,\n            tokenPrices\n          })\n        } catch (e) {\n          console.log('get synth stat', e)\n        }\n      }\n    }\n\n    getStat()\n    const interval = setInterval(getStat, 5000)\n\n    return () => clearInterval(interval)\n  }, [tokens, SYNTH_ADDRESS])\n\n  useEffect(() => {\n    async function getMarketStat() {\n      if (account && unxToken.id && SYNTH_ADDRESS) {\n        try {\n          const statStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'market_stat',\n            args: [\n              {\n                type: 'Long',\n                value: unxToken.id\n              },\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n          const strReader = new StringReader(statStr)\n\n          const marketAssetBalanceCount = strReader.readNextLen()\n          const marketAssetBalances = []\n          let marketAssetValueSum = new BigNumber(0)\n          for (let i = 0; i < marketAssetBalanceCount; i++) {\n            const assetBalance = {}\n            assetBalance.assetId = strReader.readUint128()\n            assetBalance.balance = readBigNumberUint128(strReader)\n            assetBalance.assetPrice = readBigNumberUint128(strReader)\n\n            const asset = stat.liveAssets ? [...stat.liveAssets, ...stat.frozenAssets].find((la) => la.assetId === assetBalance.assetId) : null\n\n            if (asset) {\n              marketAssetValueSum = marketAssetValueSum.plus(new BigNumber(assetBalance.assetPrice).times(assetBalance.balance).div(10 ** asset.decimals))\n            }\n  \n            marketAssetBalances.push(assetBalance)\n          }\n\n          const accountAssetBalanceCount = strReader.readNextLen()\n          const accountAssetBalances = []\n          let accountAssetValueSum = new BigNumber(0)\n          for (let i = 0; i < accountAssetBalanceCount; i++) {\n            const assetBalance = {}\n            assetBalance.assetId = strReader.readUint128()\n            assetBalance.balance = readBigNumberUint128(strReader)\n            assetBalance.assetPrice = readBigNumberUint128(strReader)\n\n            const asset = stat.liveAssets ? [...stat.liveAssets, ...stat.frozenAssets].find((la) => la.assetId === assetBalance.assetId) : null\n\n            if (asset) {\n              accountAssetValueSum = accountAssetValueSum.plus(new BigNumber(assetBalance.assetPrice).times(assetBalance.balance).div(10 ** asset.decimals))\n            }\n  \n            accountAssetBalances.push(assetBalance)\n          }\n\n          const marketStakeValue = readBigNumberUint128(strReader)\n          const accountStakeValue = readBigNumberUint128(strReader)\n          const marketTokenBalance = readBigNumberUint128(strReader)\n          const accountClaimedValue = readBigNumberUint128(strReader)\n          const accountWithdrawedStakeValue = readBigNumberUint128(strReader)\n          const transferable = (marketAssetValueSum.toString() !== '0') ? accountAssetValueSum.div(marketAssetValueSum).times(marketTokenBalance).toString() : '0'\n\n          const parsedMarketStat = {\n            marketAssetBalances,\n            accountAssetBalances,\n            marketAssetValue: marketAssetValueSum.toString(),\n            accountAssetValue: accountAssetValueSum.toString(),\n            transferable,\n            marketStakeValue,\n            accountStakeValue,\n            marketTokenBalance,\n            accountClaimedValue,\n            accountWithdrawedStakeValue\n          }\n\n          setMarketStat(parsedMarketStat)\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getMarketStat()\n    const interval = setInterval(getMarketStat, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, unxToken, stat.liveAssets, SYNTH_ADDRESS])\n\n  const handleMintAmountChange = (amount) => {\n    setMintAmount(amount)\n    if (unxPrice && amount) {\n      setUnxNeededForMint(new BigNumber(amount).times(mintAsset.price).div(unxPrice).div(1 - TRANSACTION_FEE_RATE).toFixed(unxToken.decimals))\n    } else if (Number(amount) === 0) {\n      setUnxNeededForMint('')\n    }\n  }\n\n  const handleUnxNeededForMintChange = (amount) => {\n    setUnxNeededForMint(amount)\n    if (unxPrice && amount) {\n      setMintAmount(new BigNumber(amount).times(unxPrice).div(mintAsset.price).times(1 - TRANSACTION_FEE_RATE).toFixed(mintAsset.decimals))\n    } else if (Number(amount) === 0) {\n      setMintAmount('')\n    }\n  }\n\n  const handleBurnAmountChange = (amount) => {\n    setBurnAmount(amount)\n    if (unxPrice && amount) {\n      setUnxGetForBurn(new BigNumber(amount).times(burnAsset.assetPrice).div(unxPrice).times(1 - TRANSACTION_FEE_RATE).toFixed(unxToken.decimals))\n    } else if (Number(amount) === 0) {\n      setUnxGetForBurn('')\n    }\n  }\n\n  const handleUnxGetForBurnChange = (amount) => {\n    setUnxGetForBurn(amount)\n    if (unxPrice && amount) {\n      setBurnAmount(new BigNumber(amount).times(unxPrice).div(burnAsset.assetPrice).div(1 - TRANSACTION_FEE_RATE).toFixed(burnAsset.decimals))\n    } else if (Number(amount) === 0) {\n      setBurnAmount('')\n    }\n  }\n\n  const handleExchangeAmountChange = (amount) => {\n    setExchangeAmount(amount)\n    if (amount) {\n      setExchangeToAmount(new BigNumber(exchangeAsset.price).div(exchangeToAsset.price).times(amount).times(10 ** exchangeAsset.decimals).div(10 ** exchangeToAsset.decimals).times(1 - TRANSACTION_FEE_RATE).toFixed(exchangeToAsset.decimals))\n    } else if (Number(amount) === 0) {\n      setExchangeToAmount('')\n    }\n  }\n\n  const handleChengeExchangeToAmount = (amount) => {\n    setExchangeToAmount(amount)\n    if (amount) {\n      setExchangeAmount(new BigNumber(amount).times(10 ** exchangeToAsset.decimals).div(10 ** exchangeAsset.decimals).times(exchangeToAsset.price).div(exchangeAsset.price).div(1 - TRANSACTION_FEE_RATE).toFixed(exchangeAsset.decimals))\n    } else if (Number(amount) === 0) {\n      setExchangeAmount('')\n    }\n  }\n\n  const maxBurnAmount = () => {\n    if (burnAsset) {\n      handleBurnAmountChange(new BigNumber(burnAsset.balance).div(10 ** burnAsset.decimals).toString())\n    }\n  }\n\n  const maxExchangeAmount = () => {\n    if (exchangeAsset) {\n      handleExchangeAmountChange(new BigNumber(exchangeAsset.balance).div(10 ** exchangeAsset.decimals).toString())\n    }\n  }\n\n  const handleChangeExchangeToAsset = (asset) => {\n    setExchangeToAsset(asset)\n    if (exchangeAmount) {\n      setExchangeToAmount(new BigNumber(exchangeAsset.price).div(asset.price).times(exchangeAmount).times(10 ** exchangeAsset.decimals).div(10 ** asset.decimals).times(1 - TRANSACTION_FEE_RATE).toFixed(asset.decimals))\n    } else if (Number(exchangeAmount) === 0) {\n      setExchangeToAmount('')\n    }\n  }\n\n  async function onMint() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && mintAsset.assetId && SYNTH_ADDRESS) {\n      if (mintAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(unxNeededForMint).times(new BigNumber(10 ** unxToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: mintAsset.assetId\n          }\n        ]\n        const mintResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'mint',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (mintResult.transaction) {\n          setShowMintModal(false)\n          setMintAmount('')\n          setUnxNeededForMint('')\n\n          let detail = ''\n\n          EventRequest({\n            method: 'get',\n            url: `${mintResult.transaction}`\n          }).then((resp) => {\n            if (resp.Desc === 'SUCCESS') {\n              try {\n                const eventStates = resp.Result.Notify.find((notify) => notify.States[0] === 'mint').States\n\n                if (eventStates[5] === '0') {\n                  detail = `Your last transaction successfully freezed the ${mintAsset.label} asset, you'll get 1‰ of the redeemed UNX when burnt.`\n                }\n              } catch (e) {}\n\n              setInfoModal('success', mintResult.transaction, detail)\n            }\n          }).catch((e) => {\n            setInfoModal('success', mintResult.transaction)\n          })\n        }\n      } catch (e) {\n        setShowMintModal(false)\n        setMintAmount('')\n        setUnxNeededForMint('')\n        setInfoModal('error')\n      }\n    }\n  }\n\n  async function onBurn() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && burnAsset.assetId && SYNTH_ADDRESS) {\n      if (burnAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: burnAsset.assetId\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(burnAmount).times(new BigNumber(10 ** burnAsset.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const burnResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'burn',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (burnResult.transaction) {\n          setShowBurnModal(false)\n          setBurnAmount('')\n          setUnxGetForBurn('')\n          setInfoModal('success', burnResult.transaction)\n        }\n      } catch (e) {\n        setShowBurnModal(false)\n        setBurnAmount('')\n        setUnxGetForBurn('')\n        setInfoModal('error')\n      }\n    }\n  }\n\n  async function onBurnAll() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const burnAllResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'burn_all_asset',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (burnAllResult.transaction) {\n          setInfoModal('success', burnAllResult.transaction)\n        }\n      } catch (e) {\n        setInfoModal('error')\n      }\n    }\n  }\n\n  async function onExchange() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && exchangeAsset.assetId && SYNTH_ADDRESS) {\n      if (exchangeAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: exchangeAsset.assetId\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(exchangeAmount).times(new BigNumber(10 ** exchangeAsset.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },{\n            type: 'Long',\n            value: exchangeToAsset.assetId\n          }\n        ]\n        const exchangeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'asset_swap',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (exchangeResult.transaction) {\n          setShowExchangeModal(false)\n          setExchangeAmount('')\n          setExchangeToAmount('')\n\n          let detail = ''\n\n          EventRequest({\n            method: 'get',\n            url: `${exchangeResult.transaction}`\n          }).then((resp) => {\n            if (resp.Desc === 'SUCCESS') {\n              try {\n                const eventStates = resp.Result.Notify.find((notify) => notify.States[0] === 'asset_swap').States\n\n                if (eventStates[4] === '0') {\n                  detail = `Your last transaction successfully freezed the ${exchangeAsset.label} asset, you'll get 1‰ of the redeemed UNX when burnt.`\n                }\n              } catch (e) {}\n\n              setInfoModal('success', exchangeResult.transaction, detail)\n            }\n          }).catch((e) => {\n            setInfoModal('success', exchangeResult.transaction)\n          })\n        }\n      } catch (e) {\n        setShowExchangeModal(false)\n        setExchangeAmount('')\n        setExchangeToAmount('')\n        setInfoModal('error')\n      }\n    }\n  }\n\n  async function onClaim() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const claimResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'claim_unx',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (claimResult.transaction) {\n          setInfoModal('success', claimResult.transaction)\n        }\n      } catch (e) {\n        setInfoModal('error')\n      }\n    }\n  }\n\n  const handleFreezeAsset = async (asset) => {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: asset.assetId\n          }\n        ]\n        const freezeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'freeze_asset',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (freezeResult.transaction) {\n          setInfoModal('success', freezeResult.transaction)\n        }\n      } catch (e) {\n        setInfoModal('error')\n      }\n    }\n  }\n\n  const calcEffectiveLeverage = (asset) => {\n    if (asset.leverageType === LEVERAGE_TYPE.Positive) {\n      return new BigNumber(asset.tokenPrice).times(asset.times)\n        .div(new BigNumber(asset.tokenPrice).times(asset.times).plus(asset.entryPrice).minus(new BigNumber(asset.entryPrice).times(asset.times)))\n        .toFixed(2)\n    } else if (asset.leverageType === LEVERAGE_TYPE.Negative) {\n      return new BigNumber(asset.tokenPrice).times(asset.times)\n        .div(new BigNumber(asset.entryPrice).times(asset.times).plus(asset.entryPrice).minus(new BigNumber(asset.tokenPrice).times(asset.times)))\n        .toFixed(2)\n    }\n  }\n\n  const getPriceDetail = (asset) => {\n    let txt = `Entry Price: ${asset.entryPrice}`\n    if (Number(asset.lowLimit)) {\n      txt += ` Low Limit: ${asset.lowLimit}`\n    }\n    if (Number(asset.highLimit)) {\n      txt += ` High Limit: ${asset.highLimit}`\n    }\n    \n    return txt\n  }\n\n  const renderAssetList = () => {\n    if (synthType === 'mint') {\n      if (stat.liveAssets) {\n        return stat.liveAssets.map((la) => {\n          const accountAsset = marketStat.accountAssetBalances ? marketStat.accountAssetBalances.find((ab) => ab.assetId === la.assetId) : null\n          const showPriceDetail = la.times === 1 && la.leverageType === LEVERAGE_TYPE.Negative\n\n          if (accountAsset) {\n            la.holdings = new BigNumber(accountAsset.assetPrice).div(SYNTH_PRICE_DECIMALS).times(accountAsset.balance).div(10 ** la.decimals).toString()\n          }\n\n          la.effectiveLeverage = calcEffectiveLeverage(la)\n\n          return (\n            <div className={`synth-assets-list-item ${la.unprocessedFrozen ? 'unprocessed-frozen' : ''}`} key={la.assetId}>\n              <div className=\"synth-assets-list-item-name\">\n                <div className={`synth-assets-list-item-icon icon-${la.tokenName}`}>\n                  { showPriceDetail ? <Tooltip placement=\"top\" overlay={getPriceDetail(la)}>{la.label}</Tooltip> : `${la.label}` }\n                  {\n                    la.unprocessedFrozen ? (\n                      <Tooltip placement=\"top\" overlay=\"The first one that freezes an asset will get 1‰ of burning fee from all holders\">\n                        <span onClick={() => handleFreezeAsset(la)}></span>\n                      </Tooltip>\n                    ) : null\n                  }\n                </div>\n              </div>\n              <div className=\"synth-assets-list-item-price\">{new BigNumber(la.price).div(SYNTH_PRICE_DECIMALS).toString()}</div>\n              <div className=\"synth-assets-list-item-holding\">{la.holdings || 0}</div>\n              <div className=\"synth-assets-list-item-leverage\">{la.effectiveLeverage}</div>\n              <div className=\"synth-assets-list-item-action\">\n                <div className=\"synth-assets-list-item-action-mint\" onClick={() => { setShowMintModal(true); setMintAsset(la); }}>Mint</div>\n              </div>\n            </div>\n          )\n        })\n      }\n      return null\n    } else {\n      if (marketStat.accountAssetBalances) {\n        const assetList = marketStat.accountAssetBalances.map((ab) => {\n          let asset = stat.liveAssets ? stat.liveAssets.find((la) => la.assetId === ab.assetId) : null\n\n          if (!asset) {\n            asset = stat.frozenAssets ? stat.frozenAssets.find((fa) => fa.assetId === ab.assetId) : null\n\n            if (asset) {\n              asset.isFrozen = true\n            }\n          }\n\n          if (asset) {\n            if (!asset.isFrozen) {\n              if ((asset.lowLimit && new BigNumber(asset.tokenPrice).lte(new BigNumber(asset.lowLimit))) || (asset.highLimit && new BigNumber(asset.tokenPrice).gte(new BigNumber(asset.highLimit)))) {\n                asset.unprocessedFrozen = true\n              }\n            }\n            asset.balance = ab.balance\n            asset.assetPrice = ab.assetPrice\n            asset.effectiveLeverage = calcEffectiveLeverage(asset)\n          }\n          return asset ? (\n            <div className={`synth-assets-list-item ${asset.isFrozen ? 'frozen' : ''} ${asset.unprocessedFrozen ? 'unprocessed-frozen' : ''}`} key={ab.assetId}>\n              <div className=\"synth-assets-list-item-name\">\n                <div className={`synth-assets-list-item-icon icon-${asset.tokenName}`}>\n                  {asset.label}\n                  {\n                    asset.unprocessedFrozen ? (\n                      <Tooltip placement=\"top\" overlay=\"The first one that freezes an asset will get 1‰ of burning fee from all holders\">\n                        <span onClick={() => handleFreezeAsset(asset)}></span>\n                      </Tooltip>\n                    ) : null\n                  }\n                </div>\n              </div>\n              <div className=\"synth-assets-list-item-price\">{new BigNumber(ab.assetPrice).div(SYNTH_PRICE_DECIMALS).toString()}</div>\n              <div className=\"synth-assets-list-item-holding\">{new BigNumber(ab.assetPrice).div(SYNTH_PRICE_DECIMALS).times(ab.balance).div(10 ** asset.decimals).toString()}</div>\n              <div className=\"synth-assets-list-item-leverage\">{asset.effectiveLeverage}</div>\n              <div className=\"synth-assets-list-item-action\">\n                <div className=\"synth-assets-list-item-action-burn\" onClick={() => { setShowBurnModal(true); setBurnAsset(asset); }}>Burn</div>\n                <div className=\"synth-assets-list-item-action-exchange\"\n                  onClick={() => {\n                    setShowExchangeModal(true)\n                    setExchangeAsset(asset)\n                    const toAssets = stat.liveAssets.filter((la) => la.assetId !== asset.assetId)\n                    setExchangeToAssets(toAssets)\n                    setExchangeToAsset(toAssets[0])\n                  }}\n                >Exchange</div>\n              </div>\n            </div>\n          ) : null\n        })\n\n        return assetList\n      }\n    }\n  }\n\n  const setInfoModal = (type, transaction, detail) => {\n    setModal('infoModal', {\n      show: true,\n      type,\n      text: type === 'success' ? 'Transaction Successful' : 'Transaction Failed',\n      detail,\n      extraText: type === 'success' ? 'View Transaction' : '',\n      extraLink: type === 'success' ? `${TRANSACTION_BASE_URL}${transaction}${TRANSACTION_AFTERFIX}` : ''\n    })\n  }\n\n  return (\n    <div className=\"synth-container\">\n      <div className=\"synth-overview-sections\">\n        <div className=\"synth-overview-section\">\n          <div className=\"synth-overview-sub-section\">\n            <p className=\"synth-overview-section-title\">Mint APY</p>\n            <p className=\"synth-overview-detail\">{(marketStat.marketStakeValue && unxToken.id) ? new BigNumber(poolStat.distributionInfo.amount || 0).div(poolStat.distributionInfo.period || 1).times(86400 * 365).times(10 ** unxToken.decimals).times(synthPoolWeightRatio || 0).div(marketStat.marketStakeValue).toFixed(2) : 0}%</p>\n          </div>\n          <div className=\"synth-overview-section-group\">\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Market Balance</p>\n              <p className=\"synth-overview-detail\">{marketStat.marketTokenBalance ? new BigNumber(marketStat.marketTokenBalance).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span></p>\n            </div>\n          </div>\n        </div>\n        <div className=\"synth-overview-section-right\">\n          <div className=\"synth-overview-sub-section\">\n            <p className=\"synth-overview-section-title\">Transferable</p>\n            <p className=\"synth-overview-detail\">{(marketStat.transferable && marketStat.transferable !== '0') ? new BigNumber(marketStat.transferable).plus(availableReward).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span></p>\n          </div>\n          <div className=\"synth-overview-section-group\">\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Staked Available</p>\n              <p className=\"synth-overview-detail\">{(marketStat.transferable && marketStat.transferable !== '0') ? (new BigNumber(marketStat.transferable)).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span>\n                { (marketStat.transferable && marketStat.transferable !== '0') ? <div className=\"synth-overview-action-btn synth-overview-action-btn-burn\" onClick={() => onBurnAll()}>Burn All</div> : null }\n              </p>\n            </div>\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Rewards Available</p>\n              <p className=\"synth-overview-detail\">{unxToken.id ? new BigNumber(availableReward).div(10 ** unxToken.decimals).toString() : 0} <span>UNX</span>\n                { (availableReward && availableReward !== '0') ? <div className=\"synth-overview-action-btn\" onClick={() => onClaim()}>Claim</div> : null }\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mint-burn-wrapper\">\n        <div className=\"mint-burn-main\">\n          <div className=\"synth-type-switch\">\n            <div className={`synth-type-item ${synthType === 'mint' ? 'selected' : ''}`} onClick={() => setSynthType('mint')}>Mint</div>\n            <div className={`synth-type-item ${synthType === 'burn' ? 'selected' : ''}`} onClick={() => setSynthType('burn')}>Burn</div>\n          </div>\n          <div className=\"market-asset-value\">Market Asset Value: &nbsp;&nbsp;<span>${new BigNumber(marketStat.marketAssetValue || 0).div(SYNTH_PRICE_DECIMALS).toFixed(9)}</span></div>\n          <div className=\"synth-assets-panel\">\n            <div className=\"synth-assets-panel-header\">\n              <div className=\"panel-header-item panel-header-item-asset\">Asset</div>\n              <div className=\"panel-header-item\">Price($)</div>\n              <div className=\"panel-header-item\">Holdings($)</div>\n              <div className=\"panel-header-item\">Effective Leverage</div>\n              <div className=\"panel-header-item panel-header-item-action\"></div>\n            </div>\n            <div className=\"synth-assets-list\">\n              {renderAssetList()}\n            </div>\n          </div>\n        </div>\n        {\n          synthType === 'mint' ? (\n            <div className=\"mint-burn-info\">\n              <div className=\"mint-burn-info-title\">Mint Synthetics by staking UNX</div>\n              <div className=\"mint-burn-info-desc\">UNX stakers earn staking rewards once minted.</div>\n              <div className=\"mint-burn-account-info\">\n                <div className=\"mint-burn-account-info-line\">Minted With <span>{new BigNumber(marketStat.accountStakeValue || 0).div(10 ** unxToken.decimals).toString() || '0'} UNX</span></div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"mint-burn-info\">\n              <div className=\"mint-burn-info-title\">Burn Synthetics to unstake UNX</div>\n              <div className=\"mint-burn-info-desc\">Burn your synthetics to withdraw UNX.</div>\n              <div className=\"mint-burn-account-info\">\n                <div className=\"mint-burn-account-info-line\">Assets($) <span>{new BigNumber(marketStat.accountAssetValue).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n              </div>\n              <div className=\"mint-burn-info-note\"><strong>NOTE</strong>: when \"Effective Leverage\" is lower than 0.5 or higher than 2.0 times of nominal leverage, your asset will be frozen. <span>You have to burn it within 3 days.</span> Otherwise, your asset will be burned and the UNX will be donated to staked pool.</div>\n            </div>\n          )\n        }\n        \n      </div>\n      {\n        showMintModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => {setShowMintModal(false);setMintAmount('');setUnxNeededForMint('');}}></div>\n              <div className=\"mint-wrapper\">\n                <div className=\"mint-wrapper-title\">Mint {mintAsset.label}</div>\n                <div className=\"mint-wrapper-info\">Price($)<span>{new BigNumber(mintAsset.price).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount</div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={mintAmount} decimals={mintAsset.decimals || 0} onChange={(amount) => handleMintAmountChange(amount)} />\n                  </div>\n                </div>\n                <TokenInput\n                  label=\"You need to pay (UNX)\"\n                  value={unxNeededForMint}\n                  defaultToken={unxToken}\n                  decimals={unxToken.decimals || 0}\n                  onAmountChange={(amount) => handleUnxNeededForMintChange(amount)} />\n                <div className=\"mint-btn\" onClick={() => onMint()}>Mint</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      {\n        showBurnModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => {setShowBurnModal(false);setBurnAmount('');setUnxGetForBurn('');}}></div>\n              <div className=\"burn-wrapper\">\n                <div className=\"burn-wrapper-title\">Burn {burnAsset.label}</div>\n                <div className=\"burn-wrapper-info\">Price($)<span>{new BigNumber(burnAsset.assetPrice).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount\n                    <span className=\"hint\">Balance: {new BigNumber(burnAsset.balance).div(10 ** burnAsset.decimals).toString()}</span>\n                  </div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={burnAmount} decimals={burnAsset.decimals || 0} onChange={(amount) => handleBurnAmountChange(amount)} />\n                    <div className=\"input-max-btn\" onClick={() => maxBurnAmount()}>MAX</div>\n                  </div>\n                </div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">You will get (UNX)</div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={unxGetForBurn} decimals={unxToken.decimals || 0} onChange={(amount) => handleUnxGetForBurnChange(amount)} />\n                  </div>\n                </div>\n                <div className=\"burn-btn\" onClick={() => onBurn()}>Burn</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      {\n        showExchangeModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => {setShowExchangeModal(false);setExchangeAmount('');setExchangeToAmount('');}}></div>\n              <div className=\"exchange-wrapper\">\n                <div className=\"exchange-wrapper-title\">Exchange {exchangeAsset.label}</div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount\n                    <span className=\"hint\">Balance: {new BigNumber(exchangeAsset.balance).div(10 ** exchangeAsset.decimals).toString()}</span>\n                  </div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={exchangeAmount} decimals={exchangeAsset.decimals || 0} onChange={(amount) => handleExchangeAmountChange(amount)} />\n                    <div className=\"input-max-btn\" onClick={() => maxExchangeAmount()}>MAX</div>\n                  </div>\n                </div>\n                <TokenInput\n                  cls=\"asset-select\"\n                  label=\"Exchange to\"\n                  value={exchangeToAmount}\n                  tokens={exchangeToAssets}\n                  showBalance={false}\n                  withMax={false}\n                  onTokenChange={(asset) => handleChangeExchangeToAsset(asset)}\n                  onAmountChange={(amount) => handleChengeExchangeToAmount(amount)}\n                  />\n                <div className=\"exchange-btn\" onClick={() => onExchange()}>Exchange</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n    </div>\n  )\n}\n\nexport default Synth","import React from 'react'\nimport { useMappedState } from 'redux-react-hook';\nimport { toLocaleFixed } from '../../utils/common'\nimport './index.css'\n\nconst Governance = (props) => {\n  const { poolStat } = useMappedState((state) => ({\n    poolStat: state.gov.poolStat\n  }))\n\n  return (\n    <div className=\"governance-wrapper\">\n      <div className=\"overview-wrapper\">\n        <div className=\"overview-title\">Overview</div>\n        <div className=\"overview-sections\">\n          <div className=\"overview-left\">\n            <p className=\"overview-section-title\">Total UNX</p>\n            <p className=\"overview-detail\">{toLocaleFixed(poolStat.distributionInfo.amount || 0)}</p>\n          </div>\n          <div className=\"overview-right\">\n            <p className=\"overview-section-title\">Daily Distribution</p>\n            <p className=\"overview-detail\">{toLocaleFixed(((poolStat.distributionInfo.amount || 0) / (poolStat.distributionInfo.period || 1) * 86400).toFixed(9))} <span>UNX</span></p>\n          </div>\n        </div>\n      </div>\n      <div className=\"distribution-wrapper\">\n        <div className=\"overview-title\">Distribution</div>\n        <div className=\"distribution-sections\">\n          <div className=\"pie-svg\">\n            <svg className=\"donut\" width=\"240px\" height=\"240px\" viewBox=\"0 0 42 42\" role=\"img\">\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#2BBE7F\" stroke-width=\"4\" stroke-dasharray=\"80, 20\" stroke-dashoffset=\"100\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"120\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FE332F\" stroke-width=\"4\" stroke-dasharray=\"8, 92\" stroke-dashoffset=\"219.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"311.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#F4BA5E\" stroke-width=\"4\" stroke-dasharray=\"8, 92\" stroke-dashoffset=\"411\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"503\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#2B3962\" stroke-width=\"4\" stroke-dasharray=\"3, 97\" stroke-dashoffset=\"602.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"699.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#F18DA5\" stroke-width=\"4\" stroke-dasharray=\"1, 99\" stroke-dashoffset=\"799\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"898\"></circle>\n            </svg>\n          </div>\n          <div className=\"pie-desc\">\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#2BBE7F' } }></div>\n              <div className=\"d-item-name\">Community</div>\n              <div className=\"d-item-ratio\">80%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#FE332F' } }></div>\n              <div className=\"d-item-name\">Developer</div>\n              <div className=\"d-item-ratio\">8%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#F4BA5E' } }></div>\n              <div className=\"d-item-name\">Foundation</div>\n              <div className=\"d-item-ratio\">8%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#2B3962' } }></div>\n              <div className=\"d-item-name\">Resoucse Extension</div>\n              <div className=\"d-item-ratio\">3%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#F18DA5' } }></div>\n              <div className=\"d-item-name\">Volunteer</div>\n              <div className=\"d-item-ratio\">1%</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Governance","import { useEffect, useCallback } from 'react'\nimport { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport { GOVERNANCE_ADDRESS } from '../config'\nimport { handleError } from '../utils/errorHandle'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\n\nconst { StringReader, hexstr2str, reverseHex } = utils\n\nexport const useFetchTokens = () => {\n  const { stopInterval, tokens } = useMappedState((state) => ({\n    stopInterval: state.common.stopInterval,\n    tokens: state.common.tokens\n  }))\n  const dispatch = useDispatch()\n  const setLoadingToken = useCallback((loadingToken) => dispatch({ type: 'SET_LOADING_TOKEN', loadingToken }), [])\n  const setTokens = useCallback((tokens) => dispatch({ type: 'SET_TOKENS', tokens }), [])\n  const setStopInterval = useCallback((stopInterval) => dispatch({ type: 'SET_STOP_INTERVAL', stopInterval }), [])\n  const setPoolStat = useCallback((poolStat) => dispatch({ type: 'SET_POOL_STAT', poolStat }), [])\n\n  useEffect(() => {\n    getGovStat()\n    let interval = !stopInterval && !tokens.length && setInterval(() => getGovStat, 1000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokens, stopInterval])\n\n  async function getGovStat() {\n    if (!tokens.length) {\n      try {\n        const statStr = await client.api.smartContract.invokeWasmRead({\n          scriptHash: GOVERNANCE_ADDRESS,\n          operation: 'stat',\n          args: []\n        })\n\n        const strReader = new StringReader(statStr)\n        const distributionInfo = {}\n        distributionInfo.amount = strReader.readUint128() / (10 ** 9)\n        distributionInfo.period = strReader.readUint128()\n        distributionInfo.startTimeStamp = strReader.readUint128()\n        distributionInfo.settledTimeStamp = strReader.readUint128()\n  \n        const pools = {}\n        const poolCount = strReader.readNextLen()\n        let totalWeight = 0\n        for (let i = 0; i < poolCount; i++) {\n          const pool = {}\n          const nameLength = strReader.readNextLen()\n          pool.name = hexstr2str(strReader.read(nameLength))\n          pool.address = reverseHex(strReader.read(20))\n          pool.weight = strReader.readUint128()\n          totalWeight += pool.weight\n          pools[pool.name] = pool\n        }\n\n        for (let poolName in pools) {\n          pools[poolName].ratio = pools[poolName].weight / totalWeight\n        }\n  \n        const upgrade = strReader.readBoolean()\n        const parsedTokens = []\n        const tokenCount = strReader.readNextLen()\n        for (let i = 0; i < tokenCount; i++) {\n          const token = {}\n          token.id = strReader.readUint128()\n          const nameLength = strReader.readNextLen()\n          token.name = hexstr2str(strReader.read(nameLength))\n          token.address = reverseHex(strReader.read(20))\n          token.ty = strReader.readUint8()\n          token.decimals = strReader.readUint128()\n\n          token.value = token.id\n          token.label = token.name\n\n          parsedTokens.push(token)\n        }\n\n        setLoadingToken(false)\n        setTokens(parsedTokens)\n        setPoolStat({\n          distributionInfo,\n          pools,\n          upgrade\n        })\n      } catch (e) {\n        console.log(e)\n        handleError(e, (errorCode) => {\n          console.log(errorCode)\n          if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n            setStopInterval(true)\n          } else {\n            console.log('get all tokens', e)\n          }\n        })\n      }\n    }\n  }\n\n  return null\n}","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useEffect, useCallback } from 'react'\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport Header from './components/header'\nimport Modal from './components/modal'\nimport Transaction from './pages/transaction'\nimport Swap from './pages/swap'\nimport Pool from './pages/pool'\nimport AddLiquidity from './pages/pool/addLiquidity'\nimport RemoveLiquidity from './pages/pool/removeLiquidity'\nimport Staking from './pages/staking'\nimport StakingDetail from './pages/staking/detail'\nimport Token from './pages/token'\nimport Option from './pages/option'\nimport Trade from './pages/trade'\nimport Synth from './pages/synth'\nimport Overview from './pages/governance'\nimport { NETWORK_TYPE, READY_TABS } from './config'\nimport { useFetchTokens } from './hooks/useToken'\nimport './App.css'\n\nexport const App = () => {\n  const Alert = useAlert()\n  const { account, loadingToken } = useMappedState((state) => ({\n    loadingToken: state.common.loadingToken,\n    account: state.wallet.account\n  }))\n  const dispatch = useDispatch()\n  const setAccount = useCallback((account) => dispatch({ type: 'SET_ACCOUNT', account }), [])\n\n  useFetchTokens()\n\n  useEffect(() => {\n    client.api.provider.getProvider()\n      .catch((e) => {\n        if (e === 'NO_PROVIDER') {\n          Alert.error('Please install wallet extension first')\n        }\n      })\n  }, [])\n\n  async function onConnectWallet() {\n    try {\n      const network = await client.api.network.getNetwork()\n      if (network && network.type !== NETWORK_TYPE) {\n        Alert.error(`Please connect to the ${NETWORK_TYPE}-Net`)\n        return\n      }\n      const accountAddress = await client.api.asset.getAccount()\n      setAccount(accountAddress)\n      localStorage.setItem('account', accountAddress)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  function onSignOut() {\n    setAccount('')\n    localStorage.setItem('account', '')\n  }\n\n  function renderLoading() {\n    if (loadingToken) {\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper transparent-bg\">\n            <div className=\"modal-icon-loading modal-icon\"></div>\n            <div className=\"modal-text light\">Loading...</div>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  return (\n    <Router>\n      <div className=\"app\">\n        {renderLoading()}\n        {\n          (account === null) && <div className=\"connect-wallet-overlay\">\n            <div className=\"connect-wrapper\">\n              <p className=\"connect-title\">Connect Wallet</p>\n              <div className=\"wallet-item\" onClick={() => onConnectWallet()}>Cyano Wallet</div>\n            </div>\n          </div>\n        }\n        <Modal />\n        <Header onSignOut={() => onSignOut()} onConnectWallet={() => onConnectWallet()} />\n        <div className=\"main-wrapper\">\n          <Switch>\n            {\n              READY_TABS.indexOf('/') >= 0 ?\n              <Route exact path=\"/\">\n                <Staking />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/') >= 0 ?\n              <Route exact path=\"/staking/:id\">\n                <StakingDetail />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/swap\">\n                <Swap />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/pool\">\n                <Pool />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/pool/add\">\n                <AddLiquidity />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/pool/remove/:id\">\n                <RemoveLiquidity />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/trade') >= 0 ?\n              <Route exact path=\"/trade\">\n                <Trade />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/governance') >= 0 ?\n              <Route exact path=\"/governance\">\n                <Overview />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/token') >= 0 ?\n              <Route exact path=\"/token\">\n                <Token />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/option') >= 0 ?\n              <Route exact path=\"/option\">\n                <Option />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/synth') >= 0 ?\n              <Route exact path=\"/synth\">\n                <Synth />\n              </Route> : null\n            }\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  )\n}\n","const initState = {\n  infoModal: {\n    show: false,\n    type: '',\n    text: '',\n    extraText: '',\n    extraLink: ''\n  },\n}\n\nexport const modal = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_MODAL':\n      return { ...state, [action.modalType]: action.modalDetail }\n    default:\n      return { ...state }\n  }\n}","const initState = {\n  account: localStorage.getItem('account'),\n  slippage: localStorage.getItem('slippage') || '0.1'\n}\n\nexport const wallet = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_ACCOUNT':\n      return { ...state, account: action.account }\n    case 'SET_SLIPPAGE':\n      localStorage.setItem('slippage', action.slippage)\n      return { ...state, slippage: action.slippage }\n    default:\n      return { ...state }\n  }\n}","const initState = {\n  loadingToken: true,\n  stopInterval: false,\n  tokens: []\n}\n\nexport const common = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_LOADING_TOKEN':\n      return { ...state, loadingToken: action.loadingToken }\n    case 'SET_STOP_INTERVAL':\n      return { ...state, stopInterval: action.stopInterval }\n    case 'SET_TOKENS':\n      return { ...state, tokens: action.tokens }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  poolStat: {\n    distributionInfo: {},\n    pools: {\n      staking: {},\n      swap: {},\n      dex: {},\n      synth: {}\n    },\n    upgrade: false\n  }\n}\n\nexport const gov = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_POOL_STAT':\n      return { ...state, poolStat: action.poolStat }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  tokens: [],\n  pairs: []\n}\n\nexport const swap = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_SWAP_TOKENS':\n      return { ...state, tokens: action.tokens }\n    case 'SET_PAIRS':\n      return { ...state, pairs: action.pairs }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  tokens: []\n}\n\nexport const staking = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_STAKING_TOKENS':\n      return { ...state, tokens: action.tokens }\n    default:\n      return { ...state }\n  }\n}\n","import { combineReducers } from 'redux'\nimport { modal } from './modal'\nimport { wallet } from './wallet'\nimport { common } from './common'\nimport { gov } from './gov'\nimport { swap } from './swap'\nimport { staking } from './staking'\n\nconst reducers = combineReducers({\n  modal,\n  wallet,\n  common,\n  gov,\n  swap,\n  staking\n})\n\nexport default reducers","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as Ontology from '@ont-dev/ontology-dapi';\nimport { positions, Provider } from \"react-alert\";\nimport { createStore } from 'redux';\nimport { StoreContext } from 'redux-react-hook';\nimport AlertTemplate from \"react-alert-template-basic\";\nimport reducers from './reducers';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'rc-tooltip/assets/bootstrap.css'\nimport './styles/font.css';\nimport './styles/common.css';\nimport './index.css';\n\nconst store = createStore(reducers)\n\nOntology.client.registerClient({});\n\nconst options = {\n  timeout: 10000,\n  position: positions.TOP_CENTER\n};\n\nReactDOM.render(\n  <Provider template={AlertTemplate} {...options}>\n    <StoreContext.Provider value={store}>\n      <App />\n    </StoreContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}