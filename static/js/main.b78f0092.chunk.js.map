{"version":3,"sources":["../node_modules/milagro-crypto-js/src sync /^/.//.*$","components/input/index.js","config.js","utils/common.js","components/header/index.js","components/modal/index.js","utils/request.js","utils/token.js","utils/errorHandle.js","utils/constants.js","pages/transaction/index.js","components/tokenInput/index.js","hooks/usePair.js","utils/swap.js","pages/swap/index.js","pages/pool/index.js","pages/pool/addLiquidity/index.js","pages/pool/removeLiquidity/index.js","pages/staking/index.js","pages/staking/detail/index.js","pages/token/index.js","pages/synth/index.js","pages/governance/index.js","hooks/useToken.js","App.js","reducers/modal.js","reducers/wallet.js","reducers/common.js","reducers/gov.js","reducers/swap.js","reducers/staking.js","reducers/index.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Input","props","value","cls","disabled","round","decimals","inline","onChange","useState","val","setVal","useEffect","placeholder","handleInput","formattedValue","v","RegExp","test","formatter","target","className","type","onInput","NETWORK_TYPE","GOVERNANCE_ADDRESS","TRANSACTION_BASE_URL","TRANSACTION_AFTERFIX","READY_TABS","toLocaleFixed","num","n","priceNum","parseFloat","Math","toFixed","toString","indexOf","replace","$0","$1","formatAccount","account","substr","Header","showProfilePanel","setShowProfilePanel","useMappedState","state","wallet","slippage","showSiteIntro","setShowSiteIntro","dispatch","useDispatch","setSlippage","useCallback","href","window","location","origin","pathname","onClick","rel","renderSiteIntro","to","onConnectWallet","Number","amount","onSignOut","InfoModal","onCloseModal","text","extraLink","extraText","Modal","infoModal","modal","setModal","modalType","modalDetail","modals","show","push","assign","buildModals","instance","axios","create","baseURL","timeout","headers","interceptors","response","use","data","error","Promise","reject","reverseHex","utils","getTokenBalance","token","cb","name","param","scriptHash","address","operation","args","invokeMethod","client","api","smartContract","invokeRead","ty","invokeWasmRead","then","bl","str","split","reverse","total","BigNumber","i","length","plus","times","parseInt","div","request","method","url","resp","targetToken","result","find","t","asset_name","toLowerCase","balance","catch","console","log","getTokenIconDom","slice","tokenName","handleError","callback","json","JSON","parse","Result","PRICE_DECIMALS","StringReader","Transaction","pairNameKeyword","setPairNameKeyword","pairs","setPairs","tokenPair","setTokenPair","showPairSelectModal","setShowPairSelectModal","tradeType","setTradeType","tokenBalance","setTokenBalance","makes","setMakes","myMakes","setMyMakes","makeView","setMakeView","price","setPrice","setAmount","setTotal","pool","setPool","lastPrice","setLastPrice","feeRate","setFeeRate","isValid","setIsValid","stopInterval","common","tokens","CONTRACT_ADDRESS","gov","poolStat","pools","dex","setStopInterval","Alert","useAlert","urlPairName","decodeURIComponent","hash","reg","match","getHashString","getMakes","curMakes","filter","m","asset_token_id","price_token_id","pow","onUnmake","make_id","a","assetToken","priceToken","tradePrice","tradeAmount","integerValue","ROUND_DOWN","invokeWasm","gasPrice","gasLimit","requireIdentity","makeResult","transaction","makeId","unmakeResult","getPriceHint","getAmountHint","p","getMakesOfPair","makeStr","parsedMakes","strReader","pairLastPrice","readUint128","j","makeCount","readNextLen","make","errorCode","interval","setInterval","clearInterval","getUserMakes","hexToAddress","read","getStat","statStr","tokenPool","tokenCount","tempToken","tokenPairs","onMake","toUpperCase","tp","generateTokenPool","nameLC","reduce","b","TokenInput","defaultTokenId","inputDisabled","showBalance","withMax","onTokenChange","onAmountChange","balanceChange","setToken","setBalance","label","defaultId","defaultToken","defaultValue","options","isSearchable","components","Option","SingleValue","children","newToken","handleTokenChange","theme","borderRadius","colors","primary","renderTokenSeletion","isNaN","useFetchPairs","swapTokens","swap","SWAP_ADDRESS","setSwapTokens","getSwapStat","pairStr","parsedPairs","pairCount","pair","token1","token2","reserve1","reserve2","lp","tokenIds","tk","REST","findAllPaths","sourceId","targetId","pathArr","findPath","pathNodes","neighborNodes","includes","sort","p1","p2","getInputAmount","output","ceil","getOutputAmount","input","floor","findNextOutput","findPrevInput","bestSwap","paths","originAmount","maxOutput","minInput","Infinity","path","Swap","swapType","setSwapType","setToken1","setToken2","token1Amount","setToken1Amount","token2Amount","setToken2Amount","isValidPair","setIsValidPair","isValidSwap","setIsValidSwap","bestPath","setBestPath","showPrice","setShowPrice","setBalanceChange","history","useHistory","swapResult","validPair","onChangeToken1","inputAmount","onToken1AmountChange","onChangeToken2","outputAmount","onToken2AmountChange","handleSwap","abs","getPriceImpact","items","index","getBestPath","Pool","liquidityBalance","setLiquidityBalance","all","myLiquidities","l","lb","pairId","shareOfPool","sqrt","onRemoveLiquidity","generateLiquidityList","AddLiquidity","isFirstProvider","setIsFirstProvider","showPriceInfo","setShowPriceInfo","getPairByToken","getPairPrice","ROUND_UP","addResult","goBack","amountProduct","getShareOfPool","onAdd","RemoveLiquidity","setPair","useLocation","getLiquidityBalanceByPairId","onRemove","Staking","showClosed","setShowClosed","stakingTokens","staking","STAKING_ADDRESS","setStakingTokens","getStakingTokenBalance","parsedTokens","weight","totalWeight","filteredTokens","originWeight","getTip","openStakingTokens","closedStakingTokens","startsWith","placement","overlay","onSelectToken","generateStakingPool","StakingDetail","stakeToken","setStakeToken","myStake","setMyStake","stakeType","setStakeType","claimableWing","setClaimableWing","showStakingModal","setShowStakingModal","tokenId","tokenWeight","getAccountStake","stakeStr","interest","stake","handleStakeClick","action","stakeResult","harvestResult","sToken","getClaimableWing","onHarvest","onStake","Token","Synth","Governance","distributionInfo","period","width","height","viewBox","role","cx","cy","r","fill","stroke","stroke-width","stroke-dasharray","stroke-dashoffset","style","background","hexstr2str","App","loadingToken","setAccount","provider","getProvider","network","getNetwork","asset","getAccount","accountAddress","localStorage","setItem","setLoadingToken","setTokens","setPoolStat","getGovStat","startTimeStamp","settledTimeStamp","poolCount","nameLength","upgrade","readBoolean","readUint8","useFetchTokens","exact","initState","getItem","synth","reducers","combineReducers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","Ontology","registerClient","position","positions","TOP_CENTER","ReactDOM","render","template","AlertTemplate","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.b78f0092.chunk.js","sourcesContent":["var map = {\n\t\"./aes\": 269,\n\t\"./aes.js\": 269,\n\t\"./big\": 270,\n\t\"./big.js\": 270,\n\t\"./ctx\": 170,\n\t\"./ctx.js\": 170,\n\t\"./ecdh\": 271,\n\t\"./ecdh.js\": 271,\n\t\"./ecp\": 272,\n\t\"./ecp.js\": 272,\n\t\"./ecp2\": 273,\n\t\"./ecp2.js\": 273,\n\t\"./ff\": 274,\n\t\"./ff.js\": 274,\n\t\"./fp\": 275,\n\t\"./fp.js\": 275,\n\t\"./fp12\": 276,\n\t\"./fp12.js\": 276,\n\t\"./fp2\": 277,\n\t\"./fp2.js\": 277,\n\t\"./fp4\": 278,\n\t\"./fp4.js\": 278,\n\t\"./gcm\": 279,\n\t\"./gcm.js\": 279,\n\t\"./hash256\": 280,\n\t\"./hash256.js\": 280,\n\t\"./hash384\": 281,\n\t\"./hash384.js\": 281,\n\t\"./hash512\": 282,\n\t\"./hash512.js\": 282,\n\t\"./mpin\": 283,\n\t\"./mpin.js\": 283,\n\t\"./newhope\": 284,\n\t\"./newhope.js\": 284,\n\t\"./nhs\": 285,\n\t\"./nhs.js\": 285,\n\t\"./pair\": 286,\n\t\"./pair.js\": 286,\n\t\"./rand\": 287,\n\t\"./rand.js\": 287,\n\t\"./rom_curve\": 288,\n\t\"./rom_curve.js\": 288,\n\t\"./rom_field\": 289,\n\t\"./rom_field.js\": 289,\n\t\"./rsa\": 290,\n\t\"./rsa.js\": 290,\n\t\"./sha3\": 291,\n\t\"./sha3.js\": 291,\n\t\"./uint64\": 292,\n\t\"./uint64.js\": 292\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 593;","import React, { useState, useEffect } from 'react';\n\nconst Input = (props) => {\n  const { value = '', cls = '', round, disabled, decimals, inline = true, onChange } = props\n  const [val, setVal] = useState('')\n\n  useEffect(() => {\n    setVal(value)\n  //   if (value === '') {\n  //     setVal('')\n  //   } else if (`${value}`.endsWith('.')) {\n  //     setVal(value)\n  //   } else {\n  //     if (round === 'down') {\n  //       setVal(Math.floor(value * (10 ** decimals)) / (10 ** decimals))\n  //     } else if (round === 'up') {\n  //       setVal(Math.ceil(value * (10 ** decimals)) / (10 ** decimals))\n  //     }\n  //   }\n  }, [value])\n\n  const placeholder = decimals > 0 ? '0.0' : '0'\n  const formatter = (v, decimals = 9) => {\n    if (v === '' || v === '0') {\n      return v\n    } else {\n      const reg = (decimals > 0) ? new RegExp(\n        `^(([0-9]{0,9})|(([0]\\\\.\\\\d{0,${decimals}}|[0-9]{0,9}\\\\.\\\\d{0,${decimals}})))$`\n      ) : new RegExp('^[0-9]{0,9}$')\n      if (reg.test(v)) {\n        return v\n      } else {\n        return val\n      }\n    }\n  };\n  const handleInput = (e) => {\n    const formattedValue = formatter(e.target.value, decimals)\n\n    setVal(formattedValue)\n    typeof onChange === 'function' && onChange(formattedValue)\n  }\n\n  // const handleChange = (e) => {\n  //   typeof onChange === 'function' && onChange(e.target.value)\n  // }\n\n  return (\n    <input\n      className={`input ${inline ? 'inline-input' : ''} ${cls}`}\n      type=\"text\"\n      placeholder={placeholder}\n      value={val}\n      disabled={disabled}\n      onInput={(e) => handleInput(e)}\n      // onChange={(e) => handleChange(e)}\n    />\n  );\n};\n\nexport default Input;\n","export const NETWORK_TYPE = 'TEST'\nexport const GOVERNANCE_ADDRESS = '14d6cefab7f87c29229d27da1a2d1fe3b493a315'\nexport const API_BASE_URL = 'https://polarisexplorer.ont.io'\nexport const TRANSACTION_BASE_URL = 'https://explorer.ont.io/transaction/'\nexport const TRANSACTION_AFTERFIX = '/testnet'\nexport const READY_TABS = ['/', '/swap', '/trade', '/governance', '/synth']","export const getQueryString = (search, name) => {\n  const reg = new RegExp(`(^|&)${name}=([^&]*)(&|$)`, 'i')\n  const value = search.substr(1).match(reg)\n\n  if (value != null) {\n    return (value[2])\n  }\n\n  return null\n}\n\nexport const getHashString = (hash, name) => {\n  const reg = new RegExp(`(^|&|[/?]+)${name}=([^&]*)(&|$)`, 'i')\n  const value = hash.substr(1).match(reg)\n\n  if (value != null) {\n    return (value[2])\n  }\n\n  return null\n}\n\nexport function toLocaleFixed(num, n = 9) {\n  const priceNum = parseFloat(n === 0 ? Math.round(num).toFixed(n) : parseFloat(num).toFixed(n)).toString()\n  return priceNum && (priceNum.indexOf('.') !== -1 ? priceNum.replace(/(\\d)(?=(\\d{3})+\\.)/g, ($0, $1) => `${$1},`) : priceNum.replace(/(?=(\\B\\d{3})+$)/g, ','))\n}\n\nexport const formatAccount = (account = '') => {\n  return `${account.substr(0, 4)}...${account.substr(-4)}`\n}\n","import React, { useState, useCallback } from 'react'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { Link } from 'react-router-dom'\nimport Input from '../input'\nimport { READY_TABS } from '../../config'\nimport { formatAccount } from '../../utils/common'\nimport './index.css'\n\nconst Header = (props) => {\n  const [showProfilePanel, setShowProfilePanel] = useState(false)\n  const { account, slippage } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage\n  }))\n  const [showSiteIntro, setShowSiteIntro] = useState(false)\n  const dispatch = useDispatch()\n  const setSlippage = useCallback((slippage) => dispatch({ type: 'SET_SLIPPAGE', slippage }), [])\n  const toggleShowSiteIntro = (show) => {\n    setShowSiteIntro(show)\n  }\n\n  const renderSiteIntro = () => {\n    if (showSiteIntro) {\n      const href = `${window.location.origin}${window.location.pathname}#/trade?pair=ONTd%2FUNX`\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper\">\n            <div className=\"close-btn\" onClick={() => toggleShowSiteIntro(false)}></div>\n            <p className=\"intro-line\">uniq-ex is a pure github based DAO dex, all activities are logged on github.</p>\n            <p className=\"intro-line\">You can open issues for discussion <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/uniq-ex/uniq-ex/issues\">here</a></p>\n            <p className=\"intro-line\">uniq-ex's future business will not be limited to exchanges though, we may enter various DeFi markets like compound or hegic.</p>\n            <p className=\"intro-line\">You can buy UNX(the governance token of uniq-ex) <a target=\"_blank\" rel=\"noreferrer\" href={href}>here</a></p>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  const onSignOut = () => {\n    setShowProfilePanel(false)\n    typeof props.onSignOut === 'function' && props.onSignOut()\n  }\n\n  const onConnectWallet = () => {\n    typeof props.onConnectWallet === 'function' && props.onConnectWallet()\n  }\n\n  const toggleProfilePanel = () => {\n    setShowProfilePanel(!showProfilePanel)\n  }\n\n  return (\n    <div className=\"header-wrapper\">\n      {renderSiteIntro()}\n      <div className=\"header\">\n        <div className=\"content-wrapper\">\n          <div className=\"logo-wrapper\">\n            UNIQ-EX\n            {/* <div className=\"site-intro\" onClick={() => toggleShowSiteIntro(true)}></div> */}\n          </div>\n          <div className=\"nav-list\">\n            { READY_TABS.indexOf('/') >= 0 ? <div className=\"nav-item\"><Link to=\"/\">Staking</Link></div> : null }\n            { READY_TABS.indexOf('/swap') >= 0 ? <div className=\"nav-item\"><Link to=\"/swap\">Swap</Link></div> : null }\n            { READY_TABS.indexOf('/trade') >= 0 ? <div className=\"nav-item\"><Link to=\"/trade\">Trade</Link></div> : null }\n            { READY_TABS.indexOf('/governance') >= 0 ? <div className=\"nav-item\"><Link to=\"/governance\">Governance</Link></div> : null }\n            { READY_TABS.indexOf('/token') >= 0 ? <div className=\"nav-item\"><Link to=\"/token\">Token</Link></div> : null }\n            { READY_TABS.indexOf('/synth') >= 0 ? <div className=\"nav-item\"><Link to=\"/synth\">Synth</Link></div> : null }\n          </div>\n          <div className={`${account ? 'active' : ''} profile-wrapper`}>\n            { !account && <span className=\"connect-btn\" onClick={() => onConnectWallet()}>Connect Wallet</span>}\n            { account && <span className=\"account-address\" onClick={() => toggleProfilePanel()}>{formatAccount(account)}</span> }\n            {\n              showProfilePanel ? (\n                <div className=\"profile-panel\">\n                  <div className=\"setting-wrapper\">\n                    <div className=\"setting-section-title\">SLIPPAGE</div>\n                    <div className=\"slippage-setting\">\n                      <div className={`slippage-item ${Number(slippage) === 0.1 ? 'selected' : ''}`} onClick={() => setSlippage('0.1')}>0.1%</div>\n                      <div className={`slippage-item ${Number(slippage) === 0.5 ? 'selected' : ''}`} onClick={() => setSlippage('0.5')}>0.5%</div>\n                      <div className={`slippage-item ${Number(slippage) === 1 ? 'selected' : ''}`} onClick={() => setSlippage('1.0')}>1.0%</div>\n                      <div className=\"slippage-input-wrapper\">\n                        <Input value={slippage} cls=\"slippage-input\" decimals=\"2\" placeholder={slippage} onChange={(amount) => setSlippage(amount)} />%\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"signout-btn\" onClick={() => onSignOut()}>Sign Out</div>\n                </div>\n              ) : null\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import React, { useCallback } from 'react'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport './index.css'\n\nconst InfoModal = (props) => {\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-wrapper\">\n        <div className=\"close-btn\" onClick={() => props.onCloseModal()}></div>\n        <div className={`modal-icon-${props.type} modal-icon`}></div>\n        <div className={`modal-text-${props.type} modal-text`}>{props.text}</div>\n        <div className=\"modal-extra-text\">\n        {\n          props.extraLink ? (\n            <a className=\"transaction-link\" target=\"_blank\" rel=\"noreferrer\" href={props.extraLink}>{props.extraText}</a>\n          ) : props.extraText\n        }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Modal = (props) => {\n  const { infoModal } = useMappedState((state) => ({\n    infoModal: state.modal.infoModal\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const onCloseInfoModal = () => {\n    setModal('infoModal', Object.assign({}, infoModal, { show: false }))\n  }\n\n  const buildModals = () => {\n    const modals = []\n    if (infoModal.show) {\n      modals.push(<InfoModal {...infoModal} onCloseModal={() => onCloseInfoModal()} />)\n    }\n    return modals\n  }\n\n  return (\n    <div className=\"modal-container\">\n      {buildModals()}\n    </div>\n  )\n}\n\nexport default Modal","import axios from 'axios'\nimport { API_BASE_URL } from '../config'\n\nconst instance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: { 'Content-Type': 'application/json' }\n})\n\ninstance.interceptors.response.use(\n  (response) => {\n    const res = response.data;\n    return res;\n  },\n  (error) => {\n    return Promise.reject(error);\n  },\n);\n\nexport default instance","import { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport request from './request'\n\nconst { reverseHex } = utils\n\nexport const getTokenBalance = (account, token, cb) => {\n  \n  if (token.name !== 'ONT' && token.name !== 'ONG') {\n    const param = {\n      scriptHash: token.address,\n      operation: 'balanceOf',\n      args: [\n        {\n          type: 'Address',\n          value: account,\n        },\n      ],\n    }\n    let invokeMethod = client.api.smartContract.invokeRead\n\n    if (token.ty === 2 || token.ty === 3) {\n      invokeMethod = client.api.smartContract.invokeWasmRead\n    }\n    invokeMethod(param).then((bl) => {\n      if (bl) {\n        const str = reverseHex(bl).split('').reverse()\n        let total = new BigNumber(0)\n        \n        for (let i = 0; i < str.length; i++) {\n          total = total.plus(new BigNumber(16 ** i).times(parseInt(str[i], 16)))\n        }\n        \n        cb(total.div(10 ** token.decimals).toString())\n      }\n    })\n  } else {\n    request({\n      method: 'get',\n      url: `/v2/addresses/${account}/native/balances`\n    }).then((resp) => {\n      if (resp.code === 0) {\n        const targetToken = resp.result.find((t) => t.asset_name === token.name.toLowerCase())\n        cb(targetToken.balance)\n      }\n    })\n    .catch((e) => {\n      console.log(e)\n    })\n  }\n}\n\nexport const getTokenIconDom = (token, cls = '') => {\n  if (token.id) {\n    return (\n      <div className={`token-icon-wrapper ${cls}`}>\n        {\n          token.ty === 3\n            ? token.name.split('-').slice(1).map((tokenName) => (<div key={`${token.name}-${tokenName}`} className={`token-icon-item with-drop-shadow icon-${tokenName}`} />))\n            : (<div className={`token-icon-item icon-${token.name}`} />)\n        }\n      </div>\n    )\n  }\n  return null\n}","export const handleError = (e, callback = () => {}) => {\n  try {\n    const json = JSON.parse(e)\n    if (json.Result === 'wasm contract does not exist') {\n      callback('CONTRACT_ADDRESS_ERROR')\n    }\n  } catch(error) {\n    // TODO\n  }\n}","export const PRICE_DECIMALS = 10 ** 6","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { getTokenBalance } from '../../utils/token'\nimport Input from '../../components/input'\nimport { handleError } from '../../utils/errorHandle'\nimport { getHashString } from '../../utils/common'\nimport { PRICE_DECIMALS } from '../../utils/constants'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Transaction = () => {\n  const [pairNameKeyword, setPairNameKeyword] = useState('')\n  const [pairs, setPairs] = useState([])\n  const [tokenPair, setTokenPair] = useState({})\n  const [showPairSelectModal, setShowPairSelectModal] = useState(false)\n  const [tradeType, setTradeType] = useState('buy')\n  const [tokenBalance, setTokenBalance] = useState('-')\n  const [makes, setMakes] = useState([])\n  const [myMakes, setMyMakes] = useState([])\n  const [makeView, setMakeView] = useState('all')\n  const [price, setPrice] = useState('')\n  const [amount, setAmount] = useState('')\n  const [total, setTotal] = useState('')\n  const [pool, setPool] = useState([])\n  const [lastPrice, setLastPrice] = useState(0)\n  const [feeRate, setFeeRate] = useState(0)\n  const [isValid, setIsValid] = useState(false)\n  const { account, stopInterval, tokens, CONTRACT_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    stopInterval: state.common.stopInterval,\n    tokens: state.common.tokens,\n    CONTRACT_ADDRESS: state.gov.poolStat.pools.dex.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const setStopInterval = useCallback((stopInterval) => dispatch({ type: 'SET_STOP_INTERVAL', stopInterval }), [])\n\n  const Alert = useAlert()\n\n  const urlPairName = decodeURIComponent(getHashString(window.location.hash, 'pair') || '')\n\n  useEffect(() => {\n    if (pairs.length && !tokenPair.name) {\n      setTokenPair(pairs.find((p) => p.name === `${urlPairName}`) || pairs[0])\n    }\n  }, [pairs])\n\n  useEffect(() => {\n    if (account && tokenPair.name) {\n      setTokenBalance('-')\n      getTokenBalance(account, tradeType === 'buy' ? tokenPair.tokens[1] : tokenPair.tokens[0], (bl) => {\n        setTokenBalance(bl)\n      })\n    }\n  }, [account, tokenPair, tradeType])\n\n  useEffect(() => {\n    function getMakesOfPair() {\n      if (tokenPair.name && CONTRACT_ADDRESS) {\n        try {\n          client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'get_makes_of_pair',\n            args: [\n              {\n                type: 'Long',\n                value: tokenPair.tokens[0].id\n              },\n              {\n                type: 'Long',\n                value: tokenPair.tokens[1].id\n              }\n            ]\n          })\n          .then((makeStr) => {\n            const parsedMakes = []\n            const strReader = new StringReader(makeStr)\n            const pairLastPrice = strReader.readUint128()\n    \n            for (let j = 0; j <= 1; j++) {\n              const makeCount = strReader.readNextLen()\n              for (let i = 0; i < makeCount; i++) {\n                const make = {}\n                make.make_id = strReader.readUint128()\n                make.price = strReader.readUint128()\n                make.amount = new BigNumber(strReader.readUint128()).toString()\n                make.asset_token_id = (j === 0 ? tokenPair.tokens[0].id : tokenPair.tokens[1].id)\n                make.price_token_id = (j === 0 ? tokenPair.tokens[1].id : tokenPair.tokens[0].id)\n        \n                parsedMakes.push(make)\n              }\n            }\n    \n            setLastPrice(pairLastPrice ? pairLastPrice / PRICE_DECIMALS : 0)\n            setMakes(parsedMakes)\n          })\n          .catch((e) => {\n            handleError(e, (errorCode) => {\n              if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n                setStopInterval(true)\n              } else {\n                console.log('get makes of pair', e)\n              }\n            })\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n    getMakesOfPair()\n    const interval = !stopInterval && setInterval(getMakesOfPair, 2000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokenPair, account, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    function getUserMakes() {\n      if (account && CONTRACT_ADDRESS) {\n        try {\n          client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'get_user_makes',\n            args: [\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n          .then((makeStr) => {\n            const parsedMakes = []\n            const strReader = new StringReader(makeStr)\n            const makeCount = strReader.readNextLen()\n            for (let i = 0; i < makeCount; i++) {\n              const make = {}\n              make.address = client.api.utils.hexToAddress(strReader.read(20))\n              make.asset_token_id = strReader.readUint128()\n              make.price_token_id = strReader.readUint128()\n              make.price = strReader.readUint128()\n              make.amount = strReader.readUint128()\n              make.make_id = strReader.readUint128()\n    \n              parsedMakes.push(make)\n            }\n    \n            setMyMakes(parsedMakes)\n          })\n          .catch((e) => {\n            handleError(e, (errorCode) => {\n              if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n                setStopInterval(true)\n              } else {\n                console.log('get user makes', e)\n              }\n            })\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getUserMakes()\n    const interval = !stopInterval && setInterval(getUserMakes, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokenPair, account, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    async function getStat() {\n      if (tokens.length && CONTRACT_ADDRESS) {\n        try {\n          const statStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'stat',\n            args: []\n          })\n          \n          const tokenPool = []\n          const strReader = new StringReader(statStr)\n          setFeeRate(strReader.readUint128())\n          const tokenCount = strReader.readNextLen()\n  \n          for (let i = 0; i < tokenCount; i++) {\n            const token = {}\n            token.id = strReader.readUint128()\n            const tempToken = tokens.find((t) => t.id === token.id)\n            token.balance = new BigNumber(strReader.readUint128()).div(new BigNumber(10 ** tempToken.decimals)).toString()\n  \n            tokenPool.push(Object.assign(tempToken, token))\n          }\n\n          if (!pairs.length) {\n            const tokenPairs = []\n            for (let i = 0; i < tokenPool.length; i++) {\n              for (let j = i + 1; j < tokenPool.length; j++) {\n                tokenPairs.push({\n                  name: `${tokenPool[i].name}/${tokenPool[j].name}`,\n                  tokens: [tokenPool[i], tokenPool[j]]\n                })\n              }\n            }\n\n            setPairs(tokenPairs)\n          }\n\n          setPool(tokenPool)\n        } catch (e) {\n          handleError(e, (errorCode) => {\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get stat', e)\n            }\n          })\n        }\n      }\n    }\n\n    getStat()\n    const interval = setInterval(() => {\n      if (stopInterval) {\n        clearInterval(interval)\n      } else {\n        getStat()\n      }\n    }, 5000)\n    return () => clearInterval(interval)\n  }, [tokens, pairs, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    if (price > 0 && amount > 0) {\n      setTotal(price * amount)\n    }\n  }, [price, amount])\n\n  useEffect(() => {\n    if (price > 0) {\n      setAmount((total || 0) / price)\n    }\n  }, [total])\n\n  useEffect(() => {\n    if (tokenPair.name && price > 0 && amount > 0) {\n      setIsValid(true)\n    } else {\n      setIsValid(false)\n    }\n  }, [tokenPair, amount, price])\n\n  useEffect(() => {\n    setMakeView('all')\n  }, [account])\n\n  function onChangeToUserMakeView() {\n    if (account) {\n      setMakeView('my')\n    } else {\n      Alert.show('Please Connect Wallet First')\n    }\n  }\n\n  function getMakes(type) {\n    if (tokenPair.name) {\n      const curMakes = (makeView === 'my' ? myMakes : makes)\n      if (type === 'sell') {\n        return curMakes.filter((m) => m.asset_token_id === tokenPair.tokens[0].id && m.price_token_id === tokenPair.tokens[1].id).map((m) => {\n          return (\n            <div key={m.make_id} className=\"my-make-item reverse\">\n              <div className=\"make-item-detail make-sell\">{m.price / PRICE_DECIMALS}</div>\n              <div className=\"make-item-detail\">{new BigNumber(m.amount).div(Math.pow(10, tokenPair.tokens[0].decimals)).toString()}</div>\n              { makeView === 'my' && <div className=\"unmake-btn\" onClick={() => onUnmake(m.make_id)}>Cancel</div> }\n            </div>)\n        })\n      } else {\n        return curMakes.filter((m) => m.asset_token_id === tokenPair.tokens[1].id && m.price_token_id === tokenPair.tokens[0].id).map((m) => {\n          return (\n            <div key={m.make_id} className=\"my-make-item\">\n              <div className=\"make-item-detail make-buy\">{PRICE_DECIMALS / m.price}</div>\n              <div className=\"make-item-detail\">{new BigNumber(m.amount).times(m.price).div(PRICE_DECIMALS).div(Math.pow(10, tokenPair.tokens[1].decimals)).toString()}</div>\n              { makeView === 'my' && <div className=\"unmake-btn\" onClick={() => onUnmake(m.make_id)}>Cancel</div> }\n            </div>)\n        })\n      }\n    }\n    return null\n  }\n\n\n\n  async function onMake() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (tokenPair.name && CONTRACT_ADDRESS) {\n      if (price <= 0) {\n        Alert.error('Price should be greater than 0')\n        return\n      }\n      if (amount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const assetToken = tradeType === 'buy' ? tokenPair.tokens[1] : tokenPair.tokens[0]\n        const priceToken = tradeType === 'buy' ? tokenPair.tokens[0] : tokenPair.tokens[1]\n        const tradePrice = tradeType === 'buy' ? 1 / price : price\n        const tradeAmount = tradeType === 'buy' ? total : amount\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: assetToken.id\n          },\n          {\n            type: 'Long',\n            value: priceToken.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(tradePrice).times(PRICE_DECIMALS).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(tradeAmount).times(new BigNumber(10 ** assetToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const makeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: CONTRACT_ADDRESS,\n          operation: 'make',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (makeResult.transaction) {\n          setAmount('')\n          setPrice('')\n          setTotal('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${makeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onUnmake(makeId) {\n    if (account && makeId && CONTRACT_ADDRESS) {\n      try {\n        const unmakeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: CONTRACT_ADDRESS,\n          operation: 'unmake',\n          args: [\n            {\n              type: 'Address',\n              value: account\n            },\n            {\n              type: 'Long',\n              value: makeId\n            }\n          ],\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n        if (unmakeResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${unmakeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function getPriceHint() {\n    if (tokenPair.name) {\n      return tokenPair.tokens[1].name\n    }\n  }\n\n  function getAmountHint() {\n    if (tokenPair.name) {\n      return tokenPair.tokens[0].name\n    }\n  }\n\n  function generateTokenPool() {\n    if (pool.length) {\n      return pool.filter((tp) => Number(tp.balance) !== 0).map((tp) => {\n        return (\n          <div className=\"pool-item\" key={tp.name}>\n            <div className={`icon-${tp.name} token-name`}>{tp.name}</div>\n            <div className=\"token-balance\">{tp.balance}</div>\n          </div>\n        )\n      })\n    }\n  }\n\n  const handlePairClick = (pair) => {\n    setTokenPair(pair)\n    setShowPairSelectModal(false)\n  }\n\n  return (\n    <div className=\"swap-wrapper\">\n      <div className=\"trade-container\">\n        <div className=\"make-wrapper\">\n          <div className=\"container-header\">Trade\n            {\n              tokenPair.name ? (\n                <div className=\"token-pair-select\" onClick={() => setShowPairSelectModal(true)}>\n                  <div className=\"token-pair-name\">{tokenPair.name}</div>\n                </div>\n              ) : null\n            }\n          </div>\n          <div className=\"trade-type-switch\">\n            <div className={`trade-type-item ${tradeType === 'buy' ? 'trade-buy' : ''}`} onClick={() => setTradeType('buy')}>Buy</div>\n            <div className={`trade-type-item ${tradeType === 'sell' ? 'trade-sell' : ''}`} onClick={() => setTradeType('sell')}>Sell</div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Price\n              <span className=\"hint\">{getPriceHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={price} decimals=\"9\" onChange={(amount) => setPrice(amount)} />\n            </div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Amount\n              <span className=\"hint\">{getAmountHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={amount} decimals={tokenPair.tokens ? tokenPair.tokens[0].decimals : '9'} onChange={(amount) => setAmount(amount)} />\n            </div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Total {tradeType === 'buy' ? 'Need' : 'Receive'}\n              <span className=\"hint\">{getPriceHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={total} decimals=\"9\" onChange={(amount) => setTotal(amount)} />\n            </div>\n          </div>\n          { tokenPair.name ? <div className=\"balance-line\">Balance: <span>{tokenBalance} {tradeType === 'buy' ? tokenPair.tokens[1].name : tokenPair.tokens[0].name}</span></div> : null }\n          { feeRate ? <p className=\"fee-rate\">* The fee rate of transaction is {feeRate / 100}%</p> : null }\n          { isValid ? <div className={`make-btn make-btn-${tradeType}`} onClick={() => onMake()}>{tradeType.toUpperCase()} {tokenPair.tokens[0].name}</div> : <div className=\"make-btn disabled\">{tradeType.toUpperCase()} {tokenPair.tokens ? tokenPair.tokens[0].name : ''}</div> }\n        </div>\n        <div className=\"trade-panel\">\n          <div className=\"panel-header\">\n            <div className=\"panel-title\">Order Book</div>\n            <div className=\"tabs\">\n              <div className={makeView === 'all' ? \"tab-wrapper selected\" : \"tab-wrapper\"} onClick={() => setMakeView('all')}>All</div>\n              <div className={makeView === 'my' ? \"tab-wrapper selected\" : \"tab-wrapper\"} onClick={() => onChangeToUserMakeView()}>My</div>\n            </div>\n          </div>\n          <div className=\"list-title\">\n            <div className=\"blank-placeholder\"></div>\n            <div className=\"title-items\">\n              <div className=\"item-text\">Price ({getPriceHint()})</div>\n              <div className=\"item-text\">Amount ({getAmountHint()})</div>\n              { makeView === 'my' && <div className=\"item-placeholder\"></div> }\n            </div>\n          </div>\n          <div className=\"sell-section\">\n            <div className=\"section-title\">Sell</div>\n            <div className=\"make-list reverse\">\n            {getMakes('sell')}\n            </div>\n          </div>\n          {\n            (makeView === 'all' && Number(lastPrice) !== 0) ? <div className=\"last-price-wrapper\">\n              <div className=\"last-price-label\">Last Price</div>\n              <div className=\"last-price\">{lastPrice}</div>\n              <div className=\"last-price-placeholder\"></div>\n            </div> : null\n          }\n          <div className=\"buy-section\">\n            <div className=\"section-title\">Buy</div>\n            <div className=\"make-list\">\n            {getMakes('buy')}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"token-pool\">\n        <div className=\"container-header\">Token Balance</div>\n        <div className=\"pool-items\">\n        {generateTokenPool()}\n        </div>\n      </div>\n      {\n        showPairSelectModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => setShowPairSelectModal(false)}></div>\n              <div className=\"pair-select-modal-wrapper\">\n                <div className=\"pair-select-modal-title\">Select</div>\n                <input type=\"text\" className=\"pair-select-modal-input\" value={pairNameKeyword} onInput={(e) => setPairNameKeyword(e.target.value)} />\n                <div className=\"pair-select-modal-list\">\n                  {\n                    pairs.filter((p) => {\n                      const nameLC = p.name.toLowerCase()\n                      const tNames = pairNameKeyword.split(' ').filter((n) => n)\n                      \n                      return tNames.reduce((a, b) => a && nameLC.indexOf(b) >= 0, true)\n                    }).map((p) => {\n                      return (\n                        <div key={p.name} className=\"pair-select-modal-list-item\" onClick={() => handlePairClick(p)}>\n                          {\n                            p.tokens.map((t) => <div key={`${p.name}-${t.name}`} className={`pair-select-modal-list-item-icon icon-${t.name}`}></div>)\n                          }\n                          <div className=\"pair-select-modal-list-item-name\">{p.name}</div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n    </div>\n  )\n}\n\nexport default Transaction","import React, { useState, useEffect } from 'react'\nimport { useMappedState } from 'redux-react-hook';\nimport Select, { components } from 'react-select'\nimport Input from '../input'\nimport { getTokenBalance } from '../../utils/token'\n\nimport './index.css'\n\nconst TokenInput = (props) => {\n  const { value, round, tokens, defaultTokenId, inputDisabled = false, showBalance = true, withMax = true, onTokenChange, onAmountChange, balanceChange = 0 } = props\n  const [token, setToken] = useState({})\n  const [balance, setBalance] = useState('-')\n  const { account } = useMappedState((state) => ({\n    account: state.wallet.account\n  }))\n\n  useEffect(() => {\n    if (account && showBalance && token.id) {\n      getTokenBalance(account, token, setBalance)\n    }\n  }, [token, showBalance, account, balanceChange])\n\n  const handleTokenChange = (e) => {\n    if (e.value !== token.id) {\n      const newToken = tokens.filter((t) => t.id === e.value)[0]\n\n      setToken(newToken)\n      typeof onTokenChange === 'function' && onTokenChange(newToken)\n    }\n  }\n\n  const renderTokenSeletion = (defaultId) => {\n    if (tokens.length) {\n      const CustomOption = (props) => (\n        <components.Option {...props}>\n          <div className=\"option-wrapper\">\n            <div className={`icon-${props.label} option-icon`}></div>\n            <div className=\"option-label\">{props.label}</div>\n          </div>\n        </components.Option>\n      )\n      const SingleValue = ({ children, ...props }) => (\n        <components.SingleValue {...props}>\n          <div className=\"option-wrapper\">\n            <div className={`icon-${children} option-icon`}></div>\n            <div className=\"option-label\">{children}</div>\n          </div>\n        </components.SingleValue>\n      )\n      let defaultToken = defaultId ? (tokens.find((t) => t.id === defaultId) || tokens[0]) : tokens[0]\n\n      if (!token.id) {\n        setToken(defaultToken)\n      }\n\n      return (\n        <Select\n          className=\"token-select\"\n          defaultValue={defaultToken}\n          options={tokens}\n          isSearchable={false}\n          components={{ Option: CustomOption, SingleValue }}\n          onChange={(e) => handleTokenChange(e)}\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            colors: {\n              ...theme.colors,\n              primary: '#2c2c2c',\n            },\n          })}\n        />\n      )\n    }\n  }\n\n  const maxInput = () => {\n    if (!isNaN(balance) && typeof onAmountChange === 'function') {\n      onAmountChange(balance)\n    }\n  }\n\n  return (\n    <div className=\"token-input-wrapper\">\n      <div className=\"input-label\">{props.label || 'Input'}\n        { showBalance ? <span className=\"hint\">Balance: {balance}</span> : null }\n      </div>\n      <div className=\"input-wrapper\">\n        { renderTokenSeletion(defaultTokenId) }\n        <Input decimals={token.decimals} disabled={inputDisabled} value={value} round={round} onChange={(value) => onAmountChange(value)} />\n        { withMax && <div className=\"input-max-btn\" onClick={() => maxInput()}>MAX</div> }\n      </div>\n    </div>\n  )\n}\n\nexport default TokenInput\n","import { useEffect, useCallback } from 'react'\nimport { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\n\nconst { StringReader, reverseHex } = utils\n\nexport const useFetchPairs = () => {\n  const { account, tokens, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setSwapTokens = useCallback((tokens) => dispatch({ type: 'SET_SWAP_TOKENS', tokens }), [])\n  const setPairs = useCallback((pairs) => dispatch({ type: 'SET_PAIRS', pairs }), [])\n\n  useEffect(() => {\n    getSwapStat()\n    let interval = setInterval(getSwapStat, 3000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, tokens, swapTokens, SWAP_ADDRESS])\n\n  function getSwapStat() {\n    if (SWAP_ADDRESS) {\n      try {\n        client.api.smartContract.invokeWasmRead({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'stat',\n          args: []\n        })\n        .then((pairStr) => {\n          const parsedPairs = []\n          const strReader = new StringReader(pairStr)\n          const pairCount = strReader.readNextLen()\n          for (let i = 0; i < pairCount; i++) {\n            const pair = {}\n            pair.address = reverseHex(strReader.read(20))\n            pair.token1 = strReader.readUint128()\n            pair.token2 = strReader.readUint128()\n            pair.id = strReader.readUint128()\n            pair.reserve1 = strReader.readUint128()\n            pair.reserve2 = strReader.readUint128()\n            pair.lp = strReader.readUint128()\n\n            parsedPairs.push(pair)\n          }\n\n          const tokenIds = []\n          const tokenCount = strReader.readNextLen()\n          for (let i = 0; i < tokenCount; i++) {\n            tokenIds.push(strReader.readUint128())\n          }\n\n          setPairs(parsedPairs)\n          if (tokens.length && !swapTokens.length) {\n            setSwapTokens(tokenIds.map((t) => tokens.find((tk) => tk.id === t)))\n          }\n        })\n        .catch((e) => {\n          console.log(e)\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  return null\n}","const REST = 0.997\n\nexport const findAllPaths = (pairs, sourceId, targetId) => {\n  let pathArr = []\n  const findPath = (sourceId, targetId, pathNodes = []) => {\n    pathNodes = [...pathNodes]\n    pathNodes.push(sourceId)\n\n    if (sourceId === targetId) {\n      pathArr.push(pathNodes)\n      return\n    }\n\n    let neighborNodes = []\n    pairs.map((p) => {\n      if (p.token1 === sourceId) {\n        neighborNodes.push(p.token2)\n      } else if (p.token2 === sourceId) {\n        neighborNodes.push(p.token1)\n      }\n    })\n\n    for (let id of neighborNodes) {\n      if (!pathNodes.includes(id)) {\n        findPath(id, targetId, pathNodes)\n      }\n    }\n  }\n\n  findPath(sourceId, targetId)\n\n  pathArr.sort((p1, p2) => {\n    return p1.length - p2.length\n  })\n  \n  return pathArr\n}\n\nconst getInputAmount = (output, pair, reverse = false) => {\n  let amount\n  if (reverse) {\n    amount = (pair.reserve1 * pair.reserve2 / (pair.reserve1 - output) - pair.reserve2) / REST\n  } else {\n    amount = (pair.reserve1 * pair.reserve2 / (pair.reserve2 - output) - pair.reserve1) / REST\n  }\n  return Math.ceil(amount)\n}\n\nconst getOutputAmount = (input, pair, reverse = false) => {\n  let amount\n  if (reverse) {\n    amount = pair.reserve1 - pair.reserve1 * pair.reserve2 / (pair.reserve2 + REST * input)\n  } else {\n    amount = pair.reserve2 - pair.reserve1 * pair.reserve2 / (pair.reserve1 + REST * input)\n  }\n  return Math.floor(amount)\n}\n\nconst findNextOutput = (input, pairs, token1, token2) => {\n  let pair = pairs.find((p) => p.token1 === token1 && p.token2 === token2)\n\n  if (pair) {\n    return getOutputAmount(input, pair)\n  }\n\n  pair = pairs.find((p) => p.token1 === token2 && p.token2 === token1)\n\n  if (pair) {\n    return getOutputAmount(input, pair, true)\n  }\n}\n\nconst findPrevInput = (output, pairs, token1, token2) => {\n  let pair = pairs.find((p) => p.token1 === token1 && p.token2 === token2)\n\n  if (pair) {\n    return getInputAmount(output, pair)\n  }\n\n  pair = pairs.find((p) => p.token1 === token2 && p.token2 === token1)\n\n  if (pair) {\n    return getInputAmount(output, pair, true)\n  }\n}\n\nexport const bestSwap = (type = 'exactin', amount, pairs, token1, token2) => {\n  const paths = findAllPaths(pairs, token1, token2)\n  const originAmount = amount\n  let maxOutput = 0\n  let minInput = Infinity\n  let path = []\n  \n  for (let i = 0; i < paths.length; i++) {\n    amount = originAmount\n    if (type === 'exactin') {\n      for (let j = 0; j < paths[i].length - 1; j++) {\n        amount = findNextOutput(amount, pairs, paths[i][j], paths[i][j + 1])\n      }\n  \n      if (amount > maxOutput) {\n        maxOutput = amount\n        path = paths[i]\n      }\n    } else {\n      for (let j = paths[i].length - 1; j > 0; j--) {\n        amount = findPrevInput(amount, pairs, paths[i][j - 1], paths[i][j])\n      }\n  \n      if (amount < minInput && amount > 0) {\n        minInput = amount\n        path = paths[i]\n      }\n    }\n  }\n\n  if (type === 'exactin') {\n    return [maxOutput, path]\n  } else if (type === 'exactout') {\n    return [minInput, path]\n  }\n}\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport TokenInput from '../../components/tokenInput'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport { toLocaleFixed } from '../../utils/common'\nimport { bestSwap } from '../../utils/swap'\nimport './index.css'\n\nconst Swap = () => {\n  const [swapType, setSwapType] = useState('exactin')\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState('')\n  const [token2Amount, setToken2Amount] = useState('')\n  const [isValidPair, setIsValidPair] = useState(false)\n  const [isValidSwap, setIsValidSwap] = useState(false)\n  const [bestPath, setBestPath] = useState([])\n  const [showPrice, setShowPrice] = useState(false)\n  const [balanceChange, setBalanceChange] = useState(0)\n  const { account, slippage, pairs, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    pairs: state.swap.pairs,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (token1.id !== token2.id && token1Amount > 0 && token2Amount > 0 && bestPath.length) {\n      setShowPrice(true)\n      setIsValidSwap(true)\n    } else {\n      setShowPrice(false)\n      setIsValidSwap(false)\n    }\n  }, [token1, token2, token1Amount, token2Amount, bestPath])\n\n  useEffect(() => {\n    if (swapTokens.length) {\n      setToken1(swapTokens[0])\n      setToken2(swapTokens[1])\n    }\n  }, [swapTokens])\n\n  useEffect(() => {\n    if (token1.id && token2.id && validPair(token1.id, token2.id)) {\n      setIsValidPair(true)\n    } else {\n      setIsValidPair(false)\n    }\n  }, [token1, token2])\n\n  function validPair(token1, token2) {\n    if (pairs.length) {\n      if (token1 && token2 && pairs.find((p) => (p.token1 === token1 && p.token2 === token2) || (p.token1 === token2 && p.token2 === token1))) {\n        return true\n      }\n    }\n    return false\n  }\n\n  function onChangeToken1(token) {\n    if (token.id !== token1.id) {\n      setToken1(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onChangeToken2(token) {\n    if (token.id !== token2.id) {\n      setToken2(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onToken1AmountChange(amount) {\n    if (amount !== token1Amount) {\n      setSwapType('exactin')\n      setToken1Amount(amount)\n      if (pairs.length && amount) {\n        const inputAmount = amount * (10 ** token1.decimals)\n        const [maxOutput, path] = bestSwap('exactin', inputAmount, pairs, token1.id, token2.id)\n\n        setToken2Amount(new BigNumber(maxOutput).div(10 ** token2.decimals).toString())\n        setBestPath(path)\n      } else if (Number(amount) === 0) {\n        setToken2Amount('')\n      }\n    }\n  }\n\n  function onToken2AmountChange(amount) {\n    if (amount !== token2Amount) {\n      setSwapType('exactout')\n      setToken2Amount(amount)\n      if (pairs.length && amount) {\n        const outputAmount = amount * (10 ** token2.decimals)\n        const [minInput, path] = bestSwap('exactout', outputAmount, pairs, token1.id, token2.id)\n\n        if (minInput === Infinity) {\n          setToken1Amount('')\n        } else {\n          setToken1Amount(new BigNumber(minInput).div(10 ** token1.decimals).toString())\n        }\n        setBestPath(path)\n      } else if (Number(amount) === 0) {\n        setToken1Amount('')\n      }\n    }\n  }\n\n  function onNavigateToPool() {\n    history.push('/pool')\n  }\n\n  async function handleSwap() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (token1Amount <= 0 || token2Amount <= 0) {\n      Alert.error('Amount should be greater than 0')\n      return\n    }\n    if (token1.id && token1.id === token2.id) {\n      Alert.error('Input should be different')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Array',\n            value: bestPath.map((p) => ({ type: 'Long', value: p }))\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const swapResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: swapType === 'exactin' ? 'swap_exact_tokens_for_tokens' : 'swap_tokens_for_exact_tokens',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (swapResult.transaction) {\n          setBalanceChange(balanceChange + 1)\n          setToken1Amount('')\n          setToken2Amount('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${swapResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function getPrice() {\n    return `${toLocaleFixed(token2Amount / token1Amount, 6)} ${token2.name} per ${token1.name}`\n  }\n\n  function getMinReceiveOrMaxSold() {\n    if (swapType === 'exactin') {\n      return <p>Minimum Received:<span>{toLocaleFixed(token2Amount * (1 - slippage / 100), 6)} {token2.name}</span></p>\n    } else {\n      return <p>Maximum Sold:<span>{toLocaleFixed(token1Amount * (1 + slippage / 100), 6)} {token1.name}</span></p>\n    }\n  }\n\n  function getPriceImpact() {\n    let price\n    let pair = pairs.find((p) => p.token1 === token1.id && p.token2 === token2.id)\n\n    if (pair) {\n      price = (pair.reserve2 / (10 ** token2.decimals)) / (pair.reserve1 / (10 ** token1.decimals))\n    } else {\n      pair = pairs.find((p) => p.token1 === token2.id && p.token2 === token1.id)\n\n      if (pair) {\n        price = (pair.reserve1 / (10 ** token1.decimals)) / (pair.reserve2 / (10 ** token2.decimals))\n      }\n    }\n\n    return <p>Price Impact:<span>{Math.abs((token2Amount / token1Amount - price) / price * 100).toFixed(2)}%</span></p>\n  }\n\n  function getBestPath() {\n    if (bestPath.length) {\n      const items = []\n      bestPath.map((t, index) => {\n        const token = swapTokens.find((tk) => tk.id === t)\n        index > 0 && items.push((<div className=\"icon-arrow-right\"></div>))\n        items.push((<div className={`path-icon icon-${token.name}`}>{token.name}</div>))\n\n        return t\n      })\n\n      return items\n    }\n  }\n\n  return (\n    <div className=\"sw-wrapper\">\n      <div className=\"sw-container\">\n        <div className=\"sw-tabs\">\n          <div className=\"sw-tab active\">Swap</div>\n          <div className=\"sw-tab\" onClick={() => onNavigateToPool()}>Pool</div>\n        </div>\n        <div className=\"sw-content\">\n          <TokenInput\n            balanceChange={balanceChange}\n            label=\"From\"\n            tokens={swapTokens}\n            value={token1Amount}\n            round='up'\n            onTokenChange={(token) => onChangeToken1(token)}\n            onAmountChange={(amount) => onToken1AmountChange(amount)} />\n          <div className=\"icon-arrow-down\"></div>\n          <TokenInput\n            balanceChange={balanceChange}\n            label=\"To\"\n            tokens={swapTokens}\n            value={token2Amount}\n            round='down'\n            defaultTokenId={swapTokens.length && swapTokens[1].id}\n            onTokenChange={(token) => onChangeToken2(token)}\n            onAmountChange={(amount) => onToken2AmountChange(amount)} />\n          { showPrice ? <div className=\"sw-price-wrapper\">Price<span className=\"sw-price-info\">{getPrice()}</span></div> : null }\n          { isValidPair ? null : <div className=\"add-liquidity-hint\">Add liquidity to enable swaps for this pair.</div> }\n          { isValidPair ? ( isValidSwap ? <div className=\"sw-swap-btn\" onClick={() => handleSwap()}>Swap</div> : <div className=\"sw-swap-btn disabled\">Swap</div> ) : <div className=\"sw-swap-btn disabled\">Invalid Liquidity</div> }\n        </div>\n        {\n          isValidPair && isValidSwap ? (\n            <div className=\"sw-hint-wrapper\">\n              <div className=\"sw-input-output\">{getMinReceiveOrMaxSold()}</div>\n              <div className=\"sw-price-impact\">{getPriceImpact()}</div>\n              <div className=\"sw-best-path\">\n                <p>Route:</p>\n                <div className=\"sw-best-path-list\">\n                  {getBestPath()}\n                </div>\n              </div>\n            </div>\n          ) : null\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Swap\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState } from 'redux-react-hook';\nimport { utils } from 'ontology-ts-sdk'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Pool = () => {\n  const [liquidityBalance, setLiquidityBalance] = useState([])\n  const { account, tokens, pairs, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (account && pairs.length && SWAP_ADDRESS) {\n      const getLiquidityBalanceByPairId = (id) => {\n        return client.api.smartContract.invokeWasmRead({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'balanceOf',\n          args: [\n            {\n              type: 'Long',\n              value: id\n            },\n            {\n              type: 'Address',\n              value: account\n            }\n          ]\n        }).then((resp) => {\n          const strReader = new StringReader(resp)\n          const balance = strReader.readUint128()\n          \n          return { [id]: balance }\n        })\n      }\n      Promise.all(pairs.map((p) => getLiquidityBalanceByPairId(p.id))).then((resp) => {\n        setLiquidityBalance(resp)\n      })\n    }\n  }, [account, pairs, SWAP_ADDRESS])\n\n  function onNavigateToSwap() {\n    history.push('/swap')\n  }\n\n  function onNavigateToAddLiquidity() {\n    history.push('/pool/add')\n  }\n\n  function onRemoveLiquidity(pairId) {\n    history.push(`/pool/remove/${pairId}`)\n  }\n\n  function generateLiquidityList() {\n    const myLiquidities = liquidityBalance.filter((l) => l[Object.keys(l)[0]])\n    if (myLiquidities.length && pairs.length && tokens.length) {\n      return myLiquidities.map((lb) => {\n        const pairId = Object.keys(lb)[0]\n        const pair = pairs.find((p) => `${p.id}` === pairId)\n        const token1 = tokens.find((t) => t.id === pair.token1)\n        const token2 = tokens.find((t) => t.id === pair.token2)\n        const balance = lb[pairId] / (10 ** 18)\n        const shareOfPool = Math.sqrt(Math.pow(balance, 2) / (pair.reserve1 * pair.reserve2 / (10 ** (token1.decimals + token2.decimals))))\n        const token1Amount = (pair.reserve1 * shareOfPool / (10 ** token1.decimals)).toFixed(token1.decimals)\n        const token2Amount = (pair.reserve2 * shareOfPool / (10 ** token2.decimals)).toFixed(token2.decimals)\n        \n        return (\n          <div className=\"pool-liquidity-item\">\n            <div className=\"liquidity-item-detail\">\n              <div className={`token-icon icon-${token1.name}`}></div>\n              <div className={`token-icon icon-${token2.name}`}></div>\n              <div className=\"token-pair\"><strong>{token1.name}/{token2.name}</strong></div>\n              <div className=\"pair-position\"><strong>Pooled</strong>: {token1Amount} / {token2Amount}</div>\n              <div className=\"pool-tokens\"><strong>Pool Tokens</strong>: {balance.toFixed(9)}</div>\n            </div>\n            <div className=\"remove-liquidity-btn\" onClick={() => onRemoveLiquidity(pairId)}>Remove</div>\n          </div>\n        )\n      })\n    } else {\n      return <div className=\"pool-empty-lp\">No Liquidities</div>\n    }\n  }\n\n  return (\n    <div className=\"pool-wrapper\">\n      <div className=\"pool-container\">\n        <div className=\"sw-tabs\">\n          <div className=\"sw-tab\" onClick={() => onNavigateToSwap()}>Swap</div>\n          <div className=\"sw-tab active\">Pool</div>\n        </div>\n        <div className=\"pool-content\">\n          <div className=\"pool-add-liquidity-btn\" onClick={() => onNavigateToAddLiquidity()}>Add Liquidity</div>\n          <div className=\"pool-liquidity-list\">\n            <div className=\"my-liquidity\">Your Liquidity</div>\n            {generateLiquidityList()}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Pool","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport TokenInput from '../../../components/tokenInput'\nimport { useFetchPairs } from '../../../hooks/usePair';\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\nimport './index.css'\n\nconst AddLiquidity = () => {\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState('')\n  const [token2Amount, setToken2Amount] = useState('')\n  const [isValidPair, setIsValidPair] = useState(true)\n  const [isFirstProvider, setIsFirstProvider] = useState(false)\n  const [showPriceInfo, setShowPriceInfo] = useState(false)\n  const [balanceChange, setBalanceChange] = useState(0)\n  const { account, slippage, pairs, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    pairs: state.swap.pairs,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (!token1.id || !token2.id || (token1.id === token2.id)) {\n      setIsValidPair(false)\n    } else {\n      setIsValidPair(true)\n    }\n  }, [token1, token2])\n\n  useEffect(() => {\n    if (token1.id && token2.id && token1.id != token2.id && (!pairs.length || !getPairByToken())) {\n      setIsFirstProvider(true)\n    } else {\n      setIsFirstProvider(false)\n    }\n  }, [pairs, token1, token2])\n\n  useEffect(() => {\n    if (token1.id && token2.id) {\n      setShowPriceInfo(true)\n    } else {\n      setShowPriceInfo(false)\n    }\n  }, [pairs, token1, token2, token1Amount, token2Amount])\n\n  useEffect(() => {\n    if (swapTokens.length) {\n      setToken1(swapTokens[0])\n      setToken2(swapTokens[1])\n    }\n  }, [account, swapTokens])\n\n  function getPairByToken() {\n    return pairs.find((p) => (p.token1 === token1.id && p.token2 === token2.id) || (p.token1 === token2.id && p.token2 === token1.id))\n  }\n\n  function onChangeToken1(token) {\n    if (token.id !== token1.id) {\n      setToken1(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onChangeToken2(token) {\n    if (token.id !== token2.id) {\n      setToken2(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onToken1AmountChange(amount) {\n    setToken1Amount(amount)\n    if (pairs.length && !!getPairByToken()) {\n      if (amount) {\n        setToken2Amount(Math.ceil(amount * getPairPrice() * (10 ** token2.decimals)) / (10 ** token2.decimals))\n      } else if (Number(amount) === 0) {\n        setToken2Amount('')\n      }\n    }\n  }\n\n  function onToken2AmountChange(amount) {\n    setToken2Amount(amount)\n    if (pairs.length && !!getPairByToken()) {\n      if (amount) {\n        setToken1Amount(Math.ceil(amount / getPairPrice() * (10 ** token1.decimals)) / (10 ** token1.decimals))\n      } else if (Number(amount) === 0) {\n        setToken1Amount('')\n      }\n    }\n  }\n\n  function getPairPrice() {\n    if (token1.id && token2.id && pairs.length) {\n      if (isFirstProvider && token1Amount && token2Amount) {\n        return token2Amount / token1Amount\n      }\n      let pair = pairs.find((p) => p.token1 === token1.id && p.token2 === token2.id)\n      if (pair) {\n        return (pair.reserve2 / (10 ** token2.decimals)) / (pair.reserve1 / (10 ** token1.decimals))\n      }\n      pair = pairs.find((p) => p.token1 === token2.id && p.token2 === token1.id)\n      if (pair) {\n        return (pair.reserve1 / (10 ** token1.decimals)) / (pair.reserve2 / (10 ** token2.decimals))\n      }\n    }\n\n    return 0\n  }\n\n  function getShareOfPool() {\n    if (isFirstProvider) {\n      return '100%'\n    } else {\n      const pair = getPairByToken()\n      const amountProduct = token1Amount * (10 ** token1.decimals) * token2Amount * (10 ** token2.decimals)\n\n      if (pair) {\n        return `${(amountProduct / (amountProduct + pair.reserve1 * pair.reserve2) * 100).toFixed(2)}%`\n      }\n      return `0%`\n    }\n  }\n\n  function onNavigateToPool() {\n    history.goBack()\n  }\n\n  async function onAdd() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (token1Amount <= 0 || token2Amount <= 0) {\n      Alert.error('Amount should be greater than 0')\n      return\n    }\n    if (token1.id && token1.id === token2.id) {\n      Alert.error('Input should be different')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: token1.id\n          },\n          {\n            type: 'Long',\n            value: token2.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const addResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'add_liquidity',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (addResult.transaction) {\n          setBalanceChange(balanceChange + 1)\n          setToken1Amount('')\n          setToken2Amount('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${addResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"add-liquidity-wrapper\">\n      <div className=\"al-header\">Add Liquidity\n        <div className=\"back-icon\" onClick={() => onNavigateToPool()}></div>\n      </div>\n      <div className=\"al-wrapper\">\n        {\n          isValidPair && isFirstProvider ? (\n            <div className=\"first-provider-hint\">\n              <div><strong>You are the first liquidity provider.</strong><br /><br />The ratio of tokens you add will set the price of this pool.</div>\n            </div>\n          ) : null\n        }\n        <TokenInput\n          balanceChange={balanceChange}\n          tokens={swapTokens}\n          value={token1Amount}\n          onTokenChange={(token) => onChangeToken1(token)}\n          onAmountChange={(amount) => onToken1AmountChange(amount)} />\n        <div className=\"icon-plus\"></div>\n        <TokenInput\n          balanceChange={balanceChange}\n          tokens={swapTokens}\n          value={token2Amount}\n          defaultTokenId={swapTokens.length && swapTokens[1].id}\n          onTokenChange={(token) => onChangeToken2(token)}\n          onAmountChange={(amount) => onToken2AmountChange(amount)} />\n        {\n          isValidPair && showPriceInfo ? (\n            <div className=\"al-price-wrapper\">\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{getPairPrice().toFixed(4)}</div>\n                <div className=\"price-item-label\">{token2.name} per {token1.name}</div>\n              </div>\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{(getPairPrice() ? 1 / getPairPrice() : 0).toFixed(4)}</div>\n                <div className=\"price-item-label\">{token1.name} per {token2.name}</div>\n              </div>\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{getShareOfPool()}</div>\n                <div className=\"price-item-label\">Share of Pool</div>\n              </div>\n            </div>\n          ) : null\n        }\n        <div className=\"al-add-btn\" onClick={() => onAdd()}>Add</div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddLiquidity\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { utils } from 'ontology-ts-sdk'\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport Slider from 'rc-slider'\nimport { useFetchPairs } from '../../../hooks/usePair';\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\nimport 'rc-slider/assets/index.css'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst RemoveLiquidity = () => {\n  const [liquidityBalance, setLiquidityBalance] = useState(0)\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState(0)\n  const [token2Amount, setToken2Amount] = useState(0)\n  const [pair, setPair] = useState({})\n  const [amount, setAmount] = useState(0)\n  const [showPrice, setShowPrice] = useState(false)\n  const { account, slippage, tokens, pairs, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n  const location = useLocation()\n  const pairId = location.pathname.match(/\\/([^/]+)$/)[1]\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (account && pairs.length && pairId) {\n      getLiquidityBalanceByPairId(pairId).then((resp) => {\n        setLiquidityBalance(resp)\n      })\n    }\n  }, [account, pairs, SWAP_ADDRESS])\n\n  useEffect(() => {\n    if (tokens.length && pairs.length && pairId) {\n      const pair = pairs.find((p) => `${p.id}` === pairId)\n      setPair(pair)\n      setToken1(tokens.find((t) => t.id === pair.token1))\n      setToken2(tokens.find((t) => t.id === pair.token2))\n      setShowPrice(true)\n    }\n  }, [pairs, tokens])\n\n  useEffect(() => {\n    if (pair && token1.id && token2.id && pairId && liquidityBalance) {\n      const balance = liquidityBalance / (10 ** 18)\n      const shareOfPool = Math.sqrt(Math.pow(balance, 2) / (pair.reserve1 * pair.reserve2 / (10 ** (token1.decimals + token2.decimals))))\n      const token1Amount = (pair.reserve1 * shareOfPool / (10 ** token1.decimals))\n      const token2Amount = (pair.reserve2 * shareOfPool / (10 ** token2.decimals))\n\n      setToken1Amount(amount / 100 * token1Amount)\n      setToken2Amount(amount / 100 * token2Amount)\n    }\n  }, [amount, pair, token1, token2])\n\n  function getLiquidityBalanceByPairId(id) {\n    if (SWAP_ADDRESS) {\n      return client.api.smartContract.invokeWasmRead({\n        scriptHash: SWAP_ADDRESS,\n        operation: 'balanceOf',\n        args: [\n          {\n            type: 'Long',\n            value: id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n      }).then((resp) => {\n        const strReader = new StringReader(resp)\n        const balance = strReader.readUint128()\n        \n        return balance\n      })\n    }\n  }\n\n  function getPairPrice() {\n    return (pair.reserve2 / (10 ** token2.decimals)) / (pair.reserve1 / (10 ** token1.decimals))\n  }\n\n  function onNavigateToPool() {\n    history.goBack()\n  }\n\n  async function onRemove() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: token1.id\n          },\n          {\n            type: 'Long',\n            value: token2.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(liquidityBalance).times(amount / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(10 ** token1.decimals).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(10 ** token2.decimals).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const addResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'remove_liquidity',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (addResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${addResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"remove-liquidity-wrapper\">\n      <div className=\"rl-header\">Remove Liquidity\n        <div className=\"back-icon\" onClick={() => onNavigateToPool()}></div>\n      </div>\n      <div className=\"rl-wrapper\">\n        <div className=\"rl-amount\">\n          <div className=\"rl-amount-label\">Amount<span>{amount}%</span></div>\n          <Slider value={amount} onChange={(e) => setAmount(e)} />\n          <div className=\"quick-items\">\n            <div className=\"quick-item\" onClick={() => setAmount(25)}>25%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(50)}>50%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(75)}>75%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(100)}>Max</div>\n          </div>\n        </div>\n        <div className=\"icon-arrow-down\"></div>\n        <div className=\"rl-receive-wrapper\">\n          <div className={`receive-token-item icon-${token1.name}`}>\n            {token1.name}\n            <span>{token1Amount}</span>\n          </div>\n          <div className={`receive-token-item icon-${token2.name}`}>\n            {token2.name}\n            <span>{token2Amount}</span>\n          </div>\n        </div>\n        {\n          showPrice ? (\n            <div className=\"rl-price-wrapper\">\n              <div className=\"price-wrapper-lable\">Price</div>\n              <div className=\"price\">1 {token1.name} = {getPairPrice()} {token2.name}</div>\n              <div className=\"price-reverse\">1 {token2.name} = {1 / getPairPrice()} {token1.name}</div>\n            </div>\n          ) : null\n        }\n        { amount ? <div className=\"rl-remove-btn\" onClick={() => onRemove()}>Remove</div> : <div className=\"rl-remove-btn disabled\">Remove</div> }\n      </div>\n    </div>\n  )\n}\n\nexport default RemoveLiquidity","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport Tooltip from 'rc-tooltip'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { getTokenIconDom } from '../../utils/token'\n\nimport 'rc-tooltip/assets/bootstrap.css'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Staking = () => {\n  const [showClosed, setShowClosed] = useState(false)\n  const { account, tokens, stakingTokens, STAKING_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    stakingTokens: state.staking.tokens,\n    STAKING_ADDRESS: state.gov.poolStat.pools.staking.address\n  }))\n  const dispatch = useDispatch()\n  const setStakingTokens = useCallback((tokens) => dispatch({ type: 'SET_STAKING_TOKENS', tokens }), [])\n  const history = useHistory()\n  const Alert = useAlert()\n\n  useEffect(() => {\n    getStakingTokenBalance()\n    let interval = setInterval(() => getStakingTokenBalance, 2000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokens, STAKING_ADDRESS])\n\n  function getStakingTokenBalance() {\n    if (tokens.length && STAKING_ADDRESS) {\n      try {\n        client.api.smartContract.invokeWasmRead({\n          scriptHash: STAKING_ADDRESS,\n          operation: 'stat',\n          args: []\n        }).then((statStr) => {\n          const parsedTokens = []\n          const strReader = new StringReader(statStr)\n          const tokenCount = strReader.readNextLen()\n          for (let i = 0; i < tokenCount; i++) {\n            const token = {}\n            token.id = strReader.readUint128()\n            const tempToken = tokens.find((t) => t.id === token.id)\n            token.weight = strReader.readUint128()\n            token.balance = strReader.readUint128()\n\n            parsedTokens.push(Object.assign(tempToken, token))\n          }\n\n          const totalWeight = parsedTokens.filter((t) => t.balance).reduce((a, b) => a + b.weight, 0)\n          const filteredTokens = parsedTokens.map((t) => {\n            return {\n              ...t,\n              originWeight: t.weight,\n              weight: t.balance ? (t.weight / totalWeight) : 0\n            }\n          })\n\n          setStakingTokens(filteredTokens)\n        })\n        .catch((e) => {\n          console.log(e)\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  // useEffect(() => {\n  //   client.api.smartContract.invokeWasmRead({\n  //     scriptHash: STAKING_ADDRESS,\n  //     operation: 'staking_info',\n  //     args: []\n  //   })\n  //   .then((infoStr) => {\n  //     const info = {}\n  //     const strReader = new StringReader(infoStr)\n  //     info.amount = strReader.readUint128()\n  //     info.period = strReader.readUint128()\n  //     info.start_time = strReader.readUint128()\n  //     info.settled_time = strReader.readUint128()\n  //     info.interest = info.amount / info.period\n\n  //     setStakingInfo(info)\n  //   })\n  //   .catch((e) => {\n  //     handleError(e, (errorCode) => {\n  //       if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n  //         setStopStakingInterval(true)\n  //       } else {\n  //         console.log('get staking info', e)\n  //       }\n  //     })\n  //   })\n  // }, [])\n\n  function onSelectToken(token) {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    history.push(`/staking/${token.id}`)\n  }\n\n  function getTip(token) {\n    return `${token.name} is the hidden receipt for WING ${token.name.replace('f', '')} suppliers`\n  }\n\n  function generateStakingPool() {\n    if (stakingTokens.length) {\n      const openStakingTokens = stakingTokens.filter((t) => !!t.originWeight)\n      const closedStakingTokens = stakingTokens.filter((t) => !t.originWeight)\n\n      return (showClosed ? closedStakingTokens : openStakingTokens).map((token) => {\n        return (\n          <div className={`pool-list-item ${!showClosed ? '' : 'pool-list-item-disabled'}`} key={token.name}>\n            <div className=\"item-detail\">\n              <div className=\"item-detail-wrapper\">\n                { token.ty === 3 && <div className=\"corner-badge\">10X</div> }\n                <div className=\"staking-token\">\n                  {\n                    token.ty === 3 ? (\n                      <div className=\"staking-text\">Deposit\n                        {getTokenIconDom(token, 'stake-lp-token')}\n                      </div>\n                    ) : (\n                      <div className={`staking-text icon-${token.name}`}>Deposit</div>\n                    )\n                  }\n                  {\n                    token.name.startsWith('f') ? (\n                      <Tooltip placement=\"top\" overlay={getTip(token)}>\n                        <div className=\"staking-token-name\">{token.name}</div>\n                      </Tooltip>\n                    ) : <div className=\"staking-token-name\">{token.name}</div>\n                  }\n                </div>\n                <div className=\"earn-line\">Earn<span>UNX</span></div>\n                <div className=\"total-staking\">Total Staking<span>{new BigNumber(token.balance || 0).div(10 ** token.decimals).toString()}</span></div>\n                <div className=\"select-btn\" onClick={() => onSelectToken(token)}>{ showClosed ? 'Unstake' : 'Stake' }</div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    }\n  }\n\n  return (\n    <div className=\"stake-container\">\n      <div className=\"stake-pool\">\n        { !stakingTokens.length ? <div className=\"title\">Loading...</div> : null }\n        {\n          showClosed ? (\n            <div className=\"unstake-pool-title\">\n              <div className=\"back-icon\" onClick={() => setShowClosed(false)}></div>\n              Unstake from Closed Pool\n            </div>\n          ) : null\n        }\n        <div className=\"pool-list\">\n          {generateStakingPool()}\n        </div>\n        { !showClosed ? <div className=\"closed-pool-entrance\" onClick={() => setShowClosed(true)}>Unstake from Closed Pool</div> : null }\n      </div>\n    </div>\n  )\n}\n\nexport default Staking","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport Tooltip from 'rc-tooltip';\nimport Input from '../../../components/input'\nimport { getTokenBalance, getTokenIconDom } from '../../../utils/token'\nimport { GOVERNANCE_ADDRESS, TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\n\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst StakingDetail = (props) => {\n  const [stakeToken, setStakeToken] = useState({})\n  const [tokenBalance, setTokenBalance] = useState('-')\n  const [amount, setAmount] = useState('')\n  const [myStake, setMyStake] = useState({})\n  const [stakeType, setStakeType] = useState('stake')\n  const [claimableWing, setClaimableWing] = useState(0)\n  const [showStakingModal, setShowStakingModal] = useState(false)\n  const { account, tokens, stakingTokens, STAKING_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    stakingTokens: state.staking.tokens,\n    STAKING_ADDRESS: state.gov.poolStat.pools.staking.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const Alert = useAlert()\n  const location = useLocation()\n  const history = useHistory()\n  const tokenId = location.pathname.match(/\\/([^/]+)$/)[1]\n  const tokenWeight = stakingTokens.find((t) => `${t.id}` === tokenId).originWeight\n\n  useEffect(() => {\n    if (account && tokens.length) {\n      const sToken = tokens.find((t) => `${t.id}` === tokenId)\n\n      setStakeToken(sToken)\n      getTokenBalance(account, sToken, setTokenBalance)\n    }\n  }, [tokens, account])\n\n\n  useEffect(() => {\n    const getClaimableWing = () => {\n      if (account && stakeToken.ty === 2) {\n        client.api.smartContract.invokeWasmRead({\n          scriptHash: GOVERNANCE_ADDRESS,\n          operation: 'claimable_wing',\n          args: [\n            {\n              type: 'Address',\n              value: account\n            },\n            {\n              type: 'Long',\n              value: stakeToken.id\n            }\n          ]\n        }).then((resp) => {\n          const strReader = new StringReader(resp)\n\n          setClaimableWing(strReader.readUint128())\n        })\n      }\n    }\n\n    getClaimableWing()\n    let interval = setInterval(getClaimableWing, 10000)\n\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, stakeToken])\n\n  useEffect(() => {\n    if (account && stakeToken.id && STAKING_ADDRESS) {\n      getAccountStake()\n      const interval = setInterval(getAccountStake, 10000)\n      return () => {\n        interval && clearInterval(interval)\n      }\n    }\n  }, [stakeToken, account, STAKING_ADDRESS])\n\n  useEffect(() => {\n    if (!account) {\n      setMyStake({})\n    }\n  }, [account])\n\n  function getAccountStakeByTokenId(id) {\n    return client.api.smartContract.invokeWasmRead({\n      scriptHash: STAKING_ADDRESS,\n      operation: 'account_stake_info',\n      args: [\n        {\n          type: 'Address',\n          value: account\n        },\n        {\n          type: 'Long',\n          value: id\n        }\n      ]\n    }).then((stakeStr) => {\n      const strReader = new StringReader(stakeStr)\n      return {\n        id,\n        balance: new BigNumber(strReader.readUint128() || 0).div(10 ** (stakeToken.decimals || 0)).toString(),\n        interest: strReader.readUint128()\n      }\n    })\n  }\n\n  function getAccountStake() {\n    getAccountStakeByTokenId(tokenId)\n    .then((stake) => {\n      setMyStake(stake)\n    })\n    .catch((e) => {\n      console.log('get account stakes', e)\n    })\n  }\n\n  function handleStakeClick(action) {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    setStakeType(action)\n    setShowStakingModal(true)\n  }\n\n  async function onStake() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (stakeToken.id && STAKING_ADDRESS) {\n      if (amount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      if (stakeType === 'unstake' && amount > myStake.balance) {\n        Alert.error('Amount should be less than your balance')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: stakeToken.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(amount).times(new BigNumber(10 ** stakeToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const param = {\n          scriptHash: STAKING_ADDRESS,\n          operation: stakeType,\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        }\n\n        const stakeResult = await client.api.smartContract.invokeWasm(param)\n\n        if (stakeResult.transaction) {\n          setShowStakingModal(false)\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${stakeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setShowStakingModal(false)\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onHarvest() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (STAKING_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: stakeToken.id\n          }\n        ]\n        const param = {\n          scriptHash: STAKING_ADDRESS,\n          operation: 'harvest',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        }\n\n        const harvestResult = await client.api.smartContract.invokeWasm(param)\n\n        if (harvestResult.transaction) {\n          setShowStakingModal(false)\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${harvestResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function onNavigateToStaking() {\n    history.goBack()\n  }\n\n  const maxInput = () => {\n    if (stakeType === 'stake' && !isNaN(tokenBalance)) {\n      setAmount(tokenBalance)\n    } else if (stakeType === 'unstake' && !isNaN(myStake.balance)) {\n      setAmount(myStake.balance)\n    }\n  }\n\n  return (\n    <div className=\"stake-container\">\n      <div className=\"stake-title\">\n        <div className=\"back-icon\" onClick={() => onNavigateToStaking()} />\n        Earn <span className=\"icon-UNX\">UNX</span> by\n        {getTokenIconDom(stakeToken, 'inline-token-wrapper')}\n        {stakeToken.name || ''}\n      </div>\n      <div className=\"stake-token-detail\">\n        <div className=\"stake-token-amount\">\n          {getTokenIconDom(stakeToken, 'stake-token-wrapper')}\n          <div className=\"stake-token-amount-detail\">\n            <div className=\"stake-token-amount-label\">Current Staked</div>\n            <div className=\"stake-token-amount-info\">{myStake.balance} {stakeToken.name}</div>\n          </div>\n        </div>\n        <div className=\"stake-token-actions\">\n          { tokenWeight ? <div className=\"stake-token-action\" onClick={() => handleStakeClick('stake')}>Stake</div> : null }\n          <div className=\"stake-token-action\" onClick={() => handleStakeClick('unstake')}>Unstake</div>\n        </div>\n      </div>\n      <div className=\"harvest-token-detail\">\n        <div className=\"harvest-token-amount icon-UNX\">\n          <div className=\"harvest-token-amount-label\">Rewards Available</div>\n          <div className=\"harvest-token-amount-info\">{new BigNumber(myStake.interest || 0).div(10 ** 9).toString()} UNX</div>\n        </div>\n        <div className=\"harvest-token-actions\">\n          <div className=\"harvest-token-action\" onClick={() => onHarvest() }>Harvest</div>\n        </div>\n      </div>\n      {\n        stakeToken.ty === 2 ? (\n          <div className=\"claimable-wing-detail\">\n            <div className=\"claimable-wing-amount icon-WING\">{new BigNumber(claimableWing || 0).div(10 ** 9).toString()}\n              <div className=\"claimable-wing-label\">WING Earned\n                <Tooltip placement=\"top\" overlay=\"WING earned by ftoken will be transferred to your account when you stake or unstake\">\n                  <span>?</span>\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      { showStakingModal ? (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper\">\n            <div className=\"close-btn\" onClick={() => { setShowStakingModal(false); setAmount(''); }}></div>\n            <div className=\"stake-wrapper\">\n              <div className={`icon-${stakeToken.name} token-placeholder`}></div>\n              <div className=\"form-item\">\n                <div className=\"input-label\">Amount\n                  {\n                    stakeType === 'stake' ? (\n                      <span className=\"hint\">Balance: {tokenBalance}</span>\n                    ) : (\n                      <span className=\"hint\">Staked: {myStake.balance}</span>\n                    )\n                  }\n                </div>\n                <div className=\"input-wrapper\">\n                  <Input placeholder=\"0.0\" value={amount} decimals={stakeToken.decimals || 0} onChange={(amount) => setAmount(amount)} />\n                  <div className=\"input-max-btn\" onClick={() => maxInput()}>MAX</div>\n                </div>\n              </div>\n              <div className=\"stake-btn\" onClick={() => onStake()}>{ stakeType === 'stake' ? 'Stake' : 'Unstake'}</div>\n            </div>\n          </div>\n        </div>\n      ) : null }\n    </div>\n  )\n}\n\nexport default StakingDetail","import React from 'react'\nimport './index.css'\n\nconst Token = (props) => {\n  return (\n    <div className=\"coming-soon-placeholder\"></div>\n  )\n}\n\nexport default Token","import React from 'react'\nimport './index.css'\n\nconst Synth = (props) => {\n  return (\n    <div className=\"coming-soon-placeholder\"></div>\n  )\n}\n\nexport default Synth","import React from 'react'\nimport { useMappedState } from 'redux-react-hook';\nimport { toLocaleFixed } from '../../utils/common'\nimport './index.css'\n\nconst Governance = (props) => {\n  const { poolStat } = useMappedState((state) => ({\n    poolStat: state.gov.poolStat\n  }))\n\n  return (\n    <div className=\"governance-wrapper\">\n      <div className=\"overview-wrapper\">\n        <div className=\"overview-title\">Overview</div>\n        <div className=\"overview-sections\">\n          <div className=\"overview-left\">\n            <p className=\"overview-section-title\">Total UNX</p>\n            <p className=\"overview-detail\">{toLocaleFixed(poolStat.distributionInfo.amount || 0)}</p>\n          </div>\n          <div className=\"overview-right\">\n            <p className=\"overview-section-title\">Daily Distribution</p>\n            <p className=\"overview-detail\">{toLocaleFixed(((poolStat.distributionInfo.amount || 0) / (poolStat.distributionInfo.period || 1) * 86400).toFixed(9))} <span>UNX</span></p>\n          </div>\n        </div>\n      </div>\n      <div className=\"distribution-wrapper\">\n        <div className=\"overview-title\">Distribution</div>\n        <div className=\"distribution-sections\">\n          <div className=\"pie-svg\">\n            <svg className=\"donut\" width=\"240px\" height=\"240px\" viewBox=\"0 0 42 42\" role=\"img\">\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#2BBE7F\" stroke-width=\"4\" stroke-dasharray=\"80, 20\" stroke-dashoffset=\"100\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"120\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FE332F\" stroke-width=\"4\" stroke-dasharray=\"8, 92\" stroke-dashoffset=\"219.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"311.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#F4BA5E\" stroke-width=\"4\" stroke-dasharray=\"8, 92\" stroke-dashoffset=\"411\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"503\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#2B3962\" stroke-width=\"4\" stroke-dasharray=\"3, 97\" stroke-dashoffset=\"602.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"699.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#F18DA5\" stroke-width=\"4\" stroke-dasharray=\"1, 99\" stroke-dashoffset=\"799\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"898\"></circle>\n            </svg>\n          </div>\n          <div className=\"pie-desc\">\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#2BBE7F' } }></div>\n              <div className=\"d-item-name\">Community</div>\n              <div className=\"d-item-ratio\">80%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#FE332F' } }></div>\n              <div className=\"d-item-name\">Developer</div>\n              <div className=\"d-item-ratio\">8%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#F4BA5E' } }></div>\n              <div className=\"d-item-name\">Foundation</div>\n              <div className=\"d-item-ratio\">8%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#2B3962' } }></div>\n              <div className=\"d-item-name\">Resoucse Extension</div>\n              <div className=\"d-item-ratio\">3%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#F18DA5' } }></div>\n              <div className=\"d-item-name\">Volunteer</div>\n              <div className=\"d-item-ratio\">1%</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Governance","import { useEffect, useCallback } from 'react'\nimport { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport { GOVERNANCE_ADDRESS } from '../config'\nimport { handleError } from '../utils/errorHandle'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\n\nconst { StringReader, hexstr2str, reverseHex } = utils\n\nexport const useFetchTokens = () => {\n  const { stopInterval, tokens } = useMappedState((state) => ({\n    stopInterval: state.common.stopInterval,\n    tokens: state.common.tokens\n  }))\n  const dispatch = useDispatch()\n  const setLoadingToken = useCallback((loadingToken) => dispatch({ type: 'SET_LOADING_TOKEN', loadingToken }), [])\n  const setTokens = useCallback((tokens) => dispatch({ type: 'SET_TOKENS', tokens }), [])\n  const setStopInterval = useCallback((stopInterval) => dispatch({ type: 'SET_STOP_INTERVAL', stopInterval }), [])\n  const setPoolStat = useCallback((poolStat) => dispatch({ type: 'SET_POOL_STAT', poolStat }), [])\n\n  useEffect(() => {\n    getGovStat()\n    let interval = !stopInterval && !tokens.length && setInterval(() => getGovStat, 1000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokens, stopInterval])\n\n  function getGovStat() {\n    if (!tokens.length) {\n      try {\n        client.api.smartContract.invokeWasmRead({\n          scriptHash: GOVERNANCE_ADDRESS,\n          operation: 'stat',\n          args: []\n        }).then((statStr) => {\n          const strReader = new StringReader(statStr)\n          const distributionInfo = {}\n          distributionInfo.amount = strReader.readUint128() / (10 ** 9)\n          distributionInfo.period = strReader.readUint128()\n          distributionInfo.startTimeStamp = strReader.readUint128()\n          distributionInfo.settledTimeStamp = strReader.readUint128()\n    \n          const pools = {}\n          const poolCount = strReader.readNextLen()\n          for (let i = 0; i < poolCount; i++) {\n            const pool = {}\n            const nameLength = strReader.readNextLen()\n            pool.name = hexstr2str(strReader.read(nameLength))\n            pool.address = reverseHex(strReader.read(20))\n            pool.weight = strReader.readUint128()\n            pools[pool.name] = pool\n          }\n    \n          const upgrade = strReader.readBoolean()\n          const parsedTokens = []\n          const tokenCount = strReader.readNextLen()\n          for (let i = 0; i < tokenCount; i++) {\n            const token = {}\n            token.id = strReader.readUint128()\n            const nameLength = strReader.readNextLen()\n            token.name = hexstr2str(strReader.read(nameLength))\n            token.address = reverseHex(strReader.read(20))\n            token.ty = strReader.readUint8()\n            token.decimals = strReader.readUint128()\n\n            token.value = token.id\n            token.label = token.name\n\n            parsedTokens.push(token)\n          }\n\n          setLoadingToken(false)\n          setTokens(parsedTokens)\n          setPoolStat({\n            distributionInfo,\n            pools,\n            upgrade\n          })\n        })\n        .catch((e) => {\n          console.log(e)\n          handleError(e, (errorCode) => {\n            console.log(errorCode)\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get all tokens', e)\n            }\n          })\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  return null\n}","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useCallback } from 'react'\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport Header from './components/header'\nimport Modal from './components/modal'\nimport Transaction from './pages/transaction'\nimport Swap from './pages/swap'\nimport Pool from './pages/pool'\nimport AddLiquidity from './pages/pool/addLiquidity'\nimport RemoveLiquidity from './pages/pool/removeLiquidity'\nimport Staking from './pages/staking'\nimport StakingDetail from './pages/staking/detail'\nimport Token from './pages/token'\nimport Synth from './pages/synth'\nimport Overview from './pages/governance'\nimport { NETWORK_TYPE, READY_TABS } from './config'\nimport { useFetchTokens } from './hooks/useToken'\nimport './App.css'\n\nexport const App = () => {\n  const Alert = useAlert()\n  const { account, loadingToken } = useMappedState((state) => ({\n    loadingToken: state.common.loadingToken,\n    account: state.wallet.account\n  }))\n  const dispatch = useDispatch()\n  const setAccount = useCallback((account) => dispatch({ type: 'SET_ACCOUNT', account }), [])\n\n  useFetchTokens()\n\n  async function onConnectWallet() {\n    try {\n      await client.api.provider.getProvider()\n      const network = await client.api.network.getNetwork()\n      if (network && network.type !== NETWORK_TYPE) {\n        Alert.error(`Please connect to the ${NETWORK_TYPE}-Net`)\n        return\n      }\n      const accountAddress = await client.api.asset.getAccount()\n      setAccount(accountAddress)\n      localStorage.setItem('account', accountAddress)\n    } catch (e) {\n      if (e === 'NO_PROVIDER') {\n        Alert.error('Please install wallet extension first')\n      }\n    }\n  }\n\n  function onSignOut() {\n    setAccount('')\n    localStorage.setItem('account', '')\n  }\n\n  function renderLoading() {\n    if (loadingToken) {\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper transparent-bg\">\n            <div className=\"modal-icon-loading modal-icon\"></div>\n            <div className=\"modal-text light\">Loading...</div>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  return (\n    <Router>\n      <div className=\"app\">\n        {renderLoading()}\n        {\n          (account === null) && <div className=\"connect-wallet-overlay\">\n            <div className=\"connect-wrapper\">\n              <p className=\"connect-title\">Connect Wallet</p>\n              <div className=\"wallet-item\" onClick={() => onConnectWallet()}>Cyano Wallet</div>\n            </div>\n          </div>\n        }\n        <Modal />\n        <Header onSignOut={() => onSignOut()} onConnectWallet={() => onConnectWallet()} />\n        <div className=\"main-wrapper\">\n          <Switch>\n            {\n              READY_TABS.indexOf('/') >= 0 ?\n              <Route exact path=\"/\">\n                <Staking />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/') >= 0 ?\n              <Route exact path=\"/staking/:id\">\n                <StakingDetail />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/swap\">\n                <Swap />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/pool\">\n                <Pool />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/pool/add\">\n                <AddLiquidity />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/pool/remove/:id\">\n                <RemoveLiquidity />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/trade') >= 0 ?\n              <Route exact path=\"/trade\">\n                <Transaction />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/governance') >= 0 ?\n              <Route exact path=\"/governance\">\n                <Overview />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/token') >= 0 ?\n              <Route exact path=\"/token\">\n                <Token />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/synth') >= 0 ?\n              <Route exact path=\"/synth\">\n                <Synth />\n              </Route> : null\n            }\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  )\n}\n","const initState = {\n  infoModal: {\n    show: false,\n    type: '',\n    text: '',\n    extraText: '',\n    extraLink: ''\n  },\n}\n\nexport const modal = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_MODAL':\n      return { ...state, [action.modalType]: action.modalDetail }\n    default:\n      return { ...state }\n  }\n}","const initState = {\n  account: localStorage.getItem('account'),\n  slippage: localStorage.getItem('slippage') || '0.1'\n}\n\nexport const wallet = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_ACCOUNT':\n      return { ...state, account: action.account }\n    case 'SET_SLIPPAGE':\n      localStorage.setItem('slippage', action.slippage)\n      return { ...state, slippage: action.slippage }\n    default:\n      return { ...state }\n  }\n}","const initState = {\n  loadingToken: true,\n  stopInterval: false,\n  tokens: []\n}\n\nexport const common = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_LOADING_TOKEN':\n      return { ...state, loadingToken: action.loadingToken }\n    case 'SET_STOP_INTERVAL':\n      return { ...state, stopInterval: action.stopInterval }\n    case 'SET_TOKENS':\n      return { ...state, tokens: action.tokens }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  poolStat: {\n    distributionInfo: {},\n    pools: {\n      staking: {},\n      swap: {},\n      dex: {},\n      synth: {}\n    },\n    upgrade: false\n  }\n}\n\nexport const gov = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_POOL_STAT':\n      return { ...state, poolStat: action.poolStat }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  tokens: [],\n  pairs: []\n}\n\nexport const swap = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_SWAP_TOKENS':\n      return { ...state, tokens: action.tokens }\n    case 'SET_PAIRS':\n      return { ...state, pairs: action.pairs }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  tokens: []\n}\n\nexport const staking = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_STAKING_TOKENS':\n      return { ...state, tokens: action.tokens }\n    default:\n      return { ...state }\n  }\n}\n","import { combineReducers } from 'redux'\nimport { modal } from './modal'\nimport { wallet } from './wallet'\nimport { common } from './common'\nimport { gov } from './gov'\nimport { swap } from './swap'\nimport { staking } from './staking'\n\nconst reducers = combineReducers({\n  modal,\n  wallet,\n  common,\n  gov,\n  swap,\n  staking\n})\n\nexport default reducers","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as Ontology from '@ont-dev/ontology-dapi';\nimport { positions, Provider } from \"react-alert\";\nimport { createStore } from 'redux';\nimport { StoreContext } from 'redux-react-hook';\nimport AlertTemplate from \"react-alert-template-basic\";\nimport reducers from './reducers';\nimport reportWebVitals from './reportWebVitals';\n\nimport './styles/font.css';\nimport './styles/common.css';\nimport './index.css';\n\nconst store = createStore(reducers)\n\nOntology.client.registerClient({});\n\nconst options = {\n  timeout: 5000,\n  position: positions.TOP_CENTER\n};\n\nReactDOM.render(\n  <Provider template={AlertTemplate} {...options}>\n    <StoreContext.Provider value={store}>\n      <App />\n    </StoreContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}