{"version":3,"sources":["../node_modules/milagro-crypto-js/src sync /^/.//.*$","components/input/index.js","config.js","utils/common.js","components/header/index.js","components/modal/index.js","utils/request.js","utils/token.js","utils/errorHandle.js","utils/constants.js","pages/transaction/index.js","components/tokenInput/index.js","hooks/usePair.js","utils/swap.js","pages/swap/index.js","pages/pool/index.js","pages/pool/addLiquidity/index.js","pages/pool/removeLiquidity/index.js","pages/staking/index.js","pages/staking/detail/index.js","pages/token/index.js","pages/option/index.js","pages/coming/index.js","utils/eventRequest.js","pages/synth/index.js","pages/governance/index.js","hooks/useToken.js","App.js","reducers/modal.js","reducers/wallet.js","reducers/common.js","reducers/gov.js","reducers/swap.js","reducers/staking.js","reducers/synth.js","reducers/trade.js","reducers/pool.js","reducers/index.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Input","props","value","cls","disabled","round","decimals","inline","onChange","useState","val","setVal","useEffect","placeholder","handleInput","formattedValue","v","RegExp","test","formatter","target","className","type","onInput","NETWORK_TYPE","GOVERNANCE_ADDRESS","TRANSACTION_BASE_URL","TRANSACTION_AFTERFIX","READY_TABS","COMING_TABS","toLocaleFixed","num","n","priceNum","parseFloat","Math","toFixed","toString","indexOf","replace","$0","$1","formatAccount","account","substr","Header","selectedTab","setSelectedTab","showProfilePanel","setShowProfilePanel","useMappedState","state","wallet","slippage","showSiteIntro","setShowSiteIntro","dispatch","useDispatch","setSlippage","useCallback","pathname","useLocation","tab","href","window","location","origin","onClick","rel","renderSiteIntro","to","onConnectWallet","Number","amount","onSignOut","InfoModal","onCloseModal","text","detail","extraLink","extraText","Modal","infoModal","modal","setModal","modalType","modalDetail","modals","show","push","assign","buildModals","instance","axios","create","baseURL","timeout","headers","interceptors","response","use","data","error","Promise","reject","reverseHex","utils","readBigNumberUint128","reader","str","read","split","reverse","total","BigNumber","i","length","plus","pow","times","parseInt","isZero","getTokenBalance","token","cb","name","param","scriptHash","address","operation","args","invokeMethod","client","api","smartContract","invokeRead","ty","invokeWasmRead","then","bl","div","Request","method","url","resp","targetToken","result","find","t","asset_name","toLowerCase","balance","catch","console","log","getTokenIconDom","slice","tokenName","handleError","callback","json","JSON","parse","Result","PRICE_DECIMALS","SYNTH_PRICE_DECIMALS","ASSET_STATUS","LEVERAGE_TYPE","StringReader","Transaction","pairNameKeyword","setPairNameKeyword","showPairSelectModal","setShowPairSelectModal","stopInterval","common","tokens","trade","CONTRACT_ADDRESS","gov","poolStat","pools","dex","makes","myMakes","pairs","tradeType","tokenPair","makeView","pool","lastPrice","feeRate","isValid","tokenBalance","price","setStopInterval","setMakes","setMyMakes","setPairs","setTokenPair","setTradeType","setMakeView","setPool","setLastPrice","setFeeRate","setIsValid","setTokenBalance","setPrice","setAmount","setTotal","Alert","useAlert","urlPairName","decodeURIComponent","hash","reg","match","getHashString","localStorage","getItem","getMakes","curMakes","filter","m","asset_token_id","price_token_id","isMine","mm","make_id","onUnmake","a","assetToken","priceToken","tradeAmount","integerValue","ROUND_DOWN","invokeWasm","gasPrice","gasLimit","requireIdentity","makeResult","transaction","makeId","unmakeResult","getPriceHint","getAmountHint","p","getMakesOfPair","makeStr","parsedMakes","strReader","pairLastPrice","readUint128","j","makeCount","readNextLen","make","errorCode","interval","setInterval","clearInterval","getUserMakes","hexToAddress","getStat","statStr","tokenPool","tokenCount","tempToken","weight","tokenPairs","onMake","toUpperCase","tp","generateTokenPool","nameLC","reduce","b","pair","setItem","TokenInput","defaultToken","inputDisabled","showBalance","withMax","onTokenChange","onAmountChange","balanceChange","setToken","setBalance","label","dToken","defaultValue","options","isSearchable","components","Option","SingleValue","children","newToken","handleTokenChange","theme","borderRadius","colors","primary","renderTokenSeletion","isNaN","useFetchPairs","swapTokens","swap","SWAP_ADDRESS","setSwapTokens","getSwapStat","pairStr","parsedPairs","pairCount","token1","token2","reserve1","reserve2","lp","min1","min2","tokenIds","tk","REST","findAllPaths","sourceId","targetId","pathArr","findPath","pathNodes","neighborNodes","includes","sort","p1","p2","getInputAmount","output","minus","ROUND_CEIL","getOutputAmount","input","ROUND_FLOOR","findNextOutput","findPrevInput","bestSwap","paths","originAmount","maxOutput","minInput","Infinity","path","gt","lt","Swap","setBalanceChange","swapType","token1Amount","token2Amount","isValidPair","isValidSwap","bestPath","showPrice","setSwapType","setToken1","setToken2","setToken1Amount","setToken2Amount","setIsValidPair","setIsValidSwap","setBestPath","setShowPrice","history","useHistory","swapResult","st","validPair","onChangeToken1","inputAmount","onToken1AmountChange","onChangeToken2","outputAmount","onToken2AmountChange","handleSwap","abs","getPriceImpact","items","index","getBestPath","Pool","liquidityBalance","setLiquidityBalance","all","myLiquidities","l","lb","pairId","shareOfPool","onRemoveLiquidity","generateLiquidityList","AddLiquidity","minToken1","setMinToken1","minToken2","setMinToken2","enableAdd","setEnableAdd","isFirstProvider","setIsFirstProvider","showPriceInfo","setShowPriceInfo","getPairByToken","getPairPrice","onNavigateToPool","goBack","ROUND_UP","addResult","amountProduct","getShareOfPool","onAdd","RemoveLiquidity","setPair","getLiquidityBalanceByPairId","onRemove","Staking","showClosedEntry","setShowClosedEntry","showClosed","setShowClosed","unxPrice","setUnxPrice","tokenPrices","setTokenPrices","stakingTokens","staking","stakingPoolWeightRatio","ratio","STAKING_ADDRESS","setStakingTokens","getStakingTokenPrice","unxToken","parsedTokenPrices","LPTokens","nonLPTokens","lpt","tn","tokenId","tokenPriceStr","tokenNames","nonUnxToken","getStakingTokenBalance","parsedTokens","totalWeight","filteredTokens","originWeight","getTip","unxTk","daiTk","openStakingTokens","closedStakingTokens","unxAmount","distributionInfo","period","tokenAPY","startsWith","placement","overlay","onSelectToken","generateStakingPool","StakingDetail","stakeToken","setStakeToken","tokenWeight","setTokenWeight","myStake","setMyStake","stakeType","setStakeType","claimableWing","setClaimableWing","showStakingModal","setShowStakingModal","getAccountStake","stakeStr","interest","stake","handleStakeClick","action","stakeResult","harvestResult","sToken","getClaimableWing","onHarvest","onStake","Token","Coming","Synth","mintAsset","setMintAsset","mintAmount","setMintAmount","unxNeededForMint","setUnxNeededForMint","burnAsset","setBurnAsset","burnAmount","setBurnAmount","unxGetForBurn","setUnxGetForBurn","exchangeAsset","setExchangeAsset","exchangeToAsset","setExchangeToAsset","exchangeAmount","setExchangeAmount","exchangeToAssets","setExchangeToAssets","exchangeToAmount","setExchangeToAmount","showMintModal","setShowMintModal","showBurnModal","setShowBurnModal","showExchangeModal","setShowExchangeModal","synth","synthPoolWeightRatio","SYNTH_ADDRESS","stat","marketStat","availableReward","synthType","setStat","setMarketStat","setAvailableReward","setSynthType","setUnxToken","marketAssetValue","marketAssetBalances","marketTokenBalance","getAvailableReward","claimStr","liveAssetCount","liveAssets","asset","assetId","leverageType","readNextByte","entryPrice","lowLimit","highLimit","status","frozenBy","frozenTime","readUint64","frozenAssetCount","frozenAssets","tokenPriceCount","tokenPrice","liveAsset","currentPrice","lte","gte","unprocessedFrozen","frozenAsset","getMarketStat","marketAssetBalanceCount","marketAssetValueSum","assetBalance","assetPrice","la","accountAssetBalanceCount","accountAssetBalances","accountAssetValueSum","marketStakeValue","accountStakeValue","accountClaimedValue","accountWithdrawedStakeValue","transferable","parsedMarketStat","accountAssetValue","handleBurnAmountChange","handleExchangeAmountChange","mintResult","EventRequest","Desc","Notify","notify","States","setInfoModal","burnResult","burnAllResult","exchangeResult","claimResult","handleFreezeAsset","freezeResult","calcEffectiveLeverage","getPriceDetail","txt","onBurnAll","onClaim","assetList","accountAsset","ab","showPriceDetail","holdings","effectiveLeverage","fa","isFrozen","toAssets","renderAssetList","handleMintAmountChange","handleUnxNeededForMintChange","onMint","handleUnxGetForBurnChange","onBurn","handleChangeExchangeToAsset","handleChengeExchangeToAmount","onExchange","Governance","hasBegan","setHasBegan","leftTime","setLeftTime","getLeftTime","time","Date","day","hour","minute","second","dateInfo","startTimeStamp","width","height","viewBox","role","cx","cy","r","fill","stroke","stroke-width","stroke-dasharray","stroke-dashoffset","style","background","hexstr2str","App","isUpgrading","loadingToken","setAccount","getAccount","accountAddress","retryTimes","provider","getProvider","network","getNetwork","setIsUpgrading","setLoadingToken","setTokens","setPoolStat","getGovStat","settledTimeStamp","poolCount","nameLength","poolName","upgrade","readBoolean","readUint8","useFetchTokens","renderUpgrading","Fragment","exact","initState","reducers","combineReducers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","Ontology","registerClient","position","positions","TOP_CENTER","ReactDOM","render","template","AlertTemplate","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.6fd3fd8c.chunk.js","sourcesContent":["var map = {\n\t\"./aes\": 271,\n\t\"./aes.js\": 271,\n\t\"./big\": 272,\n\t\"./big.js\": 272,\n\t\"./ctx\": 172,\n\t\"./ctx.js\": 172,\n\t\"./ecdh\": 273,\n\t\"./ecdh.js\": 273,\n\t\"./ecp\": 274,\n\t\"./ecp.js\": 274,\n\t\"./ecp2\": 275,\n\t\"./ecp2.js\": 275,\n\t\"./ff\": 276,\n\t\"./ff.js\": 276,\n\t\"./fp\": 277,\n\t\"./fp.js\": 277,\n\t\"./fp12\": 278,\n\t\"./fp12.js\": 278,\n\t\"./fp2\": 279,\n\t\"./fp2.js\": 279,\n\t\"./fp4\": 280,\n\t\"./fp4.js\": 280,\n\t\"./gcm\": 281,\n\t\"./gcm.js\": 281,\n\t\"./hash256\": 282,\n\t\"./hash256.js\": 282,\n\t\"./hash384\": 283,\n\t\"./hash384.js\": 283,\n\t\"./hash512\": 284,\n\t\"./hash512.js\": 284,\n\t\"./mpin\": 285,\n\t\"./mpin.js\": 285,\n\t\"./newhope\": 286,\n\t\"./newhope.js\": 286,\n\t\"./nhs\": 287,\n\t\"./nhs.js\": 287,\n\t\"./pair\": 288,\n\t\"./pair.js\": 288,\n\t\"./rand\": 289,\n\t\"./rand.js\": 289,\n\t\"./rom_curve\": 290,\n\t\"./rom_curve.js\": 290,\n\t\"./rom_field\": 291,\n\t\"./rom_field.js\": 291,\n\t\"./rsa\": 292,\n\t\"./rsa.js\": 292,\n\t\"./sha3\": 293,\n\t\"./sha3.js\": 293,\n\t\"./uint64\": 294,\n\t\"./uint64.js\": 294\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 593;","import React, { useState, useEffect } from 'react';\n\nconst Input = (props) => {\n  const { value = '', cls = '', round, disabled, decimals, inline = true, onChange } = props\n  const [val, setVal] = useState('')\n\n  useEffect(() => {\n    setVal(value)\n  //   if (value === '') {\n  //     setVal('')\n  //   } else if (`${value}`.endsWith('.')) {\n  //     setVal(value)\n  //   } else {\n  //     if (round === 'down') {\n  //       setVal(Math.floor(value * (10 ** decimals)) / (10 ** decimals))\n  //     } else if (round === 'up') {\n  //       setVal(Math.ceil(value * (10 ** decimals)) / (10 ** decimals))\n  //     }\n  //   }\n  }, [value])\n\n  const placeholder = decimals > 0 ? '0.0' : '0'\n  const formatter = (v, decimals = 9) => {\n    if (v === '' || v === '0') {\n      return v\n    } else {\n      const reg = (decimals > 0) ? new RegExp(\n        `^(([0-9]{0,20})|(([0]\\\\.\\\\d{0,${decimals}}|[0-9]{0,20}\\\\.\\\\d{0,${decimals}})))$`\n      ) : new RegExp('^[0-9]{0,20}$')\n      if (reg.test(v)) {\n        return v\n      } else {\n        return val\n      }\n    }\n  };\n  const handleInput = (e) => {\n    const formattedValue = formatter(e.target.value, decimals)\n\n    setVal(formattedValue)\n    typeof onChange === 'function' && onChange(formattedValue)\n  }\n\n  // const handleChange = (e) => {\n  //   typeof onChange === 'function' && onChange(e.target.value)\n  // }\n\n  return (\n    <input\n      className={`input ${inline ? 'inline-input' : ''} ${cls}`}\n      type=\"text\"\n      placeholder={placeholder}\n      value={val}\n      disabled={disabled}\n      onInput={(e) => handleInput(e)}\n      // onChange={(e) => handleChange(e)}\n    />\n  );\n};\n\nexport default Input;\n","export const NETWORK_TYPE = 'MAIN'\nexport const GOVERNANCE_ADDRESS = '820d869c18db5e16005627167a8054d9da52c32f'\nexport const API_BASE_URL = 'https://explorer.ont.io'\nexport const TRANSACTION_BASE_URL = 'https://explorer.ont.io/transaction/'\nexport const EVENT_API_BASE_URL = 'https://dappnode1.ont.io:10334/api/v1/smartcode/event/txhash/'\nexport const TRANSACTION_AFTERFIX = ''\nexport const READY_TABS = ['/', '/swap', '/trade', '/governance', '/synth', '/option']\nexport const COMING_TABS = ['/', '/synth', '/option']","export const getQueryString = (search, name) => {\n  const reg = new RegExp(`(^|&)${name}=([^&]*)(&|$)`, 'i')\n  const value = search.substr(1).match(reg)\n\n  if (value != null) {\n    return (value[2])\n  }\n\n  return null\n}\n\nexport const getHashString = (hash, name) => {\n  const reg = new RegExp(`(^|&|[/?]+)${name}=([^&]*)(&|$)`, 'i')\n  const value = hash.substr(1).match(reg)\n\n  if (value != null) {\n    return (value[2])\n  }\n\n  return null\n}\n\nexport function toLocaleFixed(num, n = 9) {\n  const priceNum = parseFloat(n === 0 ? Math.round(num).toFixed(n) : parseFloat(num).toFixed(n)).toString()\n  return priceNum && (priceNum.indexOf('.') !== -1 ? priceNum.replace(/(\\d)(?=(\\d{3})+\\.)/g, ($0, $1) => `${$1},`) : priceNum.replace(/(?=(\\B\\d{3})+$)/g, ','))\n}\n\nexport const formatAccount = (account = '') => {\n  return `${account.substr(0, 4)}...${account.substr(-4)}`\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { Link, useLocation } from 'react-router-dom'\nimport Input from '../input'\nimport { READY_TABS } from '../../config'\nimport { formatAccount } from '../../utils/common'\nimport './index.css'\n\nconst Header = (props) => {\n  const [selectedTab, setSelectedTab] = useState('')\n  const [showProfilePanel, setShowProfilePanel] = useState(false)\n  const { account, slippage } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage\n  }))\n  const [showSiteIntro, setShowSiteIntro] = useState(false)\n  const dispatch = useDispatch()\n  const setSlippage = useCallback((slippage) => dispatch({ type: 'SET_SLIPPAGE', slippage }), [])\n  const pathname = useLocation().pathname\n\n  const toggleShowSiteIntro = (show) => {\n    setShowSiteIntro(show)\n  }\n\n  useEffect(() => {\n    let tab = ''\n    if (pathname === '/' || pathname.indexOf('/staking') >= 0) {\n      tab = '/'\n    } else if (pathname.indexOf('/synth') >= 0) {\n      tab = '/synth'\n    } else if (pathname.indexOf('/swap') >= 0 || pathname.indexOf('/pool') >= 0) {\n      tab = '/swap'\n    } else if (pathname.indexOf('/trade') >= 0) {\n      tab = '/trade'\n    } else if (pathname.indexOf('/governance') >= 0) {\n      tab = '/governance'\n    } else if (pathname.indexOf('/token') >= 0) {\n      tab = '/token'\n    } else if (pathname.indexOf('/option') >= 0) {\n      tab = '/option'\n    }\n    \n    setSelectedTab(tab)\n  }, [pathname])\n\n  const renderSiteIntro = () => {\n    if (showSiteIntro) {\n      const href = `${window.location.origin}${window.location.pathname}#/trade?pair=pDAI%2FUNX`\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper\">\n            <div className=\"close-btn\" onClick={() => toggleShowSiteIntro(false)}></div>\n            <p className=\"intro-line\">uniq-ex is a pure github based DAO dex, all activities are logged on github.</p>\n            <p className=\"intro-line\">You can open issues for discussion <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/uniq-ex/uniq-ex/issues\">here</a></p>\n            <p className=\"intro-line\">uniq-ex's future business will not be limited to exchanges though, we may enter various DeFi markets like compound or hegic.</p>\n            <p className=\"intro-line\">You can buy UNX(the governance token of uniq-ex) <a target=\"_blank\" rel=\"noreferrer\" href={href}>here</a></p>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  const onSignOut = () => {\n    setShowProfilePanel(false)\n    typeof props.onSignOut === 'function' && props.onSignOut()\n  }\n\n  const onConnectWallet = () => {\n    typeof props.onConnectWallet === 'function' && props.onConnectWallet()\n  }\n\n  const toggleProfilePanel = () => {\n    setShowProfilePanel(!showProfilePanel)\n  }\n\n  return (\n    <div className=\"header-wrapper\">\n      {renderSiteIntro()}\n      <div className=\"header\">\n        <div className=\"content-wrapper\">\n          <div className=\"logo-wrapper\">\n            UNIQ-EX\n            {/* <div className=\"site-intro\" onClick={() => toggleShowSiteIntro(true)}></div> */}\n          </div>\n          <div className=\"nav-list\">\n            { READY_TABS.indexOf('/') >= 0 ? <div className={`nav-item ${selectedTab === '/' ? 'selected' : ''}`}><Link to=\"/\">Staking</Link></div> : null }\n            { READY_TABS.indexOf('/synth') >= 0 ? <div className={`nav-item ${selectedTab === '/synth' ? 'selected' : ''}`}><Link to=\"/synth\">Synth</Link></div> : null }\n            { READY_TABS.indexOf('/swap') >= 0 ? <div className={`nav-item ${selectedTab === '/swap' ? 'selected' : ''}`}><Link to=\"/swap\">Swap</Link></div> : null }\n            { READY_TABS.indexOf('/trade') >= 0 ? <div className={`nav-item ${selectedTab === '/trade' ? 'selected' : ''}`}><Link to=\"/trade\">Trade</Link></div> : null }\n            { READY_TABS.indexOf('/governance') >= 0 ? <div className={`nav-item ${selectedTab === '/governance' ? 'selected' : ''}`}><Link to=\"/governance\">Governance</Link></div> : null }\n            { READY_TABS.indexOf('/token') >= 0 ? <div className={`nav-item ${selectedTab === '/token' ? 'selected' : ''}`}><Link to=\"/token\">Token</Link></div> : null }\n            { READY_TABS.indexOf('/option') >= 0 ? <div className={`nav-item ${selectedTab === '/option' ? 'selected' : ''}`}><Link to=\"/option\">Option</Link></div> : null }\n          </div>\n          <div className={`${account ? 'active' : ''} profile-wrapper`}>\n            { !account && <span className=\"connect-btn\" onClick={() => onConnectWallet()}>Connect Wallet</span>}\n            { account && <span className=\"account-address\" onClick={() => toggleProfilePanel()}>{formatAccount(account)}</span> }\n            {\n              showProfilePanel ? (\n                <div className=\"profile-panel\">\n                  <div className=\"setting-wrapper\">\n                    <div className=\"setting-section-title\">SLIPPAGE</div>\n                    <div className=\"slippage-setting\">\n                      <div className={`slippage-item ${Number(slippage) === 0.1 ? 'selected' : ''}`} onClick={() => setSlippage('0.1')}>0.1%</div>\n                      <div className={`slippage-item ${Number(slippage) === 0.5 ? 'selected' : ''}`} onClick={() => setSlippage('0.5')}>0.5%</div>\n                      <div className={`slippage-item ${Number(slippage) === 1 ? 'selected' : ''}`} onClick={() => setSlippage('1.0')}>1.0%</div>\n                      <div className=\"slippage-input-wrapper\">\n                        <Input value={slippage} cls=\"slippage-input\" decimals=\"2\" placeholder={slippage} onChange={(amount) => setSlippage(amount)} />%\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"signout-btn\" onClick={() => onSignOut()}>Sign Out</div>\n                </div>\n              ) : null\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import React, { useCallback } from 'react'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport './index.css'\n\nconst InfoModal = (props) => {\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-wrapper\">\n        <div className=\"close-btn\" onClick={() => props.onCloseModal()}></div>\n        <div className={`modal-icon-${props.type} modal-icon`}></div>\n        <div className={`modal-text-${props.type} modal-text`}>{props.text}</div>\n        { props.detail ? <div className=\"modal-detail\">{props.detail}</div> : null }\n        <div className=\"modal-extra-text\">\n        {\n          props.extraLink ? (\n            <a className=\"transaction-link\" target=\"_blank\" rel=\"noreferrer\" href={props.extraLink}>{props.extraText}</a>\n          ) : props.extraText\n        }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Modal = (props) => {\n  const { infoModal } = useMappedState((state) => ({\n    infoModal: state.modal.infoModal\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const onCloseInfoModal = () => {\n    setModal('infoModal', Object.assign({}, infoModal, { show: false }))\n  }\n\n  const buildModals = () => {\n    const modals = []\n    if (infoModal.show) {\n      modals.push(<InfoModal {...infoModal} onCloseModal={() => onCloseInfoModal()} />)\n    }\n    return modals\n  }\n\n  return (\n    <div className=\"modal-container\">\n      {buildModals()}\n    </div>\n  )\n}\n\nexport default Modal","import axios from 'axios'\nimport { API_BASE_URL } from '../config'\n\nconst instance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: { 'Content-Type': 'application/json' }\n})\n\ninstance.interceptors.response.use(\n  (response) => {\n    const res = response.data;\n    return res\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\nexport default instance","import { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport Request from './request'\n\nconst { reverseHex } = utils\n\nexport const readBigNumberUint128 = (reader) => {\n  const hexRev = reverseHex(reader.read(16))\n  const str = hexRev.split('').reverse()\n  let total = new BigNumber(0)\n  \n  for (let i = 0; i < str.length; i++) {\n    total = total.plus(new BigNumber(16).pow(i).times(parseInt(str[i], 16)))\n  }\n\n  return total.isZero() ? 0 : total.toString()\n}\n\nexport const getTokenBalance = (account, token, cb) => {\n  \n  if (token.name !== 'ONT' && token.name !== 'ONG') {\n    const param = {\n      scriptHash: token.address,\n      operation: 'balanceOf',\n      args: [\n        {\n          type: 'Address',\n          value: account,\n        },\n      ],\n    }\n    let invokeMethod = client.api.smartContract.invokeRead\n\n    if (token.ty === 2 || token.ty === 3) {\n      invokeMethod = client.api.smartContract.invokeWasmRead\n    }\n    invokeMethod(param).then((bl) => {\n      if (bl) {\n        const str = reverseHex(bl).split('').reverse()\n        let total = new BigNumber(0)\n        \n        for (let i = 0; i < str.length; i++) {\n          total = total.plus(new BigNumber(16 ** i).times(parseInt(str[i], 16)))\n        }\n        \n        cb(total.div(10 ** token.decimals).toString())\n      }\n    })\n  } else {\n    Request({\n      method: 'get',\n      url: `/v2/addresses/${account}/native/balances`\n    }).then((resp) => {\n      if (resp.code === 0) {\n        const targetToken = resp.result.find((t) => t.asset_name === token.name.toLowerCase())\n        cb(targetToken.balance)\n      }\n    })\n    .catch((e) => {\n      console.log(e)\n    })\n  }\n}\n\nexport const getTokenIconDom = (token, cls = '') => {\n  if (token.id) {\n    return (\n      <div className={`token-icon-wrapper ${cls}`}>\n        {\n          token.ty === 3\n            ? token.name.split('-').slice(1).map((tokenName) => (<div key={`${token.name}-${tokenName}`} className={`token-icon-item with-drop-shadow icon-${tokenName}`} />))\n            : (<div className={`token-icon-item icon-${token.name}`} />)\n        }\n      </div>\n    )\n  }\n  return null\n}","export const handleError = (e, callback = () => {}) => {\n  try {\n    const json = JSON.parse(e)\n    if (json.Result === 'wasm contract does not exist') {\n      callback('CONTRACT_ADDRESS_ERROR')\n    }\n  } catch(error) {\n    // TODO\n  }\n}","export const PRICE_DECIMALS = 10 ** 9\nexport const SYNTH_PRICE_DECIMALS = 10 ** 12\nexport const DAI_PRICE = 1\nexport const TRANSACTION_FEE_RATE = 0.001\nexport const ASSET_STATUS = {\n  Live: '00',\n  HighLimit: '01',\n  LowLimit: '02'\n}\nexport const LEVERAGE_TYPE = {\n  Positive: '00',\n  Negative: '01'\n}","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { readBigNumberUint128, getTokenBalance } from '../../utils/token'\nimport Input from '../../components/input'\nimport { handleError } from '../../utils/errorHandle'\nimport { getHashString } from '../../utils/common'\nimport { PRICE_DECIMALS } from '../../utils/constants'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Transaction = () => {\n  const [pairNameKeyword, setPairNameKeyword] = useState('')\n  const [showPairSelectModal, setShowPairSelectModal] = useState(false)\n  const { account, stopInterval, tokens, makes, myMakes, pairs, tradeType, tokenPair, makeView, pool, lastPrice, feeRate, isValid, tokenBalance, price, amount, total, CONTRACT_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    stopInterval: state.common.stopInterval,\n    tokens: state.common.tokens,\n    ...state.trade,\n    CONTRACT_ADDRESS: state.gov.poolStat.pools.dex.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const setStopInterval = useCallback((stopInterval) => dispatch({ type: 'SET_STOP_INTERVAL', stopInterval }), [])\n  const setMakes = useCallback((makes) => dispatch({ type: 'SET_TRADE_MAKES', makes }), [])\n  const setMyMakes = useCallback((myMakes) => dispatch({ type: 'SET_TRADE_MY_MAKES', myMakes }), [])\n  const setPairs = useCallback((pairs) => dispatch({ type: 'SET_TRADE_PAIRS', pairs }), [])\n  const setTokenPair = useCallback((tokenPair) => dispatch({ type: 'SET_TRADE_TOKEN_PAIR', tokenPair }), [])\n  const setTradeType = useCallback((tradeType) => dispatch({ type: 'SET_TRADE_TYPE', tradeType }), [])\n  const setMakeView = useCallback((makeView) => dispatch({ type: 'SET_TRADE_MAKE_VIEW', makeView }), [])\n  const setPool = useCallback((pool) => dispatch({ type: 'SET_TRADE_POOL', pool }), [])\n  const setLastPrice = useCallback((lastPrice) => dispatch({ type: 'SET_TRADE_LAST_PRICE', lastPrice }), [])\n  const setFeeRate = useCallback((feeRate) => dispatch({ type: 'SET_TRADE_FEE_RATE', feeRate }), [])\n  const setIsValid = useCallback((isValid) => dispatch({ type: 'SET_TRADE_IS_VALID', isValid }), [])\n  const setTokenBalance = useCallback((tokenBalance) => dispatch({ type: 'SET_TRADE_TOKEN_BALANCE', tokenBalance }), [])\n  const setPrice = useCallback((price) => dispatch({ type: 'SET_TRADE_PRICE', price }), [])\n  const setAmount = useCallback((amount) => dispatch({ type: 'SET_TRADE_AMOUNT', amount }), [])\n  const setTotal = useCallback((total) => dispatch({ type: 'SET_TRADE_TOTAL', total }), [])\n\n  const Alert = useAlert()\n\n  const urlPairName = decodeURIComponent(getHashString(window.location.hash, 'pair') || '') || (localStorage.getItem('trade_token_pair') || '')\n\n  useEffect(() => {\n    if (pairs.length && !tokenPair.name) {\n      setTokenPair(pairs.find((p) => p.name === `${urlPairName}`) || pairs.find((p) => p.name === 'pDAI/UNX') || pairs.find((p) => p.name === 'UNX/pDAI'))\n    }\n  }, [pairs])\n\n  useEffect(() => {\n    if (account && tokenPair.name) {\n      getTokenBalance(account, tradeType === 'buy' ? tokenPair.tokens[1] : tokenPair.tokens[0], (bl) => {\n        setTokenBalance(bl)\n      })\n    }\n  }, [account, tokenPair, tradeType])\n\n  useEffect(() => {\n    async function getMakesOfPair() {\n      if (tokenPair.name && CONTRACT_ADDRESS) {\n        try {\n          const makeStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'get_makes_of_pair',\n            args: [\n              {\n                type: 'Long',\n                value: tokenPair.tokens[0].id\n              },\n              {\n                type: 'Long',\n                value: tokenPair.tokens[1].id\n              }\n            ]\n          })\n          const parsedMakes = []\n          const strReader = new StringReader(makeStr)\n          const pairLastPrice = strReader.readUint128()\n  \n          for (let j = 0; j <= 1; j++) {\n            const makeCount = strReader.readNextLen()\n            for (let i = 0; i < makeCount; i++) {\n              const make = {}\n              make.make_id = strReader.readUint128()\n              make.price = strReader.readUint128()\n              make.amount = new BigNumber(strReader.readUint128()).toString()\n              make.asset_token_id = (j === 0 ? tokenPair.tokens[0].id : tokenPair.tokens[1].id)\n              make.price_token_id = (j === 0 ? tokenPair.tokens[1].id : tokenPair.tokens[0].id)\n      \n              parsedMakes.push(make)\n            }\n          }\n  \n          setLastPrice(pairLastPrice ? new BigNumber(pairLastPrice).div(PRICE_DECIMALS).toString() : 0)\n          setMakes(parsedMakes)\n        } catch (e) {\n          handleError(e, (errorCode) => {\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get makes of pair', e)\n            }\n          })\n        }\n      }\n    }\n    getMakesOfPair()\n    const interval = !stopInterval && setInterval(getMakesOfPair, 2000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokenPair, account, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    async function getUserMakes() {\n      if (account && CONTRACT_ADDRESS) {\n        try {\n          const makeStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'get_user_makes',\n            args: [\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n          const parsedMakes = []\n          const strReader = new StringReader(makeStr)\n          const makeCount = strReader.readNextLen()\n          for (let i = 0; i < makeCount; i++) {\n            const make = {}\n            make.address = client.api.utils.hexToAddress(strReader.read(20))\n            make.asset_token_id = strReader.readUint128()\n            make.price_token_id = strReader.readUint128()\n            make.price = strReader.readUint128()\n            make.amount = strReader.readUint128()\n            make.make_id = strReader.readUint128()\n  \n            parsedMakes.push(make)\n          }\n  \n          setMyMakes(parsedMakes)\n        } catch (e) {\n          handleError(e, (errorCode) => {\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get user makes', e)\n            }\n          })\n        }\n      }\n    }\n\n    getUserMakes()\n    const interval = !stopInterval && setInterval(getUserMakes, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokenPair, account, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    async function getStat() {\n      if (tokens.length && CONTRACT_ADDRESS) {\n        try {\n          const statStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'stat',\n            args: []\n          })\n          \n          const tokenPool = []\n          const strReader = new StringReader(statStr)\n          setFeeRate(strReader.readUint128())\n          const tokenCount = strReader.readNextLen()\n  \n          for (let i = 0; i < tokenCount; i++) {\n            const token = {}\n            token.id = strReader.readUint128()\n            const tempToken = tokens.find((t) => t.id === token.id)\n            token.weight = strReader.readUint128()\n            token.balance = new BigNumber(readBigNumberUint128(strReader)).div(new BigNumber(10 ** tempToken.decimals)).toString()\n  \n            tokenPool.push(Object.assign({}, tempToken, token))\n          }\n\n          if (!pairs.length) {\n            const tokenPairs = []\n            for (let i = 0; i < tokenPool.length; i++) {\n              for (let j = i + 1; j < tokenPool.length; j++) {\n                if (tokenPool[i].weight > tokenPool[j].weight || (tokenPool[i].weight === tokenPool[j].weight && tokenPool[i].id > tokenPool[j].id)) {\n                  tokenPairs.push({\n                    name: `${tokenPool[j].name}/${tokenPool[i].name}`,\n                    tokens: [tokenPool[j], tokenPool[i]]\n                  })\n                } else {\n                  tokenPairs.push({\n                    name: `${tokenPool[i].name}/${tokenPool[j].name}`,\n                    tokens: [tokenPool[i], tokenPool[j]]\n                  })\n                }\n              }\n            }\n\n            setPairs(tokenPairs)\n          }\n\n          setPool(tokenPool)\n        } catch (e) {\n          handleError(e, (errorCode) => {\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get stat', e)\n            }\n          })\n        }\n      }\n    }\n\n    getStat()\n    const interval = setInterval(() => {\n      if (stopInterval) {\n        clearInterval(interval)\n      } else {\n        getStat()\n      }\n    }, 5000)\n    return () => clearInterval(interval)\n  }, [tokens, pairs, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    if (price > 0 && amount > 0) {\n      setTotal(new BigNumber(price).times(amount).toString())\n    }\n  }, [price, amount])\n\n  useEffect(() => {\n    if (price > 0) {\n      setAmount(new BigNumber(total || 0).div(price).toString())\n    }\n  }, [total])\n\n  useEffect(() => {\n    if (tokenPair.name && price > 0 && amount > 0) {\n      setIsValid(true)\n    } else {\n      setIsValid(false)\n    }\n  }, [tokenPair, amount, price])\n\n  useEffect(() => {\n    setMakeView('all')\n  }, [account])\n\n  function onChangeToUserMakeView() {\n    if (account) {\n      setMakeView('my')\n    } else {\n      Alert.show('Please Connect Wallet First')\n    }\n  }\n\n  function getMakes(type) {\n    if (tokenPair.name) {\n      const curMakes = (makeView === 'my' ? myMakes : makes)\n      if (type === 'sell') {\n        return curMakes.filter((m) => m.asset_token_id === tokenPair.tokens[0].id && m.price_token_id === tokenPair.tokens[1].id).map((m) => {\n          const isMine = makeView !== 'my' && !!myMakes.find((mm) => m.make_id === mm.make_id)\n          return (\n            <div key={m.make_id} className={`my-make-item reverse ${isMine ? 'mine' : ''}`}>\n              <div className=\"make-item-detail make-sell\">{new BigNumber(m.price).div(PRICE_DECIMALS).toString()}</div>\n              <div className=\"make-item-detail\">{new BigNumber(m.amount).div((10 ** tokenPair.tokens[0].decimals)).toString()}</div>\n              { makeView === 'my' && <div className=\"unmake-btn\" onClick={() => onUnmake(m.make_id)}>Cancel</div> }\n            </div>)\n        })\n      } else {\n        return curMakes.filter((m) => m.asset_token_id === tokenPair.tokens[1].id && m.price_token_id === tokenPair.tokens[0].id).map((m) => {\n          const isMine = makeView !== 'my' && !!myMakes.find((mm) => m.make_id === mm.make_id)\n          return (\n            <div key={m.make_id} className={`my-make-item ${isMine ? 'mine' : ''}`}>\n              <div className=\"make-item-detail make-buy\">{new BigNumber(m.price).div(PRICE_DECIMALS).toString()}</div>\n              <div className=\"make-item-detail\">{new BigNumber(m.amount).div(m.price).times(PRICE_DECIMALS).div((10 ** tokenPair.tokens[1].decimals)).toString()}</div>\n              { makeView === 'my' && <div className=\"unmake-btn\" onClick={() => onUnmake(m.make_id)}>Cancel</div> }\n            </div>)\n        })\n      }\n    }\n    return null\n  }\n\n\n\n  async function onMake() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (tokenPair.name && CONTRACT_ADDRESS) {\n      if (price <= 0) {\n        Alert.error('Price should be greater than 0')\n        return\n      }\n      if (amount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const assetToken = tradeType === 'buy' ? tokenPair.tokens[1] : tokenPair.tokens[0]\n        const priceToken = tradeType === 'buy' ? tokenPair.tokens[0] : tokenPair.tokens[1]\n        // const tradePrice = tradeType === 'buy' ? new BigNumber(1).div(price).toString() : price\n        const tradeAmount = tradeType === 'buy' ? total : amount\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: assetToken.id\n          },\n          {\n            type: 'Long',\n            value: priceToken.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(price).times(PRICE_DECIMALS).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(tradeAmount).times(new BigNumber(10 ** assetToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const makeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: CONTRACT_ADDRESS,\n          operation: 'make',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (makeResult.transaction) {\n          setAmount('')\n          setPrice('')\n          setTotal('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${makeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onUnmake(makeId) {\n    if (account && makeId && CONTRACT_ADDRESS) {\n      try {\n        const unmakeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: CONTRACT_ADDRESS,\n          operation: 'unmake',\n          args: [\n            {\n              type: 'Address',\n              value: account\n            },\n            {\n              type: 'Long',\n              value: makeId\n            }\n          ],\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n        if (unmakeResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${unmakeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function getPriceHint() {\n    if (tokenPair.name) {\n      return tokenPair.tokens[1].name\n    }\n  }\n\n  function getAmountHint() {\n    if (tokenPair.name) {\n      return tokenPair.tokens[0].name\n    }\n  }\n\n  function generateTokenPool() {\n    if (pool.length) {\n      return pool.filter((tp) => Number(tp.balance) !== 0).map((tp) => {\n        return (\n          <div className=\"pool-item\" key={tp.name}>\n            <div className={`icon-${tp.name} token-name`}>{tp.name}</div>\n            <div className=\"token-balance\">{tp.balance}</div>\n          </div>\n        )\n      })\n    }\n  }\n\n  const handlePairClick = (pair) => {\n    setTokenBalance('-')\n    setTokenPair(pair)\n    localStorage.setItem('trade_token_pair', pair.name)\n    setShowPairSelectModal(false)\n  }\n\n  return (\n    <div className=\"swap-wrapper\">\n      <div className=\"trade-container\">\n        <div className=\"make-wrapper\">\n          <div className=\"container-header\">Trade\n            {\n              tokenPair.name ? (\n                <div className=\"token-pair-select\" onClick={() => setShowPairSelectModal(true)}>\n                  <div className=\"token-pair-name\">{tokenPair.name}</div>\n                </div>\n              ) : null\n            }\n          </div>\n          <div className=\"trade-type-switch\">\n            <div className={`trade-type-item ${tradeType === 'buy' ? 'trade-buy' : ''}`} onClick={() => setTradeType('buy')}>Buy</div>\n            <div className={`trade-type-item ${tradeType === 'sell' ? 'trade-sell' : ''}`} onClick={() => setTradeType('sell')}>Sell</div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Price\n              <span className=\"hint\">{getPriceHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={price} decimals=\"9\" onChange={(amount) => setPrice(amount)} />\n            </div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Amount\n              <span className=\"hint\">{getAmountHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={amount} decimals={tokenPair.tokens ? tokenPair.tokens[0].decimals : '9'} onChange={(amount) => setAmount(amount)} />\n            </div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Total {tradeType === 'buy' ? 'Need' : 'Receive'}\n              <span className=\"hint\">{getPriceHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={total} decimals=\"9\" onChange={(amount) => setTotal(amount)} />\n            </div>\n          </div>\n          { tokenPair.name ? <div className=\"balance-line\">Balance: <span>{tokenBalance} {tradeType === 'buy' ? tokenPair.tokens[1].name : tokenPair.tokens[0].name}</span></div> : null }\n          { feeRate ? <p className=\"fee-rate\">* The fee rate of transaction is {feeRate / 100}%</p> : null }\n          { isValid ? <div className={`make-btn make-btn-${tradeType}`} onClick={() => onMake()}>{tradeType.toUpperCase()} {tokenPair.tokens[0].name}</div> : <div className=\"make-btn disabled\">{tradeType.toUpperCase()} {tokenPair.tokens ? tokenPair.tokens[0].name : ''}</div> }\n        </div>\n        <div className=\"trade-panel\">\n          <div className=\"panel-header\">\n            <div className=\"panel-title\">Order Book</div>\n            <div className=\"tabs\">\n              <div className={makeView === 'all' ? \"tab-wrapper selected\" : \"tab-wrapper\"} onClick={() => setMakeView('all')}>All</div>\n              <div className={makeView === 'my' ? \"tab-wrapper selected\" : \"tab-wrapper\"} onClick={() => onChangeToUserMakeView()}>My</div>\n            </div>\n          </div>\n          <div className=\"list-title\">\n            <div className=\"blank-placeholder\"></div>\n            <div className=\"title-items\">\n              <div className=\"item-text\">Price ({getPriceHint()})</div>\n              <div className=\"item-text\">Amount ({getAmountHint()})</div>\n              { makeView === 'my' && <div className=\"item-placeholder\"></div> }\n            </div>\n          </div>\n          <div className=\"sell-section\">\n            <div className=\"section-title\">Sell</div>\n            <div className=\"make-list reverse\">\n            {getMakes('sell')}\n            </div>\n          </div>\n          {\n            (makeView === 'all' && Number(lastPrice) !== 0) ? <div className=\"last-price-wrapper\">\n              <div className=\"last-price-label\">Last Price</div>\n              <div className=\"last-price\">{lastPrice}</div>\n              <div className=\"last-price-placeholder\"></div>\n            </div> : null\n          }\n          <div className=\"buy-section\">\n            <div className=\"section-title\">Buy</div>\n            <div className=\"make-list\">\n            {getMakes('buy')}\n            </div>\n          </div>\n        </div>\n      </div>\n      {\n        pool.filter((tp) => Number(tp.balance) !== 0).length ? (\n          <div className=\"token-pool\">\n            <div className=\"container-header\">Token Balance</div>\n            <div className=\"pool-items\">\n            {generateTokenPool()}\n            </div>\n          </div>\n        ) : null\n      }\n      {\n        showPairSelectModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => setShowPairSelectModal(false)}></div>\n              <div className=\"pair-select-modal-wrapper\">\n                <div className=\"pair-select-modal-title\">Select</div>\n                <input type=\"text\" className=\"pair-select-modal-input\" value={pairNameKeyword} onInput={(e) => setPairNameKeyword(e.target.value)} />\n                <div className=\"pair-select-modal-list\">\n                  {\n                    pairs.filter((p) => {\n                      const nameLC = p.name.toLowerCase()\n                      const tNames = pairNameKeyword.split(' ').filter((n) => n)\n                      \n                      return tNames.reduce((a, b) => a && nameLC.indexOf(b) >= 0, true)\n                    }).map((p) => {\n                      return (\n                        <div key={p.name} className=\"pair-select-modal-list-item\" onClick={() => handlePairClick(p)}>\n                          {\n                            p.tokens.map((t) => <div key={`${p.name}-${t.name}`} className={`pair-select-modal-list-item-icon icon-${t.name}`}></div>)\n                          }\n                          <div className=\"pair-select-modal-list-item-name\">{p.name}</div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n    </div>\n  )\n}\n\nexport default Transaction","import React, { useState, useEffect } from 'react'\nimport { useMappedState } from 'redux-react-hook';\nimport Select, { components } from 'react-select'\nimport Input from '../input'\nimport { getTokenBalance } from '../../utils/token'\n\nimport './index.css'\n\nconst TokenInput = (props) => {\n  const { cls, value, round, tokens = [], defaultToken, inputDisabled = false, showBalance = true, withMax = true, onTokenChange, onAmountChange, balanceChange = 0 } = props\n  const [token, setToken] = useState(defaultToken || {})\n  const [balance, setBalance] = useState('-')\n  const { account } = useMappedState((state) => ({\n    account: state.wallet.account\n  }))\n\n  useEffect(() => {\n    if (account && showBalance && token.id) {\n      getTokenBalance(account, token, setBalance)\n    }\n  }, [token, showBalance, account, balanceChange])\n\n  const handleTokenChange = (e) => {\n    if (e.value !== token.id) {\n      const newToken = tokens.find((t) => t.id === e.value)\n\n      setToken(newToken)\n      typeof onTokenChange === 'function' && onTokenChange(newToken)\n    }\n  }\n\n  const renderTokenSeletion = (dToken) => {\n    if (tokens.length) {\n      const CustomOption = (props) => {\n        const label = props.label.split(' ')[0]\n        return (\n          <components.Option {...props}>\n            <div className=\"option-wrapper\">\n              <div className={`icon-${label} option-icon`}></div>\n              <div className=\"option-label\">{props.label}</div>\n            </div>\n          </components.Option>\n        )\n      }\n      const SingleValue = ({ children, ...props }) => {\n        const label = children.split(' ')[0]\n        return (\n          <components.SingleValue {...props}>\n            <div className=\"option-wrapper\">\n              <div className={`icon-${label} option-icon`}></div>\n              <div className=\"option-label\">{children}</div>\n            </div>\n          </components.SingleValue>\n        )\n      }\n      let defaultToken = dToken ? dToken : tokens[0]\n\n      if (!token.id || !tokens.find((t) => t.id === token.id)) {\n        setToken(defaultToken)\n      }\n\n      return (\n        <Select\n          className={`token-select ${cls}`}\n          defaultValue={defaultToken}\n          options={tokens}\n          isSearchable={false}\n          components={{ Option: CustomOption, SingleValue }}\n          onChange={(e) => handleTokenChange(e)}\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            colors: {\n              ...theme.colors,\n              primary: '#2c2c2c',\n            },\n          })}\n        />\n      )\n    }\n  }\n\n  const maxInput = () => {\n    if (!isNaN(balance) && typeof onAmountChange === 'function') {\n      onAmountChange(balance)\n    }\n  }\n\n  return (\n    <div className=\"token-input-wrapper\">\n      <div className=\"input-label\">{props.label || 'Input'}\n        { showBalance ? <span className=\"hint\">Balance: {balance}</span> : null }\n      </div>\n      <div className=\"input-wrapper\">\n        { renderTokenSeletion(defaultToken) }\n        <Input decimals={token.decimals} disabled={inputDisabled} value={value} round={round} onChange={(value) => onAmountChange(value)} />\n        { withMax && <div className=\"input-max-btn\" onClick={() => maxInput()}>MAX</div> }\n      </div>\n    </div>\n  )\n}\n\nexport default TokenInput\n","import { useEffect, useCallback } from 'react'\nimport { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { readBigNumberUint128 } from '../utils/token'\n\nconst { StringReader, reverseHex } = utils\n\nexport const useFetchPairs = () => {\n  const { account, tokens, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setSwapTokens = useCallback((tokens) => dispatch({ type: 'SET_SWAP_TOKENS', tokens }), [])\n  const setPairs = useCallback((pairs) => dispatch({ type: 'SET_PAIRS', pairs }), [])\n\n  useEffect(() => {\n    getSwapStat()\n    let interval = setInterval(getSwapStat, 3000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, tokens, swapTokens, SWAP_ADDRESS])\n\n  async function getSwapStat() {\n    if (SWAP_ADDRESS) {\n      try {\n        const pairStr = await client.api.smartContract.invokeWasmRead({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'stat',\n          args: []\n        })\n\n        const parsedPairs = []\n        const strReader = new StringReader(pairStr)\n        const pairCount = strReader.readNextLen()\n        for (let i = 0; i < pairCount; i++) {\n          const pair = {}\n          pair.address = reverseHex(strReader.read(20))\n          pair.token1 = strReader.readUint128()\n          pair.token2 = strReader.readUint128()\n          pair.id = strReader.readUint128()\n          pair.reserve1 = readBigNumberUint128(strReader)\n          pair.reserve2 = readBigNumberUint128(strReader)\n          pair.lp = readBigNumberUint128(strReader)\n          pair.min1 = readBigNumberUint128(strReader)\n          pair.min2 = readBigNumberUint128(strReader)\n\n          parsedPairs.push(pair)\n        }\n\n        const tokenIds = []\n        const tokenCount = strReader.readNextLen()\n        for (let i = 0; i < tokenCount; i++) {\n          tokenIds.push(strReader.readUint128())\n        }\n\n        setPairs(parsedPairs)\n        if (tokens.length && !swapTokens.length) {\n          setSwapTokens(tokenIds.map((t) => tokens.find((tk) => tk.id === t)))\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  return null\n}","import BigNumber from 'bignumber.js'\n\nconst REST = 0.997\n\nexport const findAllPaths = (pairs, sourceId, targetId) => {\n  let pathArr = []\n  const findPath = (sourceId, targetId, pathNodes = []) => {\n    pathNodes = [...pathNodes]\n    pathNodes.push(sourceId)\n\n    if (sourceId === targetId) {\n      pathArr.push(pathNodes)\n      return\n    }\n\n    let neighborNodes = []\n    pairs.map((p) => {\n      if (p.token1 === sourceId) {\n        neighborNodes.push(p.token2)\n      } else if (p.token2 === sourceId) {\n        neighborNodes.push(p.token1)\n      }\n    })\n\n    for (let id of neighborNodes) {\n      if (!pathNodes.includes(id)) {\n        findPath(id, targetId, pathNodes)\n      }\n    }\n  }\n\n  findPath(sourceId, targetId)\n\n  pathArr.sort((p1, p2) => {\n    return p1.length - p2.length\n  })\n  \n  return pathArr\n}\n\nconst getInputAmount = (output, pair, reverse = false) => {\n  let amount\n  if (reverse) {\n    amount = new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(pair.reserve1).minus(output)).minus(pair.reserve2).div(REST).integerValue(BigNumber.ROUND_CEIL).toString()\n  } else {\n    amount = new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(pair.reserve2).minus(output)).minus(pair.reserve1).div(REST).integerValue(BigNumber.ROUND_CEIL).toString()\n  }\n  return amount\n}\n\nconst getOutputAmount = (input, pair, reverse = false) => {\n  let amount\n  if (reverse) {\n    amount = new BigNumber(pair.reserve1).minus(new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(input).times(REST).plus(pair.reserve2))).integerValue(BigNumber.ROUND_FLOOR).toString()\n  } else {\n    amount = new BigNumber(pair.reserve2).minus(new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(input).times(REST).plus(pair.reserve1))).integerValue(BigNumber.ROUND_FLOOR).toString()\n  }\n  return amount\n}\n\nconst findNextOutput = (input, pairs, token1, token2) => {\n  let pair = pairs.find((p) => p.token1 === token1 && p.token2 === token2)\n\n  if (pair) {\n    return getOutputAmount(input, pair)\n  }\n\n  pair = pairs.find((p) => p.token1 === token2 && p.token2 === token1)\n\n  if (pair) {\n    return getOutputAmount(input, pair, true)\n  }\n}\n\nconst findPrevInput = (output, pairs, token1, token2) => {\n  let pair = pairs.find((p) => p.token1 === token1 && p.token2 === token2)\n\n  if (pair) {\n    return getInputAmount(output, pair)\n  }\n\n  pair = pairs.find((p) => p.token1 === token2 && p.token2 === token1)\n\n  if (pair) {\n    return getInputAmount(output, pair, true)\n  }\n}\n\nexport const bestSwap = (type = 'exactin', amount, pairs, token1, token2) => {\n  const paths = findAllPaths(pairs, token1, token2)\n  const originAmount = amount\n  let maxOutput = 0\n  let minInput = Infinity\n  let path = []\n  \n  for (let i = 0; i < paths.length; i++) {\n    amount = originAmount\n    if (type === 'exactin') {\n      for (let j = 0; j < paths[i].length - 1; j++) {\n        amount = findNextOutput(amount, pairs, paths[i][j], paths[i][j + 1])\n      }\n  \n      if (new BigNumber(amount).gt(new BigNumber(maxOutput))) {\n        maxOutput = amount\n        path = paths[i]\n      }\n    } else {\n      for (let j = paths[i].length - 1; j > 0; j--) {\n        amount = findPrevInput(amount, pairs, paths[i][j - 1], paths[i][j])\n      }\n  \n      if (new BigNumber(amount).lt(new BigNumber(minInput)) && amount > 0) {\n        minInput = amount\n        path = paths[i]\n      }\n    }\n  }\n\n  if (type === 'exactin') {\n    return [maxOutput, path]\n  } else if (type === 'exactout') {\n    return [minInput, path]\n  }\n}\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport TokenInput from '../../components/tokenInput'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport { toLocaleFixed } from '../../utils/common'\nimport { bestSwap } from '../../utils/swap'\nimport './index.css'\n\nconst Swap = () => {\n  const [balanceChange, setBalanceChange] = useState(0)\n  const { account, slippage, pairs, tokens: swapTokens, swapType, token1, token2, token1Amount, token2Amount, isValidPair, isValidSwap, bestPath, showPrice, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    ...state.swap,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const setSwapType = useCallback((swapType) => dispatch({ type: 'SET_SWAP_TYPE', swapType }), [])\n  const setToken1 = useCallback((token1) => dispatch({ type: 'SET_SWAP_TOKEN1', token1 }), [])\n  const setToken2 = useCallback((token2) => dispatch({ type: 'SET_SWAP_TOKEN2', token2 }), [])\n  const setToken1Amount = useCallback((token1Amount) => dispatch({ type: 'SET_TOKEN1_AMOUNT', token1Amount }), [])\n  const setToken2Amount = useCallback((token2Amount) => dispatch({ type: 'SET_TOKEN2_AMOUNT', token2Amount }), [])\n  const setIsValidPair = useCallback((isValidPair) => dispatch({ type: 'SET_IS_VALID_PAIR', isValidPair }), [])\n  const setIsValidSwap = useCallback((isValidSwap) => dispatch({ type: 'SET_IS_VALID_SWAP', isValidSwap }), [])\n  const setBestPath = useCallback((bestPath) => dispatch({ type: 'SET_SWAP_BEST_PATH', bestPath }), [])\n  const setShowPrice = useCallback((showPrice) => dispatch({ type: 'SET_SWAP_SHOW_RPICE', showPrice }), [])\n\n  const Alert = useAlert()\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (token1.id !== token2.id && token1Amount > 0 && token2Amount > 0 && bestPath.length) {\n      setShowPrice(true)\n      setIsValidSwap(true)\n    } else {\n      setShowPrice(false)\n      setIsValidSwap(false)\n    }\n  }, [token1, token2, token1Amount, token2Amount, bestPath])\n\n  useEffect(() => {\n    if (swapTokens.length) {\n      setToken1(swapTokens.find((st) => st.name === (localStorage.getItem('swap_token1') || 'pDAI')))\n      setToken2(swapTokens.find((st) => st.name === (localStorage.getItem('swap_token2') || 'UNX')))\n    }\n  }, [swapTokens])\n\n  useEffect(() => {\n    if (token1.id && token2.id && validPair(token1.id, token2.id)) {\n      setIsValidPair(true)\n    } else {\n      setIsValidPair(false)\n    }\n  }, [token1, token2])\n\n  function validPair(token1, token2) {\n    if (pairs.length) {\n      if (token1 && token2 && pairs.find((p) => (p.token1 === token1 && p.token2 === token2) || (p.token1 === token2 && p.token2 === token1))) {\n        return true\n      }\n    }\n    return false\n  }\n\n  function onChangeToken1(token) {\n    if (token.id !== token1.id) {\n      setToken1(token)\n      localStorage.setItem('swap_token1', token.name)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onChangeToken2(token) {\n    if (token.id !== token2.id) {\n      setToken2(token)\n      localStorage.setItem('swap_token2', token.name)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onToken1AmountChange(amount) {\n    if (amount !== token1Amount) {\n      setSwapType('exactin')\n      setToken1Amount(amount)\n      if (isValidPair && amount) {\n        const inputAmount = new BigNumber(amount).times(10 ** token1.decimals).toString()\n        const [maxOutput, path] = bestSwap('exactin', inputAmount, pairs, token1.id, token2.id)\n\n        setToken2Amount(new BigNumber(maxOutput).div(10 ** token2.decimals).toString())\n        setBestPath(path)\n      } else if (Number(amount) === 0) {\n        setToken2Amount('')\n      }\n    }\n  }\n\n  function onToken2AmountChange(amount) {\n    if (amount !== token2Amount) {\n      setSwapType('exactout')\n      setToken2Amount(amount)\n      if (isValidPair && amount) {\n        const outputAmount = amount * (10 ** token2.decimals)\n        const [minInput, path] = bestSwap('exactout', outputAmount, pairs, token1.id, token2.id)\n\n        if (minInput === Infinity) {\n          setToken1Amount('')\n        } else {\n          setToken1Amount(new BigNumber(minInput).div(10 ** token1.decimals).toString())\n        }\n        setBestPath(path)\n      } else if (Number(amount) === 0) {\n        setToken1Amount('')\n      }\n    }\n  }\n\n  function onNavigateToPool() {\n    history.push('/pool')\n  }\n\n  async function handleSwap() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (token1Amount <= 0 || token2Amount <= 0) {\n      Alert.error('Amount should be greater than 0')\n      return\n    }\n    if (token1.id && token1.id === token2.id) {\n      Alert.error('Input should be different')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Array',\n            value: bestPath.map((p) => ({ type: 'Long', value: p }))\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const swapResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: swapType === 'exactin' ? 'swap_exact_tokens_for_tokens' : 'swap_tokens_for_exact_tokens',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (swapResult.transaction) {\n          setBalanceChange(balanceChange + 1)\n          setToken1Amount('')\n          setToken2Amount('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${swapResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function getPrice() {\n    return `${toLocaleFixed(token2Amount / token1Amount, 6)} ${token2.name} per ${token1.name}`\n  }\n\n  function getMinReceiveOrMaxSold() {\n    if (swapType === 'exactin') {\n      return <p>Minimum Received:<span>{toLocaleFixed(token2Amount * (1 - slippage / 100), 6)} {token2.name}</span></p>\n    } else {\n      return <p>Maximum Sold:<span>{toLocaleFixed(token1Amount * (1 + slippage / 100), 6)} {token1.name}</span></p>\n    }\n  }\n\n  function getPriceImpact() {\n    let price\n    let pair = pairs.find((p) => p.token1 === token1.id && p.token2 === token2.id)\n\n    if (pair) {\n      price = new BigNumber(pair.reserve2).div(10 ** token2.decimals).div(pair.reserve1).times(10 ** token1.decimals).toString()\n    } else {\n      pair = pairs.find((p) => p.token1 === token2.id && p.token2 === token1.id)\n\n      if (pair) {\n        price = new BigNumber(pair.reserve1).div(10 ** token1.decimals).div(pair.reserve2).times(10 ** token2.decimals).toString()\n      }\n    }\n\n    return <p>Price Impact:<span>{Math.abs((token2Amount / token1Amount - price) / price * 100).toFixed(2)}%</span></p>\n  }\n\n  function getBestPath() {\n    if (bestPath.length) {\n      const items = []\n      bestPath.map((t, index) => {\n        const token = swapTokens.find((tk) => tk.id === t)\n        index > 0 && items.push((<div className=\"icon-arrow-right\"></div>))\n        items.push((<div className={`path-icon icon-${token.name}`}>{token.name}</div>))\n\n        return t\n      })\n\n      return items\n    }\n  }\n\n  return (\n    <div className=\"sw-wrapper\">\n      <div className=\"sw-container\">\n        <div className=\"sw-tabs\">\n          <div className=\"sw-tab active\">Swap</div>\n          <div className=\"sw-tab\" onClick={() => onNavigateToPool()}>Pool</div>\n        </div>\n        <div className=\"sw-content\">\n          <TokenInput\n            balanceChange={balanceChange}\n            label=\"From\"\n            tokens={swapTokens}\n            value={token1Amount}\n            round='up'\n            defaultToken={swapTokens.length && swapTokens.find((st) => st.name === (localStorage.getItem('swap_token1') || 'pDAI'))}\n            onTokenChange={(token) => onChangeToken1(token)}\n            onAmountChange={(amount) => onToken1AmountChange(amount)} />\n          <div className=\"icon-arrow-down\"></div>\n          <TokenInput\n            balanceChange={balanceChange}\n            label=\"To\"\n            tokens={swapTokens}\n            value={token2Amount}\n            round='down'\n            defaultToken={swapTokens.length && swapTokens.find((st) => st.name === (localStorage.getItem('swap_token2') || 'UNX'))}\n            onTokenChange={(token) => onChangeToken2(token)}\n            onAmountChange={(amount) => onToken2AmountChange(amount)} />\n          { showPrice ? <div className=\"sw-price-wrapper\">Price<span className=\"sw-price-info\">{getPrice()}</span></div> : null }\n          { isValidPair ? null : <div className=\"add-liquidity-hint\">Add liquidity to enable swaps for this pair.</div> }\n          { isValidPair ? ( isValidSwap ? <div className=\"sw-swap-btn\" onClick={() => handleSwap()}>Swap</div> : <div className=\"sw-swap-btn disabled\">Swap</div> ) : <div className=\"sw-swap-btn disabled\">Invalid Liquidity</div> }\n        </div>\n        {\n          isValidPair && isValidSwap ? (\n            <div className=\"sw-hint-wrapper\">\n              <div className=\"sw-input-output\">{getMinReceiveOrMaxSold()}</div>\n              <div className=\"sw-price-impact\">{getPriceImpact()}</div>\n              <div className=\"sw-best-path\">\n                <p>Route:</p>\n                <div className=\"sw-best-path-list\">\n                  {getBestPath()}\n                </div>\n              </div>\n            </div>\n          ) : null\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Swap\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { readBigNumberUint128 } from '../../utils/token'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Pool = () => {\n  const { account, tokens, pairs, liquidityBalance, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    ...state.pool,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setLiquidityBalance = useCallback((liquidityBalance) => dispatch({ type: 'SET_POOL_LIQUIDITY_BALANCE', liquidityBalance }), [])\n\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (account && pairs.length && SWAP_ADDRESS) {\n      const getLiquidityBalanceByPairId = (id) => {\n        return client.api.smartContract.invokeWasmRead({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'balanceOf',\n          args: [\n            {\n              type: 'Long',\n              value: id\n            },\n            {\n              type: 'Address',\n              value: account\n            }\n          ]\n        }).then((resp) => {\n          const strReader = new StringReader(resp)\n          const balance = readBigNumberUint128(strReader)\n          \n          return { [id]: balance }\n        })\n      }\n      Promise.all(pairs.map((p) => getLiquidityBalanceByPairId(p.id))).then((resp) => {\n        setLiquidityBalance(resp)\n      })\n    }\n  }, [account, pairs, SWAP_ADDRESS])\n\n  function onNavigateToSwap() {\n    history.push('/swap')\n  }\n\n  function onNavigateToAddLiquidity() {\n    history.push('/pool/add')\n  }\n\n  function onRemoveLiquidity(pairId) {\n    history.push(`/pool/remove/${pairId}`)\n  }\n\n  function generateLiquidityList() {\n    const myLiquidities = liquidityBalance.filter((l) => l[Object.keys(l)[0]])\n    if (myLiquidities.length && pairs.length && tokens.length) {\n      return myLiquidities.map((lb) => {\n        const pairId = Object.keys(lb)[0]\n        const pair = pairs.find((p) => `${p.id}` === pairId)\n        const token1 = tokens.find((t) => t.id === pair.token1)\n        const token2 = tokens.find((t) => t.id === pair.token2)\n        const balance = new BigNumber(lb[pairId])\n        const shareOfPool = balance.div(pair.lp)\n        const token1Amount = shareOfPool.times(pair.reserve1).div(10 ** token1.decimals).toFixed(token1.decimals)\n        const token2Amount = shareOfPool.times(pair.reserve2).div(10 ** token2.decimals).toFixed(token2.decimals)\n        \n        return (\n          <div className=\"pool-liquidity-item\">\n            <div className=\"liquidity-item-detail\">\n              <div className={`token-icon icon-${token1.name}`}></div>\n              <div className={`token-icon icon-${token2.name}`}></div>\n              <div className=\"token-pair\"><strong>{token1.name}/{token2.name}</strong></div>\n              <div className=\"pair-position\"><strong>Pooled</strong>: {token1Amount} / {token2Amount}</div>\n              <div className=\"pool-tokens\"><strong>Pool Tokens</strong>: {balance.div(10 ** 18).toString()}</div>\n            </div>\n            <div className=\"remove-liquidity-btn\" onClick={() => onRemoveLiquidity(pairId)}>Remove</div>\n          </div>\n        )\n      })\n    } else {\n      return <div className=\"pool-empty-lp\">No Liquidities</div>\n    }\n  }\n\n  return (\n    <div className=\"pool-wrapper\">\n      <div className=\"pool-container\">\n        <div className=\"sw-tabs\">\n          <div className=\"sw-tab\" onClick={() => onNavigateToSwap()}>Swap</div>\n          <div className=\"sw-tab active\">Pool</div>\n        </div>\n        <div className=\"pool-content\">\n          <div className=\"pool-add-liquidity-btn\" onClick={() => onNavigateToAddLiquidity()}>Add Liquidity</div>\n          <div className=\"pool-liquidity-list\">\n            <div className=\"my-liquidity\">Your Liquidity</div>\n            {generateLiquidityList()}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Pool","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport TokenInput from '../../../components/tokenInput'\nimport { useFetchPairs } from '../../../hooks/usePair';\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\nimport './index.css'\n\nconst AddLiquidity = () => {\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState('')\n  const [token2Amount, setToken2Amount] = useState('')\n  const [minToken1, setMinToken1] = useState('')\n  const [minToken2, setMinToken2] = useState('')\n  const [enableAdd, setEnableAdd] = useState(false)\n  const [isValidPair, setIsValidPair] = useState(true)\n  const [isFirstProvider, setIsFirstProvider] = useState(false)\n  const [showPriceInfo, setShowPriceInfo] = useState(false)\n  const [balanceChange, setBalanceChange] = useState(0)\n  const { account, slippage, pairs, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    pairs: state.swap.pairs,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (token1Amount > 0 && token2Amount > 0) {\n      if (Number(minToken1) && new BigNumber(token1Amount).lt(new BigNumber(minToken1))) {\n        setEnableAdd(false)\n      } else if (Number(minToken2) && new BigNumber(token2Amount).lt(new BigNumber(minToken2))) {\n        setEnableAdd(false)\n      } else {\n        setEnableAdd(true)\n      }\n    } else {\n      setEnableAdd(false)\n    }\n  }, [token1Amount, token2Amount])\n\n  useEffect(() => {\n    if (!token1.id || !token2.id || (token1.id === token2.id)) {\n      setIsValidPair(false)\n    } else {\n      setIsValidPair(true)\n    }\n  }, [token1, token2])\n\n  useEffect(() => {\n    const pair = getPairByToken()\n    if (pair) {\n      if (token1.id === pair.token1 && Number(pair.min1)) {\n        setMinToken1(pair.min1 / (10 ** token1.decimals))\n      } else if (token1.id === pair.token2 && Number(pair.min2)) {\n        setMinToken1(pair.min2 / (10 ** token1.decimals))\n      } else {\n        setMinToken1('')\n      }\n\n      if (token2.id === pair.token1 && Number(pair.min1)) {\n        setMinToken2(pair.min1 / (10 ** token2.decimals))\n      } else if (token2.id === pair.token2 && Number(pair.min2)) {\n        setMinToken2(pair.min2 / (10 ** token2.decimals))\n      } else {\n        setMinToken2('')\n      }\n    } else {\n      setMinToken1('')\n      setMinToken2('')\n    }\n  }, [token1, token2])\n\n  useEffect(() => {\n    const pair = getPairByToken()\n    if (token1.id && token2.id && token1.id !== token2.id && (!pairs.length || !pair || (pair.reserve1 === 0 && pair.reserve2 === 0))) {\n      setIsFirstProvider(true)\n    } else {\n      setIsFirstProvider(false)\n    }\n  }, [pairs, token1, token2])\n\n  useEffect(() => {\n    if (token1.id && token2.id) {\n      setShowPriceInfo(true)\n    } else {\n      setShowPriceInfo(false)\n    }\n  }, [pairs, token1, token2, token1Amount, token2Amount])\n\n  useEffect(() => {\n    if (swapTokens.length) {\n      setToken1(swapTokens.find((st) => st.name === (localStorage.getItem('swap_token1') || 'pDAI')))\n      setToken2(swapTokens.find((st) => st.name === (localStorage.getItem('swap_token2') || 'UNX')))\n    }\n  }, [account, swapTokens])\n\n  function getPairByToken() {\n    return pairs.find((p) => (p.token1 === token1.id && p.token2 === token2.id) || (p.token1 === token2.id && p.token2 === token1.id))\n  }\n\n  function onChangeToken1(token) {\n    if (token.id !== token1.id) {\n      setToken1(token)\n      localStorage.setItem('swap_token1', token.name)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onChangeToken2(token) {\n    if (token.id !== token2.id) {\n      setToken2(token)\n      localStorage.setItem('swap_token2', token.name)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onToken1AmountChange(amount) {\n    setToken1Amount(amount)\n    if (!isFirstProvider) {\n      if (amount) {\n        setToken2Amount(new BigNumber(amount).times(getPairPrice()).times(10 ** token2.decimals).integerValue(BigNumber.ROUND_CEIL).div(10 ** token2.decimals).toString())\n      } else if (Number(amount) === 0) {\n        setToken2Amount('')\n      }\n    }\n  }\n\n  function onToken2AmountChange(amount) {\n    setToken2Amount(amount)\n    if (!isFirstProvider) {\n      if (amount) {\n        setToken1Amount(new BigNumber(amount).div(getPairPrice()).times(10 ** token1.decimals).integerValue(BigNumber.ROUND_CEIL).div(10 ** token1.decimals).toString())\n      } else if (Number(amount) === 0) {\n        setToken1Amount('')\n      }\n    }\n  }\n\n  function getPairPrice() {\n    if (token1.id && token2.id && pairs.length) {\n      if (isFirstProvider && token1Amount && token2Amount) {\n        return token2Amount / token1Amount\n      }\n      let pair = pairs.find((p) => p.token1 === token1.id && p.token2 === token2.id)\n      if (pair) {\n        return pair.reserve1 ? new BigNumber(pair.reserve2).div(10 ** token2.decimals).div(pair.reserve1).times(10 ** token1.decimals) : 0\n      }\n      pair = pairs.find((p) => p.token1 === token2.id && p.token2 === token1.id)\n      if (pair) {\n        return pair.reserve2 ? new BigNumber(pair.reserve1).div(10 ** token1.decimals).div(pair.reserve2).times(10 ** token2.decimals) : 0\n      }\n    }\n\n    return 0\n  }\n\n  function getShareOfPool() {\n    if (isFirstProvider) {\n      return '100%'\n    } else {\n      const pair = getPairByToken()\n      const amountProduct = new BigNumber(token1Amount || 0).times(10 ** token1.decimals).times(token2Amount || 0).times(10 ** token2.decimals)\n\n      if (pair) {\n        return `${amountProduct.times(100).div(new BigNumber(pair.reserve1).times(pair.reserve2).plus(amountProduct)).toFixed(2)}%`\n      }\n      return `0%`\n    }\n  }\n\n  function onNavigateToPool() {\n    history.goBack()\n  }\n\n  async function onAdd() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (token1Amount <= 0 || token2Amount <= 0) {\n      Alert.error('Amount should be greater than 0')\n      return\n    }\n    if (token1.id && token1.id === token2.id) {\n      Alert.error('Input should be different')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: token1.id\n          },\n          {\n            type: 'Long',\n            value: token2.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const addResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'add_liquidity',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (addResult.transaction) {\n          setBalanceChange(balanceChange + 1)\n          setToken1Amount('')\n          setToken2Amount('')\n          onNavigateToPool()\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${addResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"add-liquidity-wrapper\">\n      <div className=\"al-header\">Add Liquidity\n        <div className=\"back-icon\" onClick={() => onNavigateToPool()}></div>\n      </div>\n      <div className=\"al-wrapper\">\n        {\n          isValidPair && isFirstProvider ? (\n            <div className=\"first-provider-hint\">\n              <div><strong>You are the first liquidity provider.</strong><br /><br />The ratio of tokens you add will set the price of this pool.</div>\n            </div>\n          ) : null\n        }\n        <TokenInput\n          balanceChange={balanceChange}\n          tokens={swapTokens}\n          value={token1Amount}\n          defaultToken={swapTokens.length && swapTokens.find((st) => st.name === (localStorage.getItem('swap_token1') || 'pDAI'))}\n          onTokenChange={(token) => onChangeToken1(token)}\n          onAmountChange={(amount) => onToken1AmountChange(amount)} />\n        { Number(minToken1) ? <div className=\"min-amount-hint\">(Minimum: {minToken1})</div> : null }\n        <div className=\"icon-plus\"></div>\n        <TokenInput\n          balanceChange={balanceChange}\n          tokens={swapTokens}\n          value={token2Amount}\n          defaultToken={swapTokens.length && swapTokens.find((st) => st.name === (localStorage.getItem('swap_token2') || 'UNX'))}\n          onTokenChange={(token) => onChangeToken2(token)}\n          onAmountChange={(amount) => onToken2AmountChange(amount)} />\n        { Number(minToken2) ? <div className=\"min-amount-hint\">(Minimum: {minToken2})</div> : null }\n        {\n          isValidPair && showPriceInfo ? (\n            <div className=\"al-price-wrapper\">\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{getPairPrice().toFixed(4)}</div>\n                <div className=\"price-item-label\">{token2.name} per {token1.name}</div>\n              </div>\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{(getPairPrice() ? 1 / getPairPrice() : 0).toFixed(4)}</div>\n                <div className=\"price-item-label\">{token1.name} per {token2.name}</div>\n              </div>\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{getShareOfPool()}</div>\n                <div className=\"price-item-label\">Share of Pool</div>\n              </div>\n            </div>\n          ) : null\n        }\n        {\n          enableAdd ? (\n            <div className=\"al-add-btn\" onClick={() => onAdd()}>Add</div>\n          ) : (\n            <div className=\"al-add-btn disabled\">Add</div>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default AddLiquidity\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { utils } from 'ontology-ts-sdk'\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport Slider from 'rc-slider'\nimport { readBigNumberUint128 } from '../../../utils/token'\nimport { useFetchPairs } from '../../../hooks/usePair';\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\nimport 'rc-slider/assets/index.css'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst RemoveLiquidity = () => {\n  const [liquidityBalance, setLiquidityBalance] = useState(0)\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState(0)\n  const [token2Amount, setToken2Amount] = useState(0)\n  const [pair, setPair] = useState({})\n  const [amount, setAmount] = useState(0)\n  const [showPrice, setShowPrice] = useState(false)\n  const { account, slippage, tokens, pairs, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n  const location = useLocation()\n  const pairId = location.pathname.match(/\\/([^/]+)$/)[1]\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (account && pairs.length && pairId) {\n      getLiquidityBalanceByPairId(pairId).then((resp) => {\n        setLiquidityBalance(resp)\n      })\n    }\n  }, [account, pairs, SWAP_ADDRESS])\n\n  useEffect(() => {\n    if (tokens.length && pairs.length && pairId) {\n      const pair = pairs.find((p) => `${p.id}` === pairId)\n      setPair(pair)\n      setToken1(tokens.find((t) => t.id === pair.token1))\n      setToken2(tokens.find((t) => t.id === pair.token2))\n      setShowPrice(true)\n    }\n  }, [pairs, tokens])\n\n  useEffect(() => {\n    if (pair && token1.id && token2.id && pairId && liquidityBalance) {\n      const shareOfPool = new BigNumber(liquidityBalance).div(pair.lp)\n      const token1Amount = shareOfPool.times(pair.reserve1).div(10 ** token1.decimals)\n      const token2Amount = shareOfPool.times(pair.reserve2).div(10 ** token2.decimals)\n\n      setToken1Amount(new BigNumber(amount).div(100).times(token1Amount).toFixed(token1.decimals))\n      setToken2Amount(new BigNumber(amount).div(100).times(token2Amount).toFixed(token2.decimals))\n    }\n  }, [amount, pair, token1, token2])\n\n  function getLiquidityBalanceByPairId(id) {\n    if (SWAP_ADDRESS) {\n      return client.api.smartContract.invokeWasmRead({\n        scriptHash: SWAP_ADDRESS,\n        operation: 'balanceOf',\n        args: [\n          {\n            type: 'Long',\n            value: id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n      }).then((resp) => {\n        const strReader = new StringReader(resp)\n        const balance = readBigNumberUint128(strReader)\n        \n        return balance\n      })\n    }\n  }\n\n  function getPairPrice() {\n    return new BigNumber(pair.reserve2).div(10 ** token2.decimals).div(pair.reserve1).times(10 ** token1.decimals).toString()\n  }\n\n  function onNavigateToPool() {\n    history.goBack()\n  }\n\n  async function onRemove() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: token1.id\n          },\n          {\n            type: 'Long',\n            value: token2.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(liquidityBalance).times(amount / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(10 ** token1.decimals).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(10 ** token2.decimals).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n\n        const addResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'remove_liquidity',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (addResult.transaction) {\n          onNavigateToPool()\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${addResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"remove-liquidity-wrapper\">\n      <div className=\"rl-header\">Remove Liquidity\n        <div className=\"back-icon\" onClick={() => onNavigateToPool()}></div>\n      </div>\n      <div className=\"rl-wrapper\">\n        <div className=\"rl-amount\">\n          <div className=\"rl-amount-label\">Amount<span>{amount}%</span></div>\n          <Slider value={amount} onChange={(e) => setAmount(e)} />\n          <div className=\"quick-items\">\n            <div className=\"quick-item\" onClick={() => setAmount(25)}>25%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(50)}>50%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(75)}>75%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(100)}>Max</div>\n          </div>\n        </div>\n        <div className=\"icon-arrow-down\" />\n        <div className=\"rl-receive-wrapper\">\n          <div className={`receive-token-item icon-${token1.name}`}>\n            {token1.name}\n            <span>{token1Amount}</span>\n          </div>\n          <div className={`receive-token-item icon-${token2.name}`}>\n            {token2.name}\n            <span>{token2Amount}</span>\n          </div>\n        </div>\n        {\n          showPrice ? (\n            <div className=\"rl-price-wrapper\">\n              <div className=\"price-wrapper-lable\">Price</div>\n              <div className=\"price\">1 {token1.name} = {getPairPrice()} {token2.name}</div>\n              <div className=\"price-reverse\">1 {token2.name} = {new BigNumber(1).div(getPairPrice()).toString()} {token1.name}</div>\n            </div>\n          ) : null\n        }\n        { amount ? <div className=\"rl-remove-btn\" onClick={() => onRemove()}>Remove</div> : <div className=\"rl-remove-btn disabled\">Remove</div> }\n      </div>\n    </div>\n  )\n}\n\nexport default RemoveLiquidity","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport Tooltip from 'rc-tooltip'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { DAI_PRICE } from '../../utils/constants'\nimport { GOVERNANCE_ADDRESS } from '../../config'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport { readBigNumberUint128, getTokenIconDom } from '../../utils/token'\n\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Staking = () => {\n  const [showClosedEntry, setShowClosedEntry] = useState(false)\n  const [showClosed, setShowClosed] = useState(false)\n  const [unxPrice, setUnxPrice] = useState(0)\n  const [tokenPrices, setTokenPrices] = useState({})\n  const { account, tokens, stakingTokens, poolStat, pairs, stakingPoolWeightRatio, STAKING_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    stakingTokens: state.staking.tokens,\n    poolStat: state.gov.poolStat,\n    pairs: state.swap.pairs,\n    stakingPoolWeightRatio: state.gov.poolStat.pools.staking.ratio,\n    STAKING_ADDRESS: state.gov.poolStat.pools.staking.address\n  }))\n  const dispatch = useDispatch()\n  const setStakingTokens = useCallback((tokens) => dispatch({ type: 'SET_STAKING_TOKENS', tokens }), [])\n  const history = useHistory()\n  const Alert = useAlert()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (pairs.length && (!unxPrice || unxPrice === '0')) {\n      const unxTk = tokens.find((t) => t.name === 'UNX')\n      const daiTk = tokens.find((t) => t.name === 'pDAI')\n      const pair = pairs.find((p) => (p.token1 === unxTk.id && p.token2 === daiTk.id) || (p.token2 === unxTk.id && p.token1 === daiTk.id))\n\n      if (pair) {\n        if (pair.token1 === unxTk.id) {\n          setUnxPrice(new BigNumber(pair.reserve2).div(10 ** daiTk.decimals).div(pair.reserve1).times(10 ** unxTk.decimals).times(DAI_PRICE).toString())\n        } else {\n          setUnxPrice(new BigNumber(pair.reserve1).div(10 ** daiTk.decimals).div(pair.reserve2).times(10 ** unxTk.decimals).times(DAI_PRICE).toString())\n        }\n      }\n    }\n  }, [pairs, tokens])\n\n  useEffect(() => {\n    getStakingTokenPrice()\n    let interval = setInterval(getStakingTokenPrice, 3000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [stakingTokens])\n\n  useEffect(() => {\n    getStakingTokenBalance()\n    let interval = setInterval(getStakingTokenBalance, 3000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokens, STAKING_ADDRESS])\n\n  useEffect(() => {\n    if (stakingTokens.filter((st) => !st.originWeight).length) {\n      setShowClosedEntry(true)\n    } else {\n      setShowClosedEntry(false)\n    }\n  }, [stakingTokens])\n\n  async function getStakingTokenPrice() {\n    if (stakingTokens.length) {\n      try {\n        const unxToken = tokens.find((t) => t.name === 'UNX')\n        const parsedTokenPrices = {}\n        const LPTokens = stakingTokens.filter((st) => st.ty === 3)\n        const nonLPTokens = stakingTokens.filter((st) => st.ty !== 3)\n        const tokenIds = nonLPTokens.map((t) => t.id)\n        \n        LPTokens.map((lpt) => {\n          const tokenNames = lpt.name.split('-').filter((t) => t !== 'LP' && t !== 'UNX')\n\n          tokenNames.map((tn) => {\n            const tokenId = tokens.find((t) => t.name === tn).id\n          \n            if (tokenIds.indexOf(tokenId) < 0) {\n              tokenIds.push(tokenId)\n            }\n          })\n        })\n\n        const args = [\n          {\n            type: 'Array',\n            value: tokenIds.map((id) => ({ type: 'Long', value: id }))\n          }\n        ]\n        const tokenPriceStr = await client.api.smartContract.invokeWasmRead({\n          scriptHash: GOVERNANCE_ADDRESS,\n          operation: 'token_prices',\n          args\n        })\n        const strReader = new StringReader(tokenPriceStr)\n        const tokenCount = strReader.readNextLen()\n        for (let i = 0; i < tokenCount; i++) {\n          parsedTokenPrices[tokenIds[i]] = readBigNumberUint128(strReader)\n        }\n\n        LPTokens.map((lpt) => {\n          const tokenNames = lpt.name.split('-').filter((t) => t !== 'LP')\n          const token1 = tokens.find((t) => t.name === tokenNames[0])\n          const token2 = tokens.find((t) => t.name === tokenNames[1])\n          const pair = pairs.find((p) => (p.token1 === token1.id && p.token2 === token2.id) || p.token1 === token2.id && p.token2 === token1.id)\n\n          if (pair) {\n            let value = new BigNumber(0)\n            if (token1.name === 'UNX' || token2.name === 'UNX') {\n              const nonUnxToken = (token1.name === 'UNX') ? token2 : token1\n\n              if (pair.token1 === unxToken.id) {\n                value = value.plus(new BigNumber(pair.reserve2).div(10 ** nonUnxToken.decimals).times(parsedTokenPrices[pair.token2]).times(2))\n              } else {\n                value = value.plus(new BigNumber(pair.reserve1).div(10 ** nonUnxToken.decimals).times(parsedTokenPrices[pair.token1]).times(2))\n              }\n            } else {\n              if (pair.token1 === token1.id) {\n                value  = value.plus(new BigNumber(pair.reserve1).div(10 ** token1.decimals).times(parsedTokenPrices[pair.token1])).plus(new BigNumber(pair.reserve2).div(10 ** token2.decimals).times(parsedTokenPrices[pair.token2]))\n              } else {\n                value  = value.plus(new BigNumber(pair.reserve1).div(10 ** token2.decimals).times(parsedTokenPrices[pair.token1])).plus(new BigNumber(pair.reserve2).div(10 ** token1.decimals).times(parsedTokenPrices[pair.token2]))\n              }\n            }\n\n            parsedTokenPrices[lpt.id] = value.div(pair.lp).times(10 ** 18).toString()\n          }\n        })\n        \n        setTokenPrices(parsedTokenPrices)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  async function getStakingTokenBalance() {\n    if (tokens.length && STAKING_ADDRESS) {\n      try {\n        const statStr = await client.api.smartContract.invokeWasmRead({\n          scriptHash: STAKING_ADDRESS,\n          operation: 'stat',\n          args: []\n        })\n        const parsedTokens = []\n        const strReader = new StringReader(statStr)\n        const tokenCount = strReader.readNextLen()\n        for (let i = 0; i < tokenCount; i++) {\n          const token = {}\n          token.id = strReader.readUint128()\n          const tempToken = tokens.find((t) => t.id === token.id)\n          token.weight = strReader.readUint128()\n          token.balance = readBigNumberUint128(strReader)\n\n          parsedTokens.push(Object.assign({}, tempToken, token))\n        }\n\n        const totalWeight = parsedTokens.filter((t) => t.balance).reduce((a, b) => a + b.weight, 0)\n        const filteredTokens = parsedTokens.map((t) => {\n          return {\n            ...t,\n            originWeight: t.weight,\n            weight: t.balance ? (t.weight / totalWeight) : 0\n          }\n        })\n\n        setStakingTokens(filteredTokens)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  function onSelectToken(token) {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    history.push(`/staking/${token.id}`)\n  }\n\n  function getTip(token) {\n    return `${token.name} is the hidden receipt for WING ${token.name.replace('f', '')} suppliers`\n  }\n\n  function generateStakingPool() {\n    if (stakingTokens.length) {\n      const openStakingTokens = stakingTokens.filter((t) => !!t.originWeight)\n      const closedStakingTokens = stakingTokens.filter((t) => !t.originWeight)\n\n      return (showClosed ? closedStakingTokens : openStakingTokens).map((token) => {\n        const unxAmount = new BigNumber(poolStat.distributionInfo.amount || 0)\n          .div(poolStat.distributionInfo.period || 1)\n          .times(86400 * 365)\n          .times(stakingPoolWeightRatio || 0)\n          .times(token.weight)\n        const tokenAPY = tokenPrices[token.id] ? unxAmount\n          .times(unxPrice)\n          .times(10 ** 12)\n          .div(tokenPrices[token.id])\n          .div(token.balance)\n          .times(10 ** token.decimals)\n          .times(100)\n          .toFixed(2) : 0\n\n        return (\n          <div className={`pool-list-item ${!showClosed ? '' : 'pool-list-item-disabled'}`} key={token.name}>\n            <div className=\"item-detail\">\n              <div className=\"item-detail-wrapper\">\n                { token.ty === 3 && <div className=\"corner-badge\">10X</div> }\n                <div className=\"staking-token\">\n                  {\n                    token.ty === 3 ? (\n                      <div className=\"staking-text\">Deposit\n                        {getTokenIconDom(token, 'stake-lp-token')}\n                      </div>\n                    ) : (\n                      <div className={`staking-text icon-${token.name}`}>Deposit</div>\n                    )\n                  }\n                  {\n                    token.name.startsWith('f') ? (\n                      <Tooltip placement=\"top\" overlay={getTip(token)}>\n                        <div className=\"staking-token-name\">{token.name}</div>\n                      </Tooltip>\n                    ) : <div className=\"staking-token-name\">{token.name}</div>\n                  }\n                </div>\n                <div className=\"earn-line\">Earn<span>UNX</span></div>\n                <div className=\"earn-line\">APY<span>{tokenAPY}%</span></div>\n                <div className=\"total-staking\">Total Staking<span>{new BigNumber(token.balance || 0).div(10 ** token.decimals).toString()}</span></div>\n                <div className=\"select-btn\" onClick={() => onSelectToken(token)}>{ showClosed ? 'Unstake' : 'Stake' }</div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    }\n  }\n\n  return (\n    <div className=\"stake-container\">\n      <div className=\"stake-pool\">\n        { !stakingTokens.length ? <div className=\"title\">Loading...</div> : null }\n        {\n          showClosed ? (\n            <div className=\"unstake-pool-title\">\n              <div className=\"back-icon\" onClick={() => setShowClosed(false)}></div>\n              Unstake from Closed Pool\n            </div>\n          ) : null\n        }\n        <div className=\"pool-list\">\n          {generateStakingPool()}\n        </div>\n        { showClosedEntry ? <div className=\"closed-pool-entrance\" onClick={() => setShowClosed(true)}>Unstake from Closed Pool</div> : null }\n      </div>\n    </div>\n  )\n}\n\nexport default Staking","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport Tooltip from 'rc-tooltip';\nimport Input from '../../../components/input'\nimport { readBigNumberUint128, getTokenBalance, getTokenIconDom } from '../../../utils/token'\nimport { GOVERNANCE_ADDRESS, TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\n\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst StakingDetail = (props) => {\n  const [stakeToken, setStakeToken] = useState({})\n  const [tokenBalance, setTokenBalance] = useState('-')\n  const [tokenWeight, setTokenWeight] = useState(1)\n  const [amount, setAmount] = useState('')\n  const [myStake, setMyStake] = useState({})\n  const [stakeType, setStakeType] = useState('stake')\n  const [claimableWing, setClaimableWing] = useState(0)\n  const [showStakingModal, setShowStakingModal] = useState(false)\n  const { account, tokens, stakingTokens, STAKING_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    stakingTokens: state.staking.tokens,\n    STAKING_ADDRESS: state.gov.poolStat.pools.staking.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const Alert = useAlert()\n  const location = useLocation()\n  const history = useHistory()\n  const tokenId = location.pathname.match(/\\/([^/]+)$/)[1]\n\n  useEffect(() => {\n    if (stakingTokens.length) {\n      setTokenWeight(stakingTokens.find((t) => `${t.id}` === tokenId).originWeight)\n    }\n  }, [stakingTokens])\n\n  useEffect(() => {\n    if (account && tokens.length) {\n      const sToken = tokens.find((t) => `${t.id}` === tokenId)\n\n      setStakeToken(sToken)\n      getTokenBalance(account, sToken, setTokenBalance)\n    }\n  }, [tokens, account])\n\n\n  useEffect(() => {\n    const getClaimableWing = async () => {\n      if (account && stakeToken.ty === 2) {\n        try {\n          const resp = await client.api.smartContract.invokeWasmRead({\n            scriptHash: GOVERNANCE_ADDRESS,\n            operation: 'claimable_wing',\n            args: [\n              {\n                type: 'Address',\n                value: account\n              },\n              {\n                type: 'Long',\n                value: stakeToken.id\n              }\n            ]\n          })\n          const strReader = new StringReader(resp)\n\n          setClaimableWing(readBigNumberUint128(strReader))\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getClaimableWing()\n    let interval = setInterval(getClaimableWing, 10000)\n\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, stakeToken])\n\n  useEffect(() => {\n    if (account && stakeToken.id && STAKING_ADDRESS) {\n      getAccountStake()\n      const interval = setInterval(getAccountStake, 10000)\n      return () => {\n        interval && clearInterval(interval)\n      }\n    }\n  }, [stakeToken, account, STAKING_ADDRESS])\n\n  useEffect(() => {\n    if (!account) {\n      setMyStake({})\n    }\n  }, [account])\n\n  function getAccountStakeByTokenId(id) {\n    return client.api.smartContract.invokeWasmRead({\n      scriptHash: STAKING_ADDRESS,\n      operation: 'account_stake_info',\n      args: [\n        {\n          type: 'Address',\n          value: account\n        },\n        {\n          type: 'Long',\n          value: id\n        }\n      ]\n    }).then((stakeStr) => {\n      const strReader = new StringReader(stakeStr)\n      return {\n        id,\n        balance: new BigNumber(readBigNumberUint128(strReader) || 0).div(10 ** (stakeToken.decimals || 0)).toString(),\n        interest: readBigNumberUint128(strReader)\n      }\n    })\n  }\n\n  function getAccountStake() {\n    getAccountStakeByTokenId(tokenId)\n    .then((stake) => {\n      setMyStake(stake)\n    })\n    .catch((e) => {\n      console.log('get account stakes', e)\n    })\n  }\n\n  function handleStakeClick(action) {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    setStakeType(action)\n    setShowStakingModal(true)\n  }\n\n  async function onStake() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (stakeToken.id && STAKING_ADDRESS) {\n      if (amount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      if (stakeType === 'unstake' && new BigNumber(amount).gt(new BigNumber(myStake.balance))) {\n        Alert.error('Amount should be less than your balance')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: stakeToken.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(amount).times(new BigNumber(10 ** stakeToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const param = {\n          scriptHash: STAKING_ADDRESS,\n          operation: stakeType,\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        }\n\n        const stakeResult = await client.api.smartContract.invokeWasm(param)\n\n        if (stakeResult.transaction) {\n          setShowStakingModal(false)\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${stakeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setShowStakingModal(false)\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onHarvest() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (STAKING_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: stakeToken.id\n          }\n        ]\n        const param = {\n          scriptHash: STAKING_ADDRESS,\n          operation: 'harvest',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        }\n\n        const harvestResult = await client.api.smartContract.invokeWasm(param)\n\n        if (harvestResult.transaction) {\n          setShowStakingModal(false)\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${harvestResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function onNavigateToStaking() {\n    history.goBack()\n  }\n\n  const maxInput = () => {\n    if (stakeType === 'stake' && !isNaN(tokenBalance)) {\n      setAmount(tokenBalance)\n    } else if (stakeType === 'unstake' && !isNaN(myStake.balance)) {\n      setAmount(myStake.balance)\n    }\n  }\n\n  return (\n    <div className=\"stake-container\">\n      <div className=\"stake-title\">\n        <div className=\"back-icon\" onClick={() => onNavigateToStaking()} />\n        Earn <span className=\"icon-UNX\">UNX</span> by\n        {getTokenIconDom(stakeToken, 'inline-token-wrapper')}\n        {stakeToken.name || ''}\n      </div>\n      <div className=\"stake-token-detail\">\n        <div className=\"stake-token-amount\">\n          {getTokenIconDom(stakeToken, 'stake-token-wrapper')}\n          <div className=\"stake-token-amount-detail\">\n            <div className=\"stake-token-amount-label\">Current Staked</div>\n            <div className=\"stake-token-amount-info\">{myStake.balance} {stakeToken.name}</div>\n          </div>\n        </div>\n        <div className=\"stake-token-actions\">\n          { tokenWeight ? <div className=\"stake-token-action\" onClick={() => handleStakeClick('stake')}>Stake</div> : null }\n          <div className=\"stake-token-action\" onClick={() => handleStakeClick('unstake')}>Unstake</div>\n        </div>\n      </div>\n      <div className=\"harvest-token-detail\">\n        <div className=\"harvest-token-amount icon-UNX\">\n          <div className=\"harvest-token-amount-label\">Rewards Available</div>\n          <div className=\"harvest-token-amount-info\">{new BigNumber(myStake.interest || 0).div(10 ** 9).toString()} UNX</div>\n        </div>\n        <div className=\"harvest-token-actions\">\n          <div className=\"harvest-token-action\" onClick={() => onHarvest() }>Harvest</div>\n        </div>\n      </div>\n      {\n        stakeToken.ty === 2 ? (\n          <div className=\"claimable-wing-detail\">\n            <div className=\"claimable-wing-amount icon-WING\">{new BigNumber(claimableWing || 0).div(10 ** 9).toString()}\n              <div className=\"claimable-wing-label\">WING Earned\n                <Tooltip placement=\"top\" overlay=\"WING earned by ftoken will be transferred to your account when you stake or unstake\">\n                  <span>?</span>\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      { showStakingModal ? (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper\">\n            <div className=\"close-btn\" onClick={() => { setShowStakingModal(false); setAmount(''); }}></div>\n            <div className=\"stake-wrapper\">\n              {/* <div className={`icon-${stakeToken.name} token-placeholder`}></div> */}\n              {getTokenIconDom(stakeToken, 'token-placeholder')}\n              <div className=\"form-item\">\n                <div className=\"input-label\">Amount\n                  {\n                    stakeType === 'stake' ? (\n                      <span className=\"hint\">Balance: {tokenBalance}</span>\n                    ) : (\n                      <span className=\"hint\">Staked: {myStake.balance}</span>\n                    )\n                  }\n                </div>\n                <div className=\"input-wrapper\">\n                  <Input placeholder=\"0.0\" value={amount} decimals={stakeToken.decimals || 0} onChange={(amount) => setAmount(amount)} />\n                  <div className=\"input-max-btn\" onClick={() => maxInput()}>MAX</div>\n                </div>\n              </div>\n              <div className=\"stake-btn\" onClick={() => onStake()}>{ stakeType === 'stake' ? 'Stake' : 'Unstake'}</div>\n            </div>\n          </div>\n        </div>\n      ) : null }\n    </div>\n  )\n}\n\nexport default StakingDetail","import React from 'react'\nimport './index.css'\n\nconst Token = (props) => {\n  return (\n    <div className=\"coming-soon-placeholder\"></div>\n  )\n}\n\nexport default Token","import React from 'react'\nimport './index.css'\n\nconst Option = (props) => {\n  return (\n    <div className=\"coming-soon-placeholder\"></div>\n  )\n}\n\nexport default Option","import React from 'react'\nimport './index.css'\n\nconst Coming = (props) => {\n  return (\n    <div className=\"coming-soon-placeholder\"></div>\n  )\n}\n\nexport default Coming","import axios from 'axios'\nimport { EVENT_API_BASE_URL } from '../config'\n\nconst instance = axios.create({\n  baseURL: EVENT_API_BASE_URL,\n  timeout: 30000,\n  headers: { 'Content-Type': 'application/json' }\n})\n\ninstance.interceptors.response.use(\n  (response) => {\n    const res = response.data;\n    return res\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\nexport default instance","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport Tooltip from 'rc-tooltip';\nimport TokenInput from '../../components/tokenInput';\nimport Input from '../../components/input'\nimport EventRequest from '../../utils/eventRequest'\nimport { readBigNumberUint128 } from '../../utils/token'\nimport { DAI_PRICE, SYNTH_PRICE_DECIMALS, ASSET_STATUS, LEVERAGE_TYPE, TRANSACTION_FEE_RATE } from '../../utils/constants'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport './index.css'\n\nconst { StringReader, reverseHex } = utils\n\nconst Synth = () => {\n  const [mintAsset, setMintAsset] = useState({})\n  const [mintAmount, setMintAmount] = useState('')\n  const [unxNeededForMint, setUnxNeededForMint] = useState('')\n  const [burnAsset, setBurnAsset] = useState({})\n  const [burnAmount, setBurnAmount] = useState('')\n  const [unxGetForBurn, setUnxGetForBurn] = useState('')\n  const [exchangeAsset, setExchangeAsset] = useState({})\n  const [exchangeToAsset, setExchangeToAsset] = useState({})\n  const [exchangeAmount, setExchangeAmount] = useState('')\n  const [exchangeToAssets, setExchangeToAssets] = useState([])\n  const [exchangeToAmount, setExchangeToAmount] = useState('')\n  const [showMintModal, setShowMintModal] = useState(false)\n  const [showBurnModal, setShowBurnModal] = useState(false)\n  const [showExchangeModal, setShowExchangeModal] = useState(false)\n  const { account, tokens, pairs, poolStat, stat, marketStat, availableReward, synthType, synthPoolWeightRatio, unxToken, unxPrice, SYNTH_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    poolStat: state.gov.poolStat,\n    ...state.synth,\n    synthPoolWeightRatio: state.gov.poolStat.pools.synth.ratio,\n    SYNTH_ADDRESS: state.gov.poolStat.pools.synth.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const setStat = useCallback((stat) => dispatch({ type: 'SET_SYNTH_STAT', stat }), [])\n  const setMarketStat = useCallback((marketStat) => dispatch({ type: 'SET_SYNTH_MARKET_STAT', marketStat }), [])\n  const setAvailableReward = useCallback((availableReward) => dispatch({ type: 'SET_SYNTH_AVAILABLE_REWARD', availableReward }), [])\n  const setSynthType = useCallback((synthType) => dispatch({ type: 'SET_SYNTH_TYPE', synthType }), [])\n  const setUnxToken = useCallback((unxToken) => dispatch({ type: 'SET_SYNTH_UNX_TOKEN', unxToken }), [])\n  const setUnxPrice = useCallback((unxPrice) => dispatch({ type: 'SET_SYNTH_UNX_PRICE', unxPrice }), [])\n\n  const Alert = useAlert()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (tokens.length) {\n      setUnxToken(tokens.find((t) => t.name === 'UNX'))\n    }\n  }, [tokens])\n\n  useEffect(() => {\n    if (tokens.length && pairs.length && (!unxPrice || unxPrice === '0') && marketStat.marketAssetValue) {\n      const unxTk = tokens.find((t) => t.name === 'UNX')\n      if (!marketStat.marketAssetBalances.length) {\n        const daiTk = tokens.find((t) => t.name === 'pDAI')\n        const pair = pairs.find((p) => (p.token1 === unxTk.id && p.token2 === daiTk.id) || (p.token2 === unxTk.id && p.token1 === daiTk.id))\n\n        if (pair) {\n          if (pair.token1 === unxTk.id) {\n            setUnxPrice(new BigNumber(pair.reserve2).div(10 ** daiTk.decimals).div(pair.reserve1).times(10 ** unxTk.decimals).times(DAI_PRICE).times(SYNTH_PRICE_DECIMALS).toString())\n          } else {\n            setUnxPrice(new BigNumber(pair.reserve1).div(10 ** daiTk.decimals).div(pair.reserve2).times(10 ** unxTk.decimals).times(DAI_PRICE).times(SYNTH_PRICE_DECIMALS).toString())\n          }\n        }\n      } else {\n        setUnxPrice(new BigNumber(marketStat.marketAssetValue).div(marketStat.marketTokenBalance).times(10 ** unxTk.decimals).toString())\n      }\n\n      setUnxToken(unxTk)\n    }\n  }, [pairs, tokens, marketStat])\n\n  useEffect(() => {\n    async function getAvailableReward() {\n      if (account && unxToken.id && SYNTH_ADDRESS) {\n        try {\n          const claimStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'claim_unx',\n            args: [\n              {\n                type: 'Long',\n                value: unxToken.id\n              },\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n\n          const strReader = new StringReader(claimStr)\n          const availableReward = strReader.readUint128()\n\n          setAvailableReward(new BigNumber(availableReward).toString())\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getAvailableReward()\n    const interval = setInterval(getAvailableReward, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, unxToken, SYNTH_ADDRESS])\n\n  useEffect(() => {\n    async function getStat() {\n      if (tokens.length && SYNTH_ADDRESS) {\n        try {\n          const statStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'stat',\n            args: []\n          })\n          const strReader = new StringReader(statStr)\n  \n          reverseHex(strReader.read(20)) // govAddress\n          strReader.readUint128() // daiTokenId\n          strReader.readUint128() // unxTokenId\n          strReader.readUint128() // pairId\n\n          const liveAssetCount = strReader.readNextLen()\n          const liveAssets = []\n          for (let i = 0; i < liveAssetCount; i++) {\n            const asset = {}\n            asset.assetId = strReader.readUint128()\n            asset.tokenId = strReader.readUint128()\n\n            const token = tokens.find((t) => t.id === asset.tokenId)\n            asset.tokenName = token.name\n            asset.decimals = token.decimals\n            asset.leverageType = strReader.readNextByte()\n            asset.times = strReader.readUint128()\n            asset.entryPrice = readBigNumberUint128(strReader)\n            asset.lowLimit = readBigNumberUint128(strReader)\n            asset.highLimit = readBigNumberUint128(strReader)\n            asset.status = strReader.readNextByte()\n            asset.frozenBy = reverseHex(strReader.read(20))\n            asset.frozenTime = strReader.readUint64()\n\n            if (asset.tokenName.startsWith('p')) {\n              asset.tokenName = asset.tokenName.replace('p', '')\n            }\n            asset.tokenName = `${asset.leverageType === LEVERAGE_TYPE.Negative ? 'i' : 's'}${asset.tokenName}`\n            asset.id = asset.assetId\n            asset.value = asset.assetId\n            asset.label = `${asset.tokenName}${asset.times !== 1 ? ` (${asset.times}x)` : ''}`\n            liveAssets.push(asset)\n          }\n\n          const frozenAssetCount = strReader.readNextLen()\n          const frozenAssets = []\n          for (let i = 0; i < frozenAssetCount; i++) {\n            const asset = {}\n            asset.assetId = strReader.readUint128()\n            asset.tokenId = strReader.readUint128()\n\n            const token = tokens.find((t) => t.id === asset.tokenId)\n            asset.tokenName = token.name\n            asset.decimals = token.decimals\n            asset.leverageType = strReader.readNextByte()\n            asset.times = strReader.readUint128()\n            asset.entryPrice = readBigNumberUint128(strReader)\n            asset.lowLimit = readBigNumberUint128(strReader)\n            asset.highLimit = readBigNumberUint128(strReader)\n            asset.status = strReader.readNextByte()\n            asset.frozenBy = reverseHex(strReader.read(20))\n            asset.frozenTime = strReader.readUint64()\n\n            if (asset.tokenName.startsWith('p')) {\n              asset.tokenName = asset.tokenName.replace('p', '')\n            }\n            asset.tokenName = `${asset.leverageType === LEVERAGE_TYPE.Negative ? 'i' : 's'}${asset.tokenName}`\n            asset.label = `${asset.tokenName}${asset.times !== 1 ? ` (${asset.times}x)` : ''}`\n  \n            frozenAssets.push(asset)\n          }\n\n          const tokenPriceCount = strReader.readNextLen()\n          const tokenPrices = []\n          for (let i = 0; i < tokenPriceCount; i++) {\n            const tokenPrice = {}\n            tokenPrice.tokenId = strReader.readUint128()\n            tokenPrice.price = readBigNumberUint128(strReader)\n  \n            tokenPrices.push(tokenPrice)\n          }\n\n          for (let liveAsset of liveAssets) {\n            const currentPrice = tokenPrices.find((tp) => tp.tokenId === liveAsset.tokenId).price\n            let tokenPrice = currentPrice\n\n            if (liveAsset.lowLimit && new BigNumber(currentPrice).lte(new BigNumber(liveAsset.lowLimit))) {\n              tokenPrice = liveAsset.lowLimit\n            } else if (liveAsset.highLimit && new BigNumber(currentPrice).gte(new BigNumber(liveAsset.highLimit))) {\n              tokenPrice = liveAsset.highLimit\n            }\n\n            liveAsset.tokenPrice = tokenPrice\n\n            if (liveAsset.leverageType === LEVERAGE_TYPE.Positive) {\n              liveAsset.price = new BigNumber(liveAsset.entryPrice).plus(new BigNumber(tokenPrice).times(liveAsset.times)).minus(new BigNumber(liveAsset.entryPrice).times(liveAsset.times)).toString()\n            } else {\n              liveAsset.price = new BigNumber(liveAsset.entryPrice).plus(new BigNumber(liveAsset.entryPrice).times(liveAsset.times)).minus(new BigNumber(tokenPrice).times(liveAsset.times)).toString()\n            }\n\n            if ((liveAsset.lowLimit && new BigNumber(liveAsset.tokenPrice).lte(new BigNumber(liveAsset.lowLimit))) || (liveAsset.highLimit && new BigNumber(liveAsset.tokenPrice).gte(new BigNumber(liveAsset.highLimit)))) {\n              liveAsset.unprocessedFrozen = true\n            }\n          }\n\n          for (let frozenAsset of frozenAssets) {\n            frozenAsset.tokenPrice = tokenPrices.find((tp) => tp.tokenId === frozenAsset.tokenId).price\n            if (frozenAsset.status === ASSET_STATUS.HighLimit) {\n              frozenAsset.tokenPrice = frozenAsset.highLimit\n            } else if (frozenAsset.status === ASSET_STATUS.LowLimit) {\n              frozenAsset.tokenPrice = frozenAsset.lowLimit\n            }\n          }\n\n          setStat({\n            liveAssets,\n            frozenAssets,\n            tokenPrices\n          })\n        } catch (e) {\n          console.log('get synth stat', e)\n        }\n      }\n    }\n\n    getStat()\n    const interval = setInterval(getStat, 5000)\n\n    return () => clearInterval(interval)\n  }, [tokens, SYNTH_ADDRESS])\n\n  useEffect(() => {\n    async function getMarketStat() {\n      if (account && unxToken.id && SYNTH_ADDRESS) {\n        try {\n          const statStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'market_stat',\n            args: [\n              {\n                type: 'Long',\n                value: unxToken.id\n              },\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n          const strReader = new StringReader(statStr)\n\n          const marketAssetBalanceCount = strReader.readNextLen()\n          const marketAssetBalances = []\n          let marketAssetValueSum = new BigNumber(0)\n          for (let i = 0; i < marketAssetBalanceCount; i++) {\n            const assetBalance = {}\n            assetBalance.assetId = strReader.readUint128()\n            assetBalance.balance = readBigNumberUint128(strReader)\n            assetBalance.assetPrice = readBigNumberUint128(strReader)\n\n            const asset = stat.liveAssets ? [...stat.liveAssets, ...stat.frozenAssets].find((la) => la.assetId === assetBalance.assetId) : null\n\n            if (asset) {\n              marketAssetValueSum = marketAssetValueSum.plus(new BigNumber(assetBalance.assetPrice).times(assetBalance.balance).div(10 ** asset.decimals))\n            }\n  \n            marketAssetBalances.push(assetBalance)\n          }\n\n          const accountAssetBalanceCount = strReader.readNextLen()\n          const accountAssetBalances = []\n          let accountAssetValueSum = new BigNumber(0)\n          for (let i = 0; i < accountAssetBalanceCount; i++) {\n            const assetBalance = {}\n            assetBalance.assetId = strReader.readUint128()\n            assetBalance.balance = readBigNumberUint128(strReader)\n            assetBalance.assetPrice = readBigNumberUint128(strReader)\n\n            const asset = stat.liveAssets ? [...stat.liveAssets, ...stat.frozenAssets].find((la) => la.assetId === assetBalance.assetId) : null\n\n            if (asset) {\n              accountAssetValueSum = accountAssetValueSum.plus(new BigNumber(assetBalance.assetPrice).times(assetBalance.balance).div(10 ** asset.decimals))\n            }\n  \n            accountAssetBalances.push(assetBalance)\n          }\n\n          const marketStakeValue = readBigNumberUint128(strReader)\n          const accountStakeValue = readBigNumberUint128(strReader)\n          const marketTokenBalance = readBigNumberUint128(strReader)\n          const accountClaimedValue = readBigNumberUint128(strReader)\n          const accountWithdrawedStakeValue = readBigNumberUint128(strReader)\n          const transferable = (marketAssetValueSum.toString() !== '0') ? accountAssetValueSum.div(marketAssetValueSum).times(marketTokenBalance).toString() : '0'\n\n          const parsedMarketStat = {\n            marketAssetBalances,\n            accountAssetBalances,\n            marketAssetValue: marketAssetValueSum.toString(),\n            accountAssetValue: accountAssetValueSum.toString(),\n            transferable,\n            marketStakeValue,\n            accountStakeValue,\n            marketTokenBalance,\n            accountClaimedValue,\n            accountWithdrawedStakeValue\n          }\n\n          setMarketStat(parsedMarketStat)\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getMarketStat()\n    const interval = setInterval(getMarketStat, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, unxToken, stat.liveAssets, SYNTH_ADDRESS])\n\n  const handleMintAmountChange = (amount) => {\n    setMintAmount(amount)\n    if (unxPrice && amount) {\n      setUnxNeededForMint(new BigNumber(amount).times(mintAsset.price).div(unxPrice).div(1 - TRANSACTION_FEE_RATE).toFixed(unxToken.decimals))\n    } else if (Number(amount) === 0) {\n      setUnxNeededForMint('')\n    }\n  }\n\n  const handleUnxNeededForMintChange = (amount) => {\n    setUnxNeededForMint(amount)\n    if (unxPrice && amount) {\n      setMintAmount(new BigNumber(amount).times(unxPrice).div(mintAsset.price).times(1 - TRANSACTION_FEE_RATE).toFixed(mintAsset.decimals))\n    } else if (Number(amount) === 0) {\n      setMintAmount('')\n    }\n  }\n\n  const handleBurnAmountChange = (amount) => {\n    setBurnAmount(amount)\n    if (unxPrice && amount) {\n      setUnxGetForBurn(new BigNumber(amount).times(burnAsset.assetPrice).div(unxPrice).times(1 - TRANSACTION_FEE_RATE).toFixed(unxToken.decimals))\n    } else if (Number(amount) === 0) {\n      setUnxGetForBurn('')\n    }\n  }\n\n  const handleUnxGetForBurnChange = (amount) => {\n    setUnxGetForBurn(amount)\n    if (unxPrice && amount) {\n      setBurnAmount(new BigNumber(amount).times(unxPrice).div(burnAsset.assetPrice).div(1 - TRANSACTION_FEE_RATE).toFixed(burnAsset.decimals))\n    } else if (Number(amount) === 0) {\n      setBurnAmount('')\n    }\n  }\n\n  const handleExchangeAmountChange = (amount) => {\n    setExchangeAmount(amount)\n    if (amount) {\n      setExchangeToAmount(new BigNumber(exchangeAsset.price).div(exchangeToAsset.price).times(amount).times(10 ** exchangeAsset.decimals).div(10 ** exchangeToAsset.decimals).times(1 - TRANSACTION_FEE_RATE).toFixed(exchangeToAsset.decimals))\n    } else if (Number(amount) === 0) {\n      setExchangeToAmount('')\n    }\n  }\n\n  const handleChengeExchangeToAmount = (amount) => {\n    setExchangeToAmount(amount)\n    if (amount) {\n      setExchangeAmount(new BigNumber(amount).times(10 ** exchangeToAsset.decimals).div(10 ** exchangeAsset.decimals).times(exchangeToAsset.price).div(exchangeAsset.price).div(1 - TRANSACTION_FEE_RATE).toFixed(exchangeAsset.decimals))\n    } else if (Number(amount) === 0) {\n      setExchangeAmount('')\n    }\n  }\n\n  const maxBurnAmount = () => {\n    if (burnAsset) {\n      handleBurnAmountChange(new BigNumber(burnAsset.balance).div(10 ** burnAsset.decimals).toString())\n    }\n  }\n\n  const maxExchangeAmount = () => {\n    if (exchangeAsset) {\n      handleExchangeAmountChange(new BigNumber(exchangeAsset.balance).div(10 ** exchangeAsset.decimals).toString())\n    }\n  }\n\n  const handleChangeExchangeToAsset = (asset) => {\n    setExchangeToAsset(asset)\n    if (exchangeAmount) {\n      setExchangeToAmount(new BigNumber(exchangeAsset.price).div(asset.price).times(exchangeAmount).times(10 ** exchangeAsset.decimals).div(10 ** asset.decimals).times(1 - TRANSACTION_FEE_RATE).toFixed(asset.decimals))\n    } else if (Number(exchangeAmount) === 0) {\n      setExchangeToAmount('')\n    }\n  }\n\n  async function onMint() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && mintAsset.assetId && SYNTH_ADDRESS) {\n      if (mintAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(unxNeededForMint).times(new BigNumber(10 ** unxToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: mintAsset.assetId\n          }\n        ]\n        const mintResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'mint',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (mintResult.transaction) {\n          setShowMintModal(false)\n          setMintAmount('')\n          setUnxNeededForMint('')\n\n          let detail = ''\n\n          EventRequest({\n            method: 'get',\n            url: `${mintResult.transaction}`\n          }).then((resp) => {\n            if (resp.Desc === 'SUCCESS') {\n              try {\n                const eventStates = resp.Result.Notify.find((notify) => notify.States[0] === 'mint').States\n\n                if (eventStates[5] === '0') {\n                  detail = `Your last transaction successfully freezed the ${mintAsset.label} asset, you'll get 1‰ of the redeemed UNX when burnt.`\n                }\n              } catch (e) {}\n\n              setInfoModal('success', mintResult.transaction, detail)\n            }\n          }).catch((e) => {\n            setInfoModal('success', mintResult.transaction)\n          })\n        }\n      } catch (e) {\n        setShowMintModal(false)\n        setMintAmount('')\n        setUnxNeededForMint('')\n        setInfoModal('error')\n      }\n    }\n  }\n\n  async function onBurn() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && burnAsset.assetId && SYNTH_ADDRESS) {\n      if (burnAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: burnAsset.assetId\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(burnAmount).times(new BigNumber(10 ** burnAsset.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const burnResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'burn',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (burnResult.transaction) {\n          setShowBurnModal(false)\n          setBurnAmount('')\n          setUnxGetForBurn('')\n          setInfoModal('success', burnResult.transaction)\n        }\n      } catch (e) {\n        setShowBurnModal(false)\n        setBurnAmount('')\n        setUnxGetForBurn('')\n        setInfoModal('error')\n      }\n    }\n  }\n\n  async function onBurnAll() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const burnAllResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'burn_all_asset',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (burnAllResult.transaction) {\n          setInfoModal('success', burnAllResult.transaction)\n        }\n      } catch (e) {\n        setInfoModal('error')\n      }\n    }\n  }\n\n  async function onExchange() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && exchangeAsset.assetId && SYNTH_ADDRESS) {\n      if (exchangeAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: exchangeAsset.assetId\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(exchangeAmount).times(new BigNumber(10 ** exchangeAsset.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },{\n            type: 'Long',\n            value: exchangeToAsset.assetId\n          }\n        ]\n        const exchangeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'asset_swap',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (exchangeResult.transaction) {\n          setShowExchangeModal(false)\n          setExchangeAmount('')\n          setExchangeToAmount('')\n\n          let detail = ''\n\n          EventRequest({\n            method: 'get',\n            url: `${exchangeResult.transaction}`\n          }).then((resp) => {\n            if (resp.Desc === 'SUCCESS') {\n              try {\n                const eventStates = resp.Result.Notify.find((notify) => notify.States[0] === 'asset_swap').States\n\n                if (eventStates[4] === '0') {\n                  detail = `Your last transaction successfully freezed the ${exchangeAsset.label} asset, you'll get 1‰ of the redeemed UNX when burnt.`\n                }\n              } catch (e) {}\n\n              setInfoModal('success', exchangeResult.transaction, detail)\n            }\n          }).catch((e) => {\n            setInfoModal('success', exchangeResult.transaction)\n          })\n        }\n      } catch (e) {\n        setShowExchangeModal(false)\n        setExchangeAmount('')\n        setExchangeToAmount('')\n        setInfoModal('error')\n      }\n    }\n  }\n\n  async function onClaim() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const claimResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'claim_unx',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (claimResult.transaction) {\n          setInfoModal('success', claimResult.transaction)\n        }\n      } catch (e) {\n        setInfoModal('error')\n      }\n    }\n  }\n\n  const handleFreezeAsset = async (asset) => {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: asset.assetId\n          }\n        ]\n        const freezeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'freeze_asset',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (freezeResult.transaction) {\n          setInfoModal('success', freezeResult.transaction)\n        }\n      } catch (e) {\n        setInfoModal('error')\n      }\n    }\n  }\n\n  const calcEffectiveLeverage = (asset) => {\n    if (asset.leverageType === LEVERAGE_TYPE.Positive) {\n      return new BigNumber(asset.tokenPrice).times(asset.times)\n        .div(new BigNumber(asset.tokenPrice).times(asset.times).plus(asset.entryPrice).minus(new BigNumber(asset.entryPrice).times(asset.times)))\n        .toFixed(2)\n    } else if (asset.leverageType === LEVERAGE_TYPE.Negative) {\n      return new BigNumber(asset.tokenPrice).times(asset.times)\n        .div(new BigNumber(asset.entryPrice).times(asset.times).plus(asset.entryPrice).minus(new BigNumber(asset.tokenPrice).times(asset.times)))\n        .toFixed(2)\n    }\n  }\n\n  const getPriceDetail = (asset) => {\n    let txt = `Entry Price: ${new BigNumber(asset.entryPrice).div(SYNTH_PRICE_DECIMALS).toString()}`\n    if (Number(asset.lowLimit)) {\n      txt += ` Low Limit: ${new BigNumber(asset.lowLimit).div(SYNTH_PRICE_DECIMALS).toString()}`\n    }\n    if (Number(asset.highLimit)) {\n      txt += ` High Limit: ${new BigNumber(asset.highLimit).div(SYNTH_PRICE_DECIMALS).toString()}`\n    }\n    \n    return txt\n  }\n\n  const renderAssetList = () => {\n    if (synthType === 'mint') {\n      if (stat.liveAssets) {\n        const assetList = stat.liveAssets.map((la) => {\n          const accountAsset = marketStat.accountAssetBalances ? marketStat.accountAssetBalances.find((ab) => ab.assetId === la.assetId) : null\n          const showPriceDetail = !(la.times === 1 && la.leverageType === LEVERAGE_TYPE.Positive)\n\n          if (accountAsset) {\n            la.holdings = new BigNumber(accountAsset.assetPrice).div(SYNTH_PRICE_DECIMALS).times(accountAsset.balance).div(10 ** la.decimals).toString()\n          }\n\n          la.effectiveLeverage = calcEffectiveLeverage(la)\n\n          return (\n            <div className={`synth-assets-list-item ${la.unprocessedFrozen ? 'unprocessed-frozen' : ''}`} key={la.assetId}>\n              <div className=\"synth-assets-list-item-name\">\n                <div className={`synth-assets-list-item-icon icon-${la.tokenName}`}>\n                  {\n                    showPriceDetail ? (\n                      <Tooltip placement=\"top\" overlay={getPriceDetail(la)}><span>{la.label}</span></Tooltip>\n                    ) : <span>{la.label}</span>\n                  }\n                  {\n                    la.unprocessedFrozen ? (\n                      <Tooltip placement=\"top\" overlay=\"The first one that freezes an asset will get 1‰ of burning fee from all holders\">\n                        <span className=\"freeze-asset-btn\" onClick={() => handleFreezeAsset(la)}></span>\n                      </Tooltip>\n                    ) : null\n                  }\n                </div>\n              </div>\n              <div className=\"synth-assets-list-item-price\">{new BigNumber(la.price).div(SYNTH_PRICE_DECIMALS).toString()}</div>\n              <div className=\"synth-assets-list-item-holding\">{la.holdings || 0}</div>\n              <div className=\"synth-assets-list-item-leverage\">{la.effectiveLeverage}</div>\n              <div className=\"synth-assets-list-item-action\">\n                <div className=\"synth-assets-list-item-action-mint\" onClick={() => { setShowMintModal(true); setMintAsset(la); }}>Mint</div>\n              </div>\n            </div>\n          )\n        })\n        return assetList.length ? assetList : (<div className=\"empty-asset-hint\">No Assets</div>)\n      } else {\n        return (<div className=\"asset-loading-hint\">Loading...</div>)\n      }\n    } else {\n      if (marketStat.accountAssetBalances) {\n        const assetList = marketStat.accountAssetBalances.map((ab) => {\n          let asset = stat.liveAssets ? stat.liveAssets.find((la) => la.assetId === ab.assetId) : null\n\n          if (!asset) {\n            asset = stat.frozenAssets ? stat.frozenAssets.find((fa) => fa.assetId === ab.assetId) : null\n\n            if (asset) {\n              asset.isFrozen = true\n            }\n          }\n\n          if (asset) {\n            if (!asset.isFrozen) {\n              if ((asset.lowLimit && new BigNumber(asset.tokenPrice).lte(new BigNumber(asset.lowLimit))) || (asset.highLimit && new BigNumber(asset.tokenPrice).gte(new BigNumber(asset.highLimit)))) {\n                asset.unprocessedFrozen = true\n              }\n            }\n            asset.balance = ab.balance\n            asset.assetPrice = ab.assetPrice\n            asset.effectiveLeverage = calcEffectiveLeverage(asset)\n          }\n          return asset ? (\n            <div className={`synth-assets-list-item ${asset.isFrozen ? 'frozen' : ''} ${asset.unprocessedFrozen ? 'unprocessed-frozen' : ''}`} key={ab.assetId}>\n              <div className=\"synth-assets-list-item-name\">\n                <div className={`synth-assets-list-item-icon icon-${asset.tokenName}`}>\n                  {asset.label}\n                  {\n                    asset.unprocessedFrozen ? (\n                      <Tooltip placement=\"top\" overlay=\"The first one that freezes an asset will get 1‰ of burning fee from all holders\">\n                        <span onClick={() => handleFreezeAsset(asset)}></span>\n                      </Tooltip>\n                    ) : null\n                  }\n                </div>\n              </div>\n              <div className=\"synth-assets-list-item-price\">{new BigNumber(ab.assetPrice).div(SYNTH_PRICE_DECIMALS).toString()}</div>\n              <div className=\"synth-assets-list-item-holding\">{new BigNumber(ab.assetPrice).div(SYNTH_PRICE_DECIMALS).times(ab.balance).div(10 ** asset.decimals).toString()}</div>\n              <div className=\"synth-assets-list-item-leverage\">{asset.effectiveLeverage}</div>\n              <div className=\"synth-assets-list-item-action\">\n                <div className=\"synth-assets-list-item-action-burn\" onClick={() => { setShowBurnModal(true); setBurnAsset(asset); }}>Burn</div>\n                <div className=\"synth-assets-list-item-action-exchange\"\n                  onClick={() => {\n                    setShowExchangeModal(true)\n                    setExchangeAsset(asset)\n                    const toAssets = stat.liveAssets.filter((la) => la.assetId !== asset.assetId)\n                    setExchangeToAssets(toAssets)\n                    setExchangeToAsset(toAssets[0])\n                  }}\n                >Exchange</div>\n              </div>\n            </div>\n          ) : null\n        })\n\n        return assetList.length ? assetList : (<div className=\"empty-asset-hint\">No Assets</div>)\n      } else {\n        return (<div className=\"asset-loading-hint\">Loading...</div>)\n      }\n    }\n  }\n\n  const setInfoModal = (type, transaction, detail) => {\n    setModal('infoModal', {\n      show: true,\n      type,\n      text: type === 'success' ? 'Transaction Successful' : 'Transaction Failed',\n      detail,\n      extraText: type === 'success' ? 'View Transaction' : '',\n      extraLink: type === 'success' ? `${TRANSACTION_BASE_URL}${transaction}${TRANSACTION_AFTERFIX}` : ''\n    })\n  }\n\n  return (\n    <div className=\"synth-container\">\n      <div className=\"synth-overview-sections\">\n        <div className=\"synth-overview-section\">\n          <div className=\"synth-overview-sub-section\">\n            <p className=\"synth-overview-section-title\">Mint APY</p>\n            <p className=\"synth-overview-detail\">{(marketStat.marketStakeValue && unxToken.id) ? new BigNumber(poolStat.distributionInfo.amount || 0).div(poolStat.distributionInfo.period || 1).times(86400 * 365).times(10 ** unxToken.decimals).times(synthPoolWeightRatio || 0).div(marketStat.marketStakeValue).toFixed(2) : 0}%</p>\n          </div>\n          <div className=\"synth-overview-section-group\">\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Market Balance</p>\n              <p className=\"synth-overview-detail\">{marketStat.marketTokenBalance ? new BigNumber(marketStat.marketTokenBalance).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span></p>\n            </div>\n          </div>\n        </div>\n        <div className=\"synth-overview-section-right\">\n          <div className=\"synth-overview-sub-section\">\n            <p className=\"synth-overview-section-title\">Transferable</p>\n            <p className=\"synth-overview-detail\">{(marketStat.transferable && marketStat.transferable !== '0') ? new BigNumber(marketStat.transferable).plus(availableReward).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span></p>\n          </div>\n          <div className=\"synth-overview-section-group\">\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Staked Available</p>\n              <p className=\"synth-overview-detail\">{(marketStat.transferable && marketStat.transferable !== '0') ? (new BigNumber(marketStat.transferable)).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span>\n                { (marketStat.transferable && marketStat.transferable !== '0') ? <span className=\"synth-overview-action-btn synth-overview-action-btn-burn\" onClick={() => onBurnAll()}>Burn All</span> : null }\n              </p>\n            </div>\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Rewards Available</p>\n              <p className=\"synth-overview-detail\">{unxToken.id ? new BigNumber(availableReward).div(10 ** unxToken.decimals).toString() : 0}\n                <span>UNX</span>\n                { (availableReward && availableReward !== '0') ? <span className=\"synth-overview-action-btn\" onClick={() => onClaim()}>Claim</span> : null }\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mint-burn-wrapper\">\n        <div className=\"mint-burn-main\">\n          <div className=\"synth-type-switch\">\n            <div className={`synth-type-item ${synthType === 'mint' ? 'selected' : ''}`} onClick={() => setSynthType('mint')}>Mint</div>\n            <div className={`synth-type-item ${synthType === 'burn' ? 'selected' : ''}`} onClick={() => setSynthType('burn')}>Burn</div>\n          </div>\n          <div className=\"market-asset-value\">Market Asset Value: &nbsp;&nbsp;<span>${new BigNumber(marketStat.marketAssetValue || 0).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n          <div className=\"synth-assets-panel\">\n            <div className=\"synth-assets-panel-header\">\n              <div className=\"panel-header-item panel-header-item-asset\">Asset</div>\n              <div className=\"panel-header-item\">Price($)</div>\n              <div className=\"panel-header-item\">Holdings($)</div>\n              <div className=\"panel-header-item\">Effective Leverage</div>\n              <div className=\"panel-header-item panel-header-item-action\"></div>\n            </div>\n            <div className=\"synth-assets-list\">\n              {renderAssetList()}\n            </div>\n          </div>\n        </div>\n        {\n          synthType === 'mint' ? (\n            <div className=\"mint-burn-info\">\n              <div className=\"mint-burn-info-title\">Mint Synthetics by staking UNX</div>\n              <div className=\"mint-burn-info-desc\">UNX stakers earn staking rewards once minted.</div>\n              <div className=\"mint-burn-account-info\">\n                <div className=\"mint-burn-account-info-line\">Minted With <span>{new BigNumber(marketStat.accountStakeValue || 0).div(10 ** unxToken.decimals).toString() || '0'} UNX</span></div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"mint-burn-info\">\n              <div className=\"mint-burn-info-title\">Burn Synthetics to unstake UNX</div>\n              <div className=\"mint-burn-info-desc\">Burn your synthetics to withdraw UNX.</div>\n              <div className=\"mint-burn-account-info\">\n                <div className=\"mint-burn-account-info-line\">Assets($) <span>{new BigNumber(marketStat.accountAssetValue).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n              </div>\n              <div className=\"mint-burn-info-note\"><strong>NOTE</strong>: when \"Effective Leverage\" is lower than 0.5 or higher than 2.0 times of nominal leverage, your asset will be frozen. <span>You have to burn it within 3 days.</span> Otherwise, your asset will be burned and the UNX will be donated to staked pool.</div>\n            </div>\n          )\n        }\n        \n      </div>\n      {\n        showMintModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => {setShowMintModal(false);setMintAmount('');setUnxNeededForMint('');}}></div>\n              <div className=\"mint-wrapper\">\n                <div className=\"mint-wrapper-title\">Mint {mintAsset.label}</div>\n                <div className=\"mint-wrapper-info\">Price($)<span>{new BigNumber(mintAsset.price).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount</div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={mintAmount} decimals={mintAsset.decimals || 0} onChange={(amount) => handleMintAmountChange(amount)} />\n                  </div>\n                </div>\n                <TokenInput\n                  label=\"You need to pay (UNX)\"\n                  value={unxNeededForMint}\n                  defaultToken={unxToken}\n                  decimals={unxToken.decimals || 0}\n                  onAmountChange={(amount) => handleUnxNeededForMintChange(amount)} />\n                <div className=\"fee-rate\">* The fee rate of transaction is 0.1%</div>\n                <div className=\"mint-btn\" onClick={() => onMint()}>Mint</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      {\n        showBurnModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => {setShowBurnModal(false);setBurnAmount('');setUnxGetForBurn('');}}></div>\n              <div className=\"burn-wrapper\">\n                <div className=\"burn-wrapper-title\">Burn {burnAsset.label}</div>\n                <div className=\"burn-wrapper-info\">Price($)<span>{new BigNumber(burnAsset.assetPrice).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount\n                    <span className=\"hint\">Balance: {new BigNumber(burnAsset.balance).div(10 ** burnAsset.decimals).toString()}</span>\n                  </div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={burnAmount} decimals={burnAsset.decimals || 0} onChange={(amount) => handleBurnAmountChange(amount)} />\n                    <div className=\"input-max-btn\" onClick={() => maxBurnAmount()}>MAX</div>\n                  </div>\n                </div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">You will get (UNX)</div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={unxGetForBurn} decimals={unxToken.decimals || 0} onChange={(amount) => handleUnxGetForBurnChange(amount)} />\n                  </div>\n                </div>\n                <div className=\"fee-rate\">* The fee rate of transaction is 0.1%</div>\n                <div className=\"burn-btn\" onClick={() => onBurn()}>Burn</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      {\n        showExchangeModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => {setShowExchangeModal(false);setExchangeAmount('');setExchangeToAmount('');}}></div>\n              <div className=\"exchange-wrapper\">\n                <div className=\"exchange-wrapper-title\">Exchange {exchangeAsset.label}</div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount\n                    <span className=\"hint\">Balance: {new BigNumber(exchangeAsset.balance).div(10 ** exchangeAsset.decimals).toString()}</span>\n                  </div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={exchangeAmount} decimals={exchangeAsset.decimals || 0} onChange={(amount) => handleExchangeAmountChange(amount)} />\n                    <div className=\"input-max-btn\" onClick={() => maxExchangeAmount()}>MAX</div>\n                  </div>\n                </div>\n                <TokenInput\n                  cls=\"asset-select\"\n                  label=\"Exchange to\"\n                  value={exchangeToAmount}\n                  tokens={exchangeToAssets}\n                  showBalance={false}\n                  withMax={false}\n                  onTokenChange={(asset) => handleChangeExchangeToAsset(asset)}\n                  onAmountChange={(amount) => handleChengeExchangeToAmount(amount)}\n                  />\n                <div className=\"fee-rate\">* The fee rate of transaction is 0.1%</div>\n                <div className=\"exchange-btn\" onClick={() => onExchange()}>Exchange</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n    </div>\n  )\n}\n\nexport default Synth","import React, { useState, useEffect } from 'react'\nimport { useMappedState } from 'redux-react-hook';\nimport { toLocaleFixed } from '../../utils/common'\nimport './index.css'\n\nconst Governance = (props) => {\n  const [hasBegan, setHasBegan] = useState(true)\n  const [leftTime, setLeftTime] = useState({})\n  const { poolStat } = useMappedState((state) => ({\n    poolStat: state.gov.poolStat\n  }))\n\n  const getLeftTime = (t) => {\n    const time = parseInt((new Date(t * 1000) - new Date()) / 1000, 10)\n    const day = parseInt((time < 0 ? 0 : time / 3600 / 24), 10)\n    const hour = parseInt((time < 0 ? 0 : time / 3600 % 24), 10)\n    const minute = parseInt((time < 0 ? 0 : time / 60 % 60), 10)\n    const second = time < 0 ? 0 : time % 60\n    const dateInfo = {\n      day: day < 10 ? `0${day}` : day,\n      hour: hour < 10 ? `0${hour}` : hour,\n      minute: minute < 10 ? `0${minute}` : minute,\n      second: second < 10 ? `0${second}` : second\n    }\n\n    setLeftTime(dateInfo)\n  }\n\n  useEffect(() => {\n    const startTimeStamp = poolStat.distributionInfo.startTimeStamp\n    if (startTimeStamp && new Date(startTimeStamp * 1000) > new Date()) {\n      setHasBegan(false)\n      getLeftTime(poolStat.distributionInfo.startTimeStamp)\n    } else {\n      setHasBegan(true)\n    }\n  }, [poolStat])\n\n  useEffect(() => {\n    const interval = !hasBegan && setInterval(() => getLeftTime(poolStat.distributionInfo.startTimeStamp), 1000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [hasBegan])\n\n  return (\n    <div className=\"governance-wrapper\">\n      <div className=\"overview-wrapper\">\n        <div className=\"overview-title\">Overview</div>\n        {\n          !hasBegan ? (\n            <div className=\"countdown-wrapper\">Distribution will begin in\n              { Number(leftTime.day) ? <div className=\"date-item\">DAYS<p>{leftTime.day}</p></div> : null }\n              { leftTime.hour ? <div className=\"date-item\">HOURS<p>{leftTime.hour}</p></div> : null }\n              { leftTime.minute ? <div className=\"date-item\">MINUTES<p>{leftTime.minute}</p></div> : null }\n              { leftTime.second ? <div className=\"date-item\">SECONDS<p>{leftTime.second}</p></div> : null }\n            </div>\n          ) : null\n        }\n        <div className=\"overview-sections\">\n          <div className=\"overview-left\">\n            <p className=\"overview-section-title\">Total UNX</p>\n            <p className=\"overview-detail\">{toLocaleFixed(poolStat.distributionInfo.amount || 0)}</p>\n          </div>\n          <div className=\"overview-right\">\n            <p className=\"overview-section-title\">Daily Distribution</p>\n            <p className=\"overview-detail\">{toLocaleFixed(((poolStat.distributionInfo.amount || 0) / (poolStat.distributionInfo.period || 1) * 86400).toFixed(9))} <span>UNX</span></p>\n          </div>\n        </div>\n      </div>\n      <div className=\"distribution-wrapper\">\n        <div className=\"overview-title\">Distribution</div>\n        <div className=\"distribution-sections\">\n          <div className=\"pie-svg\">\n            <svg className=\"donut\" width=\"240px\" height=\"240px\" viewBox=\"0 0 42 42\" role=\"img\">\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#2BBE7F\" stroke-width=\"4\" stroke-dasharray=\"80, 20\" stroke-dashoffset=\"100\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"120\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FE332F\" stroke-width=\"4\" stroke-dasharray=\"8, 92\" stroke-dashoffset=\"219.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"311.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#F4BA5E\" stroke-width=\"4\" stroke-dasharray=\"8, 92\" stroke-dashoffset=\"411\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"503\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#2B3962\" stroke-width=\"4\" stroke-dasharray=\"3, 97\" stroke-dashoffset=\"602.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"699.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#F18DA5\" stroke-width=\"4\" stroke-dasharray=\"1, 99\" stroke-dashoffset=\"799\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"898\"></circle>\n            </svg>\n          </div>\n          <div className=\"pie-desc\">\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#2BBE7F' } }></div>\n              <div className=\"d-item-name\">Community</div>\n              <div className=\"d-item-ratio\">80%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#FE332F' } }></div>\n              <div className=\"d-item-name\">Developer</div>\n              <div className=\"d-item-ratio\">8%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#F4BA5E' } }></div>\n              <div className=\"d-item-name\">Foundation</div>\n              <div className=\"d-item-ratio\">8%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#2B3962' } }></div>\n              <div className=\"d-item-name\">Resoucse Extension</div>\n              <div className=\"d-item-ratio\">3%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#F18DA5' } }></div>\n              <div className=\"d-item-name\">Volunteer</div>\n              <div className=\"d-item-ratio\">1%</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Governance","import { useEffect, useCallback } from 'react'\nimport { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport { GOVERNANCE_ADDRESS } from '../config'\nimport { handleError } from '../utils/errorHandle'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\n\nconst { StringReader, hexstr2str, reverseHex } = utils\n\nexport const useFetchTokens = () => {\n  const { stopInterval, tokens } = useMappedState((state) => ({\n    stopInterval: state.common.stopInterval,\n    tokens: state.common.tokens\n  }))\n  const dispatch = useDispatch()\n  const setIsUpgrading = useCallback((isUpgrading) => dispatch({ type: 'SET_IS_UPGRADING', isUpgrading }), [])\n  const setLoadingToken = useCallback((loadingToken) => dispatch({ type: 'SET_LOADING_TOKEN', loadingToken }), [])\n  const setTokens = useCallback((tokens) => dispatch({ type: 'SET_TOKENS', tokens }), [])\n  const setStopInterval = useCallback((stopInterval) => dispatch({ type: 'SET_STOP_INTERVAL', stopInterval }), [])\n  const setPoolStat = useCallback((poolStat) => dispatch({ type: 'SET_POOL_STAT', poolStat }), [])\n\n  useEffect(() => {\n    getGovStat()\n    let interval = !stopInterval && !tokens.length && setInterval(getGovStat, 1000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokens, stopInterval])\n\n  async function getGovStat() {\n    if (!tokens.length) {\n      try {\n        const statStr = await client.api.smartContract.invokeWasmRead({\n          scriptHash: GOVERNANCE_ADDRESS,\n          operation: 'stat',\n          args: []\n        })\n\n        const strReader = new StringReader(statStr)\n        const distributionInfo = {}\n        distributionInfo.amount = strReader.readUint128() / (10 ** 9)\n        distributionInfo.period = strReader.readUint128()\n        distributionInfo.startTimeStamp = strReader.readUint128()\n        distributionInfo.settledTimeStamp = strReader.readUint128()\n  \n        const pools = {}\n        const poolCount = strReader.readNextLen()\n        let totalWeight = 0\n        for (let i = 0; i < poolCount; i++) {\n          const pool = {}\n          const nameLength = strReader.readNextLen()\n          pool.name = hexstr2str(strReader.read(nameLength))\n          pool.address = reverseHex(strReader.read(20))\n          pool.weight = strReader.readUint128()\n          totalWeight += pool.weight\n          pools[pool.name] = pool\n        }\n\n        for (let poolName in pools) {\n          pools[poolName].ratio = pools[poolName].weight / totalWeight\n        }\n  \n        const upgrade = strReader.readBoolean()\n        const parsedTokens = []\n        const tokenCount = strReader.readNextLen()\n        for (let i = 0; i < tokenCount; i++) {\n          const token = {}\n          token.id = strReader.readUint128()\n          const nameLength = strReader.readNextLen()\n          token.name = hexstr2str(strReader.read(nameLength))\n          token.address = reverseHex(strReader.read(20))\n          token.ty = strReader.readUint8()\n          token.decimals = strReader.readUint128()\n\n          token.value = token.id\n          token.label = token.name\n\n          parsedTokens.push(token)\n        }\n\n        if (upgrade) {\n          setIsUpgrading(true)\n        }\n\n        setLoadingToken(false)\n        setTokens(parsedTokens)\n        setPoolStat({\n          distributionInfo,\n          pools,\n          upgrade\n        })\n      } catch (e) {\n        console.log(e)\n        handleError(e, (errorCode) => {\n          console.log(errorCode)\n          if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n            setStopInterval(true)\n          } else {\n            console.log('get all tokens', e)\n          }\n        })\n      }\n    }\n  }\n\n  return null\n}","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useEffect, useCallback } from 'react'\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport Header from './components/header'\nimport Modal from './components/modal'\nimport Transaction from './pages/transaction'\nimport Swap from './pages/swap'\nimport Pool from './pages/pool'\nimport AddLiquidity from './pages/pool/addLiquidity'\nimport RemoveLiquidity from './pages/pool/removeLiquidity'\nimport Staking from './pages/staking'\nimport StakingDetail from './pages/staking/detail'\nimport Token from './pages/token'\nimport Option from './pages/option'\nimport Coming from './pages/coming'\n// import Trade from './pages/trade'\nimport Synth from './pages/synth'\nimport Overview from './pages/governance'\nimport { NETWORK_TYPE, READY_TABS, COMING_TABS } from './config'\nimport { useFetchTokens } from './hooks/useToken'\nimport './App.css'\n\nexport const App = () => {\n  const Alert = useAlert()\n  const { account, isUpgrading, loadingToken } = useMappedState((state) => ({\n    isUpgrading: state.common.isUpgrading,\n    loadingToken: state.common.loadingToken,\n    account: state.wallet.account\n  }))\n  const dispatch = useDispatch()\n  const setAccount = useCallback((account) => dispatch({ type: 'SET_ACCOUNT', account }), [])\n\n  useEffect(() => {\n    let retryTimes = 3\n    const interval = setInterval(() => {\n      client.api.provider.getProvider()\n        .then(() => {\n          clearInterval(interval)\n        })\n        .catch((e) => {\n          if (e === 'NO_PROVIDER') {\n            retryTimes--\n            if (!retryTimes) {\n              Alert.error('Please install wallet extension first')\n            }\n          }\n        })\n    }, 500)\n  }, [])\n\n  useEffect(() => {\n    client.api.network.getNetwork()\n      .then((network) => {\n        if (network && network.type !== NETWORK_TYPE) {\n          Alert.error(`Please connect to the ${NETWORK_TYPE}-Net`)\n          return\n        }\n      })\n      .catch((e) => {\n        console.log(e)\n      })\n  }, [])\n\n  useFetchTokens()\n\n  async function onConnectWallet() {\n    try {\n      const accountAddress = await client.api.asset.getAccount()\n      setAccount(accountAddress)\n      localStorage.setItem('account', accountAddress)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  function onSignOut() {\n    setAccount('')\n    localStorage.setItem('account', '')\n  }\n\n  function renderLoading() {\n    if (loadingToken) {\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper transparent-bg\">\n            <div className=\"modal-icon-loading modal-icon\"></div>\n            <div className=\"modal-text light\">Loading...</div>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  function renderUpgrading() {\n    if (isUpgrading) {\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper transparent-bg\">\n            <div className=\"modal-icon-upgrading modal-icon\"></div>\n            <div className=\"modal-text light\">UNIQ-EX is upgrading...</div>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Router>\n      {renderLoading()}\n      {\n        !isUpgrading ? (\n          <div className=\"app\">\n            <React.Fragment>\n              {\n                (account === null) && <div className=\"connect-wallet-overlay\">\n                  <div className=\"connect-wrapper\">\n                    <p className=\"connect-title\">Connect Wallet</p>\n                    <div className=\"wallet-item\" onClick={() => onConnectWallet()}>Cyano Wallet</div>\n                  </div>\n                </div>\n              }\n              <Modal />\n              <Header onSignOut={() => onSignOut()} onConnectWallet={() => onConnectWallet()} />\n              <div className=\"main-wrapper\">\n                <Switch>\n                  {\n                    READY_TABS.indexOf('/') >= 0 ?\n                    <Route exact path=\"/\">\n                      { COMING_TABS.indexOf('/') >= 0 ? <Coming /> : <Staking /> }\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/') >= 0 ?\n                    <Route exact path=\"/staking/:id\">\n                      { COMING_TABS.indexOf('/') >= 0 ? <Coming /> : <StakingDetail /> }\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/swap') >= 0 ?\n                    <Route exact path=\"/swap\">\n                      { COMING_TABS.indexOf('/swap') >= 0 ? <Coming /> : <Swap /> }\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/swap') >= 0 ?\n                    <Route exact path=\"/pool\">\n                      { COMING_TABS.indexOf('swap') >= 0 ? <Coming /> : <Pool /> }\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/swap') >= 0 ?\n                    <Route exact path=\"/pool/add\">\n                      { COMING_TABS.indexOf('/swap') >= 0 ? <Coming /> : <AddLiquidity /> }\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/swap') >= 0 ?\n                    <Route exact path=\"/pool/remove/:id\">\n                      { COMING_TABS.indexOf('/swap') >= 0 ? <Coming /> : <RemoveLiquidity /> }\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/trade') >= 0 ?\n                    <Route exact path=\"/trade\">\n                      { COMING_TABS.indexOf('/trade') >= 0 ? <Coming /> : <Transaction /> }\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/governance') >= 0 ?\n                    <Route exact path=\"/governance\">\n                      { COMING_TABS.indexOf('/governance') >= 0 ? <Coming /> : <Overview /> }\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/token') >= 0 ?\n                    <Route exact path=\"/token\">\n                      { COMING_TABS.indexOf('/token') >= 0 ? <Coming /> : <Token /> }\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/option') >= 0 ?\n                    <Route exact path=\"/option\">\n                      { COMING_TABS.indexOf('/option') >= 0 ? <Coming /> : <Option /> }\n                    </Route> : null\n                  }\n                  {\n                    READY_TABS.indexOf('/synth') >= 0 ?\n                    <Route exact path=\"/synth\">\n                      { COMING_TABS.indexOf('/synth') >= 0 ? <Coming /> : <Synth /> }\n                    </Route> : null\n                  }\n                </Switch>\n              </div>\n            </React.Fragment>\n          </div>\n        ) : renderUpgrading()\n      }\n      \n    </Router>\n  )\n}\n","const initState = {\n  infoModal: {\n    show: false,\n    type: '',\n    text: '',\n    extraText: '',\n    extraLink: ''\n  },\n}\n\nexport const modal = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_MODAL':\n      return { ...state, [action.modalType]: action.modalDetail }\n    default:\n      return { ...state }\n  }\n}","const initState = {\n  account: localStorage.getItem('account'),\n  slippage: localStorage.getItem('slippage') || '0.1'\n}\n\nexport const wallet = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_ACCOUNT':\n      return { ...state, account: action.account }\n    case 'SET_SLIPPAGE':\n      localStorage.setItem('slippage', action.slippage)\n      return { ...state, slippage: action.slippage }\n    default:\n      return { ...state }\n  }\n}","const initState = {\n  isUpgrading: false,\n  loadingToken: true,\n  stopInterval: false,\n  tokens: []\n}\n\nexport const common = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_IS_UPGRADING':\n      return { ...state, isUpgrading: action.isUpgrading }\n    case 'SET_LOADING_TOKEN':\n      return { ...state, loadingToken: action.loadingToken }\n    case 'SET_STOP_INTERVAL':\n      return { ...state, stopInterval: action.stopInterval }\n    case 'SET_TOKENS':\n      return { ...state, tokens: action.tokens }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  poolStat: {\n    distributionInfo: {},\n    pools: {\n      staking: {},\n      swap: {},\n      dex: {},\n      synth: {}\n    },\n    upgrade: false\n  }\n}\n\nexport const gov = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_POOL_STAT':\n      return { ...state, poolStat: action.poolStat }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  tokens: [],\n  pairs: [],\n  swapType: 'exactin',\n  token1: {},\n  token2: {},\n  token1Amount: '',\n  token2Amount: '',\n  isValidPair: false,\n  isValidSwap: false,\n  bestPath: [],\n  showPrice: false,\n}\n\nexport const swap = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_SWAP_TOKENS':\n      return { ...state, tokens: action.tokens }\n    case 'SET_PAIRS':\n      return { ...state, pairs: action.pairs }\n    case 'SET_SWAP_TYPE':\n      return { ...state, swapType: action.swapType }\n    case 'SET_SWAP_TOKEN1':\n      return { ...state, token1: action.token1 }\n    case 'SET_SWAP_TOKEN2':\n      return { ...state, token2: action.token2 }\n    case 'SET_TOKEN1_AMOUNT':\n      return { ...state, token1Amount: action.token1Amount }\n    case 'SET_TOKEN2_AMOUNT':\n      return { ...state, token2Amount: action.token2Amount }\n    case 'SET_IS_VALID_PAIR':\n      return { ...state, isValidPair: action.isValidPair }\n    case 'SET_IS_VALID_SWAP':\n      return { ...state, isValidSwap: action.isValidSwap }\n    case 'SET_SWAP_BEST_PATH':\n      return { ...state, bestPath: action.bestPath }\n    case 'SET_SWAP_SHOW_RPICE':\n      return { ...state, showPrice: action.showPrice }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  tokens: []\n}\n\nexport const staking = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_STAKING_TOKENS':\n      return { ...state, tokens: action.tokens }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  stat: {},\n  marketStat: {},\n  availableReward: 0,\n  synthType: 'mint',\n  unxToken: {},\n  unxPrice: 0\n}\n\nexport const synth = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_SYNTH_STAT':\n      return { ...state, stat: action.stat }\n    case 'SET_SYNTH_MARKET_STAT':\n      return { ...state, marketStat: action.marketStat }\n    case 'SET_SYNTH_AVAILABLE_REWARD':\n      return { ...state, availableReward: action.availableReward }\n    case 'SET_SYNTH_TYPE':\n      return { ...state, synthType: action.synthType }\n    case 'SET_SYNTH_UNX_TOKEN':\n      return { ...state, unxToken: action.unxToken }\n    case 'SET_SYNTH_UNX_PRICE':\n      return { ...state, unxPrice: action.unxPrice }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  makes: [],\n  myMakes: [],\n  pairs: [],\n  tradeType: 'buy',\n  tokenPair: {},\n  makeView: 'all',\n  pool: [],\n  lastPrice: 0,\n  feeRate: 0,\n  isValid: false,\n  tokenBalance: '-',\n  price: '',\n  amount: '',\n  total: ''\n}\n\nexport const trade = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_TRADE_MAKES':\n      return { ...state, makes: action.makes }\n    case 'SET_TRADE_MY_MAKES':\n      return { ...state, myMakes: action.myMakes }\n    case 'SET_TRADE_PAIRS':\n      return { ...state, pairs: action.pairs }\n    case 'SET_TRADE_TYPE':\n      return { ...state, tradeType: action.tradeType }\n    case 'SET_TRADE_TOKEN_PAIR':\n      return { ...state, tokenPair: action.tokenPair }\n    case 'SET_TRADE_MAKE_VIEW':\n      return { ...state, makeView: action.makeView }\n    case 'SET_TRADE_POOL':\n      return { ...state, pool: action.pool }\n    case 'SET_TRADE_LAST_PRICE':\n      return { ...state, lastPrice: action.lastPrice }\n    case 'SET_TRADE_FEE_RATE': \n      return { ...state, feeRate: action.feeRate }\n    case 'SET_TRADE_IS_VALID': \n      return { ...state, isValid: action.isValid }\n    case 'SET_TRADE_TOKEN_BALANCE': \n      return { ...state, tokenBalance: action.tokenBalance }\n    case 'SET_TRADE_PRICE': \n      return { ...state, price: action.price }\n    case 'SET_TRADE_AMOUNT': \n      return { ...state, amount: action.amount }\n    case 'SET_TRADE_TOTAL': \n      return { ...state, total: action.total }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  liquidityBalance: []\n}\n\nexport const pool = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_POOL_LIQUIDITY_BALANCE':\n      return { ...state, liquidityBalance: action.liquidityBalance }\n    default:\n      return { ...state }\n  }\n}\n","import { combineReducers } from 'redux'\nimport { modal } from './modal'\nimport { wallet } from './wallet'\nimport { common } from './common'\nimport { gov } from './gov'\nimport { swap } from './swap'\nimport { staking } from './staking'\nimport { synth } from './synth'\nimport { trade } from './trade'\nimport { pool } from './pool'\n\nconst reducers = combineReducers({\n  modal,\n  wallet,\n  common,\n  gov,\n  swap,\n  staking,\n  synth,\n  trade,\n  pool\n})\n\nexport default reducers","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as Ontology from '@ont-dev/ontology-dapi';\nimport { positions, Provider } from \"react-alert\";\nimport { createStore } from 'redux';\nimport { StoreContext } from 'redux-react-hook';\nimport AlertTemplate from \"react-alert-template-basic\";\nimport reducers from './reducers';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'rc-tooltip/assets/bootstrap.css'\nimport './styles/font.css';\nimport './styles/common.css';\nimport './index.css';\n\nconst store = createStore(reducers)\n\nOntology.client.registerClient({});\n\nconst options = {\n  timeout: 10000,\n  position: positions.TOP_CENTER\n};\n\nReactDOM.render(\n  <Provider template={AlertTemplate} {...options}>\n    <StoreContext.Provider value={store}>\n      <App />\n    </StoreContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}