{"version":3,"sources":["../node_modules/milagro-crypto-js/src sync /^/.//.*$","components/input/index.js","config.js","utils/common.js","components/header/index.js","components/modal/index.js","utils/request.js","utils/token.js","utils/errorHandle.js","utils/constants.js","pages/transaction/index.js","components/tokenInput/index.js","hooks/usePair.js","utils/swap.js","pages/swap/index.js","pages/pool/index.js","pages/pool/addLiquidity/index.js","pages/pool/removeLiquidity/index.js","pages/staking/index.js","pages/staking/detail/index.js","pages/token/index.js","pages/synth/index.js","pages/governance/index.js","hooks/useToken.js","App.js","reducers/modal.js","reducers/wallet.js","reducers/common.js","reducers/gov.js","reducers/swap.js","reducers/staking.js","reducers/index.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Input","props","value","cls","disabled","round","decimals","inline","onChange","useState","val","setVal","useEffect","placeholder","handleInput","formattedValue","v","RegExp","test","formatter","target","className","type","onInput","NETWORK_TYPE","GOVERNANCE_ADDRESS","TRANSACTION_BASE_URL","TRANSACTION_AFTERFIX","READY_TABS","toLocaleFixed","num","n","priceNum","parseFloat","Math","toFixed","toString","indexOf","replace","$0","$1","formatAccount","account","substr","Header","selectedTab","setSelectedTab","showProfilePanel","setShowProfilePanel","useMappedState","state","wallet","slippage","showSiteIntro","setShowSiteIntro","dispatch","useDispatch","setSlippage","useCallback","pathname","useLocation","tab","href","window","location","origin","onClick","rel","renderSiteIntro","to","onConnectWallet","Number","amount","onSignOut","InfoModal","onCloseModal","text","extraLink","extraText","Modal","infoModal","modal","setModal","modalType","modalDetail","modals","show","push","assign","buildModals","instance","axios","create","baseURL","timeout","headers","interceptors","response","use","data","error","Promise","reject","reverseHex","utils","getTokenBalance","token","cb","name","param","scriptHash","address","operation","args","invokeMethod","client","api","smartContract","invokeRead","ty","invokeWasmRead","then","bl","str","split","reverse","total","BigNumber","i","length","plus","times","parseInt","div","request","method","url","resp","targetToken","result","find","t","asset_name","toLowerCase","balance","catch","console","log","getTokenIconDom","slice","tokenName","handleError","callback","json","JSON","parse","Result","PRICE_DECIMALS","SYNTH_PRICE_DECIMALS","ASSET_STATUS","LEVERAGE_TYPE","StringReader","Transaction","pairNameKeyword","setPairNameKeyword","pairs","setPairs","tokenPair","setTokenPair","showPairSelectModal","setShowPairSelectModal","tradeType","setTradeType","tokenBalance","setTokenBalance","makes","setMakes","myMakes","setMyMakes","makeView","setMakeView","price","setPrice","setAmount","setTotal","pool","setPool","lastPrice","setLastPrice","feeRate","setFeeRate","isValid","setIsValid","stopInterval","common","tokens","CONTRACT_ADDRESS","gov","poolStat","pools","dex","setStopInterval","Alert","useAlert","urlPairName","decodeURIComponent","hash","reg","match","getHashString","getMakes","curMakes","filter","m","asset_token_id","price_token_id","pow","onUnmake","make_id","a","assetToken","priceToken","tradePrice","tradeAmount","integerValue","ROUND_DOWN","invokeWasm","gasPrice","gasLimit","requireIdentity","makeResult","transaction","makeId","unmakeResult","getPriceHint","getAmountHint","p","getMakesOfPair","makeStr","parsedMakes","strReader","pairLastPrice","readUint128","j","makeCount","readNextLen","make","errorCode","interval","setInterval","clearInterval","getUserMakes","hexToAddress","read","getStat","statStr","tokenPool","tokenCount","tempToken","tokenPairs","onMake","toUpperCase","tp","generateTokenPool","nameLC","reduce","b","TokenInput","defaultTokenId","inputDisabled","showBalance","withMax","onTokenChange","onAmountChange","balanceChange","setToken","setBalance","label","defaultId","defaultToken","defaultValue","options","isSearchable","components","Option","SingleValue","children","newToken","handleTokenChange","theme","borderRadius","colors","primary","renderTokenSeletion","isNaN","useFetchPairs","swapTokens","swap","SWAP_ADDRESS","setSwapTokens","getSwapStat","pairStr","parsedPairs","pairCount","pair","token1","token2","reserve1","reserve2","lp","tokenIds","tk","REST","findAllPaths","sourceId","targetId","pathArr","findPath","pathNodes","neighborNodes","includes","sort","p1","p2","getInputAmount","output","minus","ROUND_CEIL","getOutputAmount","input","ROUND_FLOOR","findNextOutput","findPrevInput","bestSwap","paths","originAmount","maxOutput","minInput","Infinity","path","Swap","swapType","setSwapType","setToken1","setToken2","token1Amount","setToken1Amount","token2Amount","setToken2Amount","isValidPair","setIsValidPair","isValidSwap","setIsValidSwap","bestPath","setBestPath","showPrice","setShowPrice","setBalanceChange","history","useHistory","swapResult","st","validPair","onChangeToken1","inputAmount","onToken1AmountChange","onChangeToken2","outputAmount","onToken2AmountChange","handleSwap","abs","getPriceImpact","items","index","getBestPath","Pool","liquidityBalance","setLiquidityBalance","all","myLiquidities","l","lb","pairId","shareOfPool","sqrt","onRemoveLiquidity","generateLiquidityList","AddLiquidity","isFirstProvider","setIsFirstProvider","showPriceInfo","setShowPriceInfo","getPairByToken","getPairPrice","ROUND_UP","addResult","goBack","ceil","amountProduct","getShareOfPool","onAdd","RemoveLiquidity","setPair","getLiquidityBalanceByPairId","onRemove","Staking","showClosed","setShowClosed","stakingTokens","staking","STAKING_ADDRESS","setStakingTokens","getStakingTokenBalance","parsedTokens","weight","totalWeight","filteredTokens","originWeight","getTip","openStakingTokens","closedStakingTokens","startsWith","placement","overlay","onSelectToken","generateStakingPool","StakingDetail","stakeToken","setStakeToken","tokenWeight","setTokenWeight","myStake","setMyStake","stakeType","setStakeType","claimableWing","setClaimableWing","showStakingModal","setShowStakingModal","tokenId","getAccountStake","stakeStr","interest","stake","handleStakeClick","action","stakeResult","harvestResult","sToken","getClaimableWing","onHarvest","onStake","Token","Synth","synthType","setSynthType","mintAsset","setMintAsset","mintAmount","setMintAmount","unxNeededForMint","setUnxNeededForMint","burnAsset","setBurnAsset","burnAmount","setBurnAmount","unxGetForBurn","setUnxGetForBurn","exchangeAsset","setExchangeAsset","exchangeToAsset","setExchangeToAsset","exchangeAmount","setExchangeAmount","exchangeToAssets","setExchangeToAssets","exchangeToAmount","setExchangeToAmount","unxToken","setUnxToken","unxPrice","setUnxPrice","showMintModal","setShowMintModal","showBurnModal","setShowBurnModal","showExchangeModal","setShowExchangeModal","availableReward","setAvailableReward","marketStat","setMarketStat","stat","setStat","synthPoolWeightRatio","synth","ratio","SYNTH_ADDRESS","marketAssetValue","unxTk","marketAssetBalances","marketTokenBalance","daiTk","getAvailableReward","claimStr","liveAssetCount","liveAssets","asset","assetId","leverageType","readNextByte","entryPrice","lowLimit","highLimit","status","frozenBy","frozenTime","readUint64","frozenAssetCount","frozenAssets","tokenPriceCount","tokenPrices","tokenPrice","liveAsset","currentPrice","unprocessedFrozen","frozenAsset","getMarketStat","marketAssetBalanceCount","marketAssetValueSum","assetBalance","assetPrice","la","accountAssetBalanceCount","accountAssetBalances","accountAssetValueSum","marketStakeValue","accountStakeValue","accountClaimedValue","accountWithdrawedStakeValue","transferable","parsedMarketStat","accountAssetValue","handleBurnAmountChange","handleExchangeAmountChange","mintResult","burnResult","burnAllResult","exchangeResult","handleFreezeAsset","freezeResult","distributionInfo","period","onBurnAll","onClaim","accountAsset","ab","holdings","fa","isFrozen","effectiveLeverage","toAssets","handleMintAmountChange","handleUnxNeededForMintChange","onMint","handleUnxGetForBurnChange","onBurn","handleChangeExchangeToAsset","handleChengeExchangeToAmount","onExchange","Governance","width","height","viewBox","role","cx","cy","r","fill","stroke","stroke-width","stroke-dasharray","stroke-dashoffset","style","background","hexstr2str","App","loadingToken","setAccount","provider","getProvider","network","getNetwork","getAccount","accountAddress","localStorage","setItem","setLoadingToken","setTokens","setPoolStat","getGovStat","startTimeStamp","settledTimeStamp","poolCount","nameLength","poolName","upgrade","readBoolean","readUint8","useFetchTokens","exact","initState","getItem","reducers","combineReducers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","Ontology","registerClient","position","positions","TOP_CENTER","ReactDOM","render","template","AlertTemplate","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.3eefb95e.chunk.js","sourcesContent":["var map = {\n\t\"./aes\": 270,\n\t\"./aes.js\": 270,\n\t\"./big\": 271,\n\t\"./big.js\": 271,\n\t\"./ctx\": 171,\n\t\"./ctx.js\": 171,\n\t\"./ecdh\": 272,\n\t\"./ecdh.js\": 272,\n\t\"./ecp\": 273,\n\t\"./ecp.js\": 273,\n\t\"./ecp2\": 274,\n\t\"./ecp2.js\": 274,\n\t\"./ff\": 275,\n\t\"./ff.js\": 275,\n\t\"./fp\": 276,\n\t\"./fp.js\": 276,\n\t\"./fp12\": 277,\n\t\"./fp12.js\": 277,\n\t\"./fp2\": 278,\n\t\"./fp2.js\": 278,\n\t\"./fp4\": 279,\n\t\"./fp4.js\": 279,\n\t\"./gcm\": 280,\n\t\"./gcm.js\": 280,\n\t\"./hash256\": 281,\n\t\"./hash256.js\": 281,\n\t\"./hash384\": 282,\n\t\"./hash384.js\": 282,\n\t\"./hash512\": 283,\n\t\"./hash512.js\": 283,\n\t\"./mpin\": 284,\n\t\"./mpin.js\": 284,\n\t\"./newhope\": 285,\n\t\"./newhope.js\": 285,\n\t\"./nhs\": 286,\n\t\"./nhs.js\": 286,\n\t\"./pair\": 287,\n\t\"./pair.js\": 287,\n\t\"./rand\": 288,\n\t\"./rand.js\": 288,\n\t\"./rom_curve\": 289,\n\t\"./rom_curve.js\": 289,\n\t\"./rom_field\": 290,\n\t\"./rom_field.js\": 290,\n\t\"./rsa\": 291,\n\t\"./rsa.js\": 291,\n\t\"./sha3\": 292,\n\t\"./sha3.js\": 292,\n\t\"./uint64\": 293,\n\t\"./uint64.js\": 293\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 593;","import React, { useState, useEffect } from 'react';\n\nconst Input = (props) => {\n  const { value = '', cls = '', round, disabled, decimals, inline = true, onChange } = props\n  const [val, setVal] = useState('')\n\n  useEffect(() => {\n    setVal(value)\n  //   if (value === '') {\n  //     setVal('')\n  //   } else if (`${value}`.endsWith('.')) {\n  //     setVal(value)\n  //   } else {\n  //     if (round === 'down') {\n  //       setVal(Math.floor(value * (10 ** decimals)) / (10 ** decimals))\n  //     } else if (round === 'up') {\n  //       setVal(Math.ceil(value * (10 ** decimals)) / (10 ** decimals))\n  //     }\n  //   }\n  }, [value])\n\n  const placeholder = decimals > 0 ? '0.0' : '0'\n  const formatter = (v, decimals = 9) => {\n    if (v === '' || v === '0') {\n      return v\n    } else {\n      const reg = (decimals > 0) ? new RegExp(\n        `^(([0-9]{0,9})|(([0]\\\\.\\\\d{0,${decimals}}|[0-9]{0,9}\\\\.\\\\d{0,${decimals}})))$`\n      ) : new RegExp('^[0-9]{0,9}$')\n      if (reg.test(v)) {\n        return v\n      } else {\n        return val\n      }\n    }\n  };\n  const handleInput = (e) => {\n    const formattedValue = formatter(e.target.value, decimals)\n\n    setVal(formattedValue)\n    typeof onChange === 'function' && onChange(formattedValue)\n  }\n\n  // const handleChange = (e) => {\n  //   typeof onChange === 'function' && onChange(e.target.value)\n  // }\n\n  return (\n    <input\n      className={`input ${inline ? 'inline-input' : ''} ${cls}`}\n      type=\"text\"\n      placeholder={placeholder}\n      value={val}\n      disabled={disabled}\n      onInput={(e) => handleInput(e)}\n      // onChange={(e) => handleChange(e)}\n    />\n  );\n};\n\nexport default Input;\n","export const NETWORK_TYPE = 'TEST'\nexport const GOVERNANCE_ADDRESS = '7070a32039fc317ba476801971b3c4328db33be9'\nexport const API_BASE_URL = 'https://polarisexplorer.ont.io'\nexport const TRANSACTION_BASE_URL = 'https://explorer.ont.io/transaction/'\nexport const TRANSACTION_AFTERFIX = '/testnet'\nexport const READY_TABS = ['/', '/swap', '/trade', '/governance', '/synth']","export const getQueryString = (search, name) => {\n  const reg = new RegExp(`(^|&)${name}=([^&]*)(&|$)`, 'i')\n  const value = search.substr(1).match(reg)\n\n  if (value != null) {\n    return (value[2])\n  }\n\n  return null\n}\n\nexport const getHashString = (hash, name) => {\n  const reg = new RegExp(`(^|&|[/?]+)${name}=([^&]*)(&|$)`, 'i')\n  const value = hash.substr(1).match(reg)\n\n  if (value != null) {\n    return (value[2])\n  }\n\n  return null\n}\n\nexport function toLocaleFixed(num, n = 9) {\n  const priceNum = parseFloat(n === 0 ? Math.round(num).toFixed(n) : parseFloat(num).toFixed(n)).toString()\n  return priceNum && (priceNum.indexOf('.') !== -1 ? priceNum.replace(/(\\d)(?=(\\d{3})+\\.)/g, ($0, $1) => `${$1},`) : priceNum.replace(/(?=(\\B\\d{3})+$)/g, ','))\n}\n\nexport const formatAccount = (account = '') => {\n  return `${account.substr(0, 4)}...${account.substr(-4)}`\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { Link, useLocation } from 'react-router-dom'\nimport Input from '../input'\nimport { READY_TABS } from '../../config'\nimport { formatAccount } from '../../utils/common'\nimport './index.css'\n\nconst Header = (props) => {\n  const [selectedTab, setSelectedTab] = useState('')\n  const [showProfilePanel, setShowProfilePanel] = useState(false)\n  const { account, slippage } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage\n  }))\n  const [showSiteIntro, setShowSiteIntro] = useState(false)\n  const dispatch = useDispatch()\n  const setSlippage = useCallback((slippage) => dispatch({ type: 'SET_SLIPPAGE', slippage }), [])\n  const pathname = useLocation().pathname\n\n  const toggleShowSiteIntro = (show) => {\n    setShowSiteIntro(show)\n  }\n\n  useEffect(() => {\n    let tab = ''\n    if (pathname === '/' || pathname.indexOf('/staking') >= 0) {\n      tab = '/'\n    } else if (pathname.indexOf('/synth') >= 0) {\n      tab = '/synth'\n    } else if (pathname.indexOf('/swap') >= 0 || pathname.indexOf('/pool') >= 0) {\n      tab = '/swap'\n    } else if (pathname.indexOf('/trade') >= 0) {\n      tab = '/trade'\n    } else if (pathname.indexOf('/governance') >= 0) {\n      tab = '/governance'\n    } else if (pathname.indexOf('/token') >= 0) {\n      tab = '/token'\n    }\n    \n    setSelectedTab(tab)\n  }, [pathname])\n\n  const renderSiteIntro = () => {\n    if (showSiteIntro) {\n      const href = `${window.location.origin}${window.location.pathname}#/trade?pair=pDAI%2FUNX`\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper\">\n            <div className=\"close-btn\" onClick={() => toggleShowSiteIntro(false)}></div>\n            <p className=\"intro-line\">uniq-ex is a pure github based DAO dex, all activities are logged on github.</p>\n            <p className=\"intro-line\">You can open issues for discussion <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/uniq-ex/uniq-ex/issues\">here</a></p>\n            <p className=\"intro-line\">uniq-ex's future business will not be limited to exchanges though, we may enter various DeFi markets like compound or hegic.</p>\n            <p className=\"intro-line\">You can buy UNX(the governance token of uniq-ex) <a target=\"_blank\" rel=\"noreferrer\" href={href}>here</a></p>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  const onSignOut = () => {\n    setShowProfilePanel(false)\n    typeof props.onSignOut === 'function' && props.onSignOut()\n  }\n\n  const onConnectWallet = () => {\n    typeof props.onConnectWallet === 'function' && props.onConnectWallet()\n  }\n\n  const toggleProfilePanel = () => {\n    setShowProfilePanel(!showProfilePanel)\n  }\n\n  return (\n    <div className=\"header-wrapper\">\n      {renderSiteIntro()}\n      <div className=\"header\">\n        <div className=\"content-wrapper\">\n          <div className=\"logo-wrapper\">\n            UNIQ-EX\n            {/* <div className=\"site-intro\" onClick={() => toggleShowSiteIntro(true)}></div> */}\n          </div>\n          <div className=\"nav-list\">\n            { READY_TABS.indexOf('/') >= 0 ? <div className={`nav-item ${selectedTab === '/' ? 'selected' : ''}`}><Link to=\"/\">Staking</Link></div> : null }\n            { READY_TABS.indexOf('/synth') >= 0 ? <div className={`nav-item ${selectedTab === '/synth' ? 'selected' : ''}`}><Link to=\"/synth\">Synth</Link></div> : null }\n            { READY_TABS.indexOf('/swap') >= 0 ? <div className={`nav-item ${selectedTab === '/swap' ? 'selected' : ''}`}><Link to=\"/swap\">Swap</Link></div> : null }\n            { READY_TABS.indexOf('/trade') >= 0 ? <div className={`nav-item ${selectedTab === '/trade' ? 'selected' : ''}`}><Link to=\"/trade\">Trade</Link></div> : null }\n            { READY_TABS.indexOf('/governance') >= 0 ? <div className={`nav-item ${selectedTab === '/governance' ? 'selected' : ''}`}><Link to=\"/governance\">Governance</Link></div> : null }\n            { READY_TABS.indexOf('/token') >= 0 ? <div className={`nav-item ${selectedTab === '/token' ? 'selected' : ''}`}><Link to=\"/token\">Token</Link></div> : null }\n          </div>\n          <div className={`${account ? 'active' : ''} profile-wrapper`}>\n            { !account && <span className=\"connect-btn\" onClick={() => onConnectWallet()}>Connect Wallet</span>}\n            { account && <span className=\"account-address\" onClick={() => toggleProfilePanel()}>{formatAccount(account)}</span> }\n            {\n              showProfilePanel ? (\n                <div className=\"profile-panel\">\n                  <div className=\"setting-wrapper\">\n                    <div className=\"setting-section-title\">SLIPPAGE</div>\n                    <div className=\"slippage-setting\">\n                      <div className={`slippage-item ${Number(slippage) === 0.1 ? 'selected' : ''}`} onClick={() => setSlippage('0.1')}>0.1%</div>\n                      <div className={`slippage-item ${Number(slippage) === 0.5 ? 'selected' : ''}`} onClick={() => setSlippage('0.5')}>0.5%</div>\n                      <div className={`slippage-item ${Number(slippage) === 1 ? 'selected' : ''}`} onClick={() => setSlippage('1.0')}>1.0%</div>\n                      <div className=\"slippage-input-wrapper\">\n                        <Input value={slippage} cls=\"slippage-input\" decimals=\"2\" placeholder={slippage} onChange={(amount) => setSlippage(amount)} />%\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"signout-btn\" onClick={() => onSignOut()}>Sign Out</div>\n                </div>\n              ) : null\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import React, { useCallback } from 'react'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport './index.css'\n\nconst InfoModal = (props) => {\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-wrapper\">\n        <div className=\"close-btn\" onClick={() => props.onCloseModal()}></div>\n        <div className={`modal-icon-${props.type} modal-icon`}></div>\n        <div className={`modal-text-${props.type} modal-text`}>{props.text}</div>\n        <div className=\"modal-extra-text\">\n        {\n          props.extraLink ? (\n            <a className=\"transaction-link\" target=\"_blank\" rel=\"noreferrer\" href={props.extraLink}>{props.extraText}</a>\n          ) : props.extraText\n        }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Modal = (props) => {\n  const { infoModal } = useMappedState((state) => ({\n    infoModal: state.modal.infoModal\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const onCloseInfoModal = () => {\n    setModal('infoModal', Object.assign({}, infoModal, { show: false }))\n  }\n\n  const buildModals = () => {\n    const modals = []\n    if (infoModal.show) {\n      modals.push(<InfoModal {...infoModal} onCloseModal={() => onCloseInfoModal()} />)\n    }\n    return modals\n  }\n\n  return (\n    <div className=\"modal-container\">\n      {buildModals()}\n    </div>\n  )\n}\n\nexport default Modal","import axios from 'axios'\nimport { API_BASE_URL } from '../config'\n\nconst instance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: { 'Content-Type': 'application/json' }\n})\n\ninstance.interceptors.response.use(\n  (response) => {\n    const res = response.data;\n    return res;\n  },\n  (error) => {\n    return Promise.reject(error);\n  },\n);\n\nexport default instance","import { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport request from './request'\n\nconst { reverseHex } = utils\n\nexport const getTokenBalance = (account, token, cb) => {\n  \n  if (token.name !== 'ONT' && token.name !== 'ONG') {\n    const param = {\n      scriptHash: token.address,\n      operation: 'balanceOf',\n      args: [\n        {\n          type: 'Address',\n          value: account,\n        },\n      ],\n    }\n    let invokeMethod = client.api.smartContract.invokeRead\n\n    if (token.ty === 2 || token.ty === 3) {\n      invokeMethod = client.api.smartContract.invokeWasmRead\n    }\n    invokeMethod(param).then((bl) => {\n      if (bl) {\n        const str = reverseHex(bl).split('').reverse()\n        let total = new BigNumber(0)\n        \n        for (let i = 0; i < str.length; i++) {\n          total = total.plus(new BigNumber(16 ** i).times(parseInt(str[i], 16)))\n        }\n        \n        cb(total.div(10 ** token.decimals).toString())\n      }\n    })\n  } else {\n    request({\n      method: 'get',\n      url: `/v2/addresses/${account}/native/balances`\n    }).then((resp) => {\n      if (resp.code === 0) {\n        const targetToken = resp.result.find((t) => t.asset_name === token.name.toLowerCase())\n        cb(targetToken.balance)\n      }\n    })\n    .catch((e) => {\n      console.log(e)\n    })\n  }\n}\n\nexport const getTokenIconDom = (token, cls = '') => {\n  if (token.id) {\n    return (\n      <div className={`token-icon-wrapper ${cls}`}>\n        {\n          token.ty === 3\n            ? token.name.split('-').slice(1).map((tokenName) => (<div key={`${token.name}-${tokenName}`} className={`token-icon-item with-drop-shadow icon-${tokenName}`} />))\n            : (<div className={`token-icon-item icon-${token.name}`} />)\n        }\n      </div>\n    )\n  }\n  return null\n}","export const handleError = (e, callback = () => {}) => {\n  try {\n    const json = JSON.parse(e)\n    if (json.Result === 'wasm contract does not exist') {\n      callback('CONTRACT_ADDRESS_ERROR')\n    }\n  } catch(error) {\n    // TODO\n  }\n}","export const PRICE_DECIMALS = 10 ** 6\nexport const SYNTH_PRICE_DECIMALS = 10 ** 12\nexport const DAI_PRICE = 1\nexport const TRANSACTION_FEE_RATE = 0.001\nexport const ASSET_STATUS = {\n  Live: '00',\n  HighLimit: '01',\n  LowLimit: '02'\n}\nexport const LEVERAGE_TYPE = {\n  Positive: '00',\n  Negative: '01'\n}","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { getTokenBalance } from '../../utils/token'\nimport Input from '../../components/input'\nimport { handleError } from '../../utils/errorHandle'\nimport { getHashString } from '../../utils/common'\nimport { PRICE_DECIMALS } from '../../utils/constants'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Transaction = () => {\n  const [pairNameKeyword, setPairNameKeyword] = useState('')\n  const [pairs, setPairs] = useState([])\n  const [tokenPair, setTokenPair] = useState({})\n  const [showPairSelectModal, setShowPairSelectModal] = useState(false)\n  const [tradeType, setTradeType] = useState('buy')\n  const [tokenBalance, setTokenBalance] = useState('-')\n  const [makes, setMakes] = useState([])\n  const [myMakes, setMyMakes] = useState([])\n  const [makeView, setMakeView] = useState('all')\n  const [price, setPrice] = useState('')\n  const [amount, setAmount] = useState('')\n  const [total, setTotal] = useState('')\n  const [pool, setPool] = useState([])\n  const [lastPrice, setLastPrice] = useState(0)\n  const [feeRate, setFeeRate] = useState(0)\n  const [isValid, setIsValid] = useState(false)\n  const { account, stopInterval, tokens, CONTRACT_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    stopInterval: state.common.stopInterval,\n    tokens: state.common.tokens,\n    CONTRACT_ADDRESS: state.gov.poolStat.pools.dex.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const setStopInterval = useCallback((stopInterval) => dispatch({ type: 'SET_STOP_INTERVAL', stopInterval }), [])\n\n  const Alert = useAlert()\n\n  const urlPairName = decodeURIComponent(getHashString(window.location.hash, 'pair') || '')\n\n  useEffect(() => {\n    if (pairs.length && !tokenPair.name) {\n      setTokenPair(pairs.find((p) => p.name === `${urlPairName}`) || pairs.find((p) => p.name === 'pDAI/UNX'))\n    }\n  }, [pairs])\n\n  useEffect(() => {\n    if (account && tokenPair.name) {\n      setTokenBalance('-')\n      getTokenBalance(account, tradeType === 'buy' ? tokenPair.tokens[1] : tokenPair.tokens[0], (bl) => {\n        setTokenBalance(bl)\n      })\n    }\n  }, [account, tokenPair, tradeType])\n\n  useEffect(() => {\n    function getMakesOfPair() {\n      if (tokenPair.name && CONTRACT_ADDRESS) {\n        try {\n          client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'get_makes_of_pair',\n            args: [\n              {\n                type: 'Long',\n                value: tokenPair.tokens[0].id\n              },\n              {\n                type: 'Long',\n                value: tokenPair.tokens[1].id\n              }\n            ]\n          })\n          .then((makeStr) => {\n            const parsedMakes = []\n            const strReader = new StringReader(makeStr)\n            const pairLastPrice = strReader.readUint128()\n    \n            for (let j = 0; j <= 1; j++) {\n              const makeCount = strReader.readNextLen()\n              for (let i = 0; i < makeCount; i++) {\n                const make = {}\n                make.make_id = strReader.readUint128()\n                make.price = strReader.readUint128()\n                make.amount = new BigNumber(strReader.readUint128()).toString()\n                make.asset_token_id = (j === 0 ? tokenPair.tokens[0].id : tokenPair.tokens[1].id)\n                make.price_token_id = (j === 0 ? tokenPair.tokens[1].id : tokenPair.tokens[0].id)\n        \n                parsedMakes.push(make)\n              }\n            }\n    \n            setLastPrice(pairLastPrice ? new BigNumber(pairLastPrice).div(PRICE_DECIMALS).toString() : 0)\n            setMakes(parsedMakes)\n          })\n          .catch((e) => {\n            handleError(e, (errorCode) => {\n              if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n                setStopInterval(true)\n              } else {\n                console.log('get makes of pair', e)\n              }\n            })\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n    getMakesOfPair()\n    const interval = !stopInterval && setInterval(getMakesOfPair, 2000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokenPair, account, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    function getUserMakes() {\n      if (account && CONTRACT_ADDRESS) {\n        try {\n          client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'get_user_makes',\n            args: [\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n          .then((makeStr) => {\n            const parsedMakes = []\n            const strReader = new StringReader(makeStr)\n            const makeCount = strReader.readNextLen()\n            for (let i = 0; i < makeCount; i++) {\n              const make = {}\n              make.address = client.api.utils.hexToAddress(strReader.read(20))\n              make.asset_token_id = strReader.readUint128()\n              make.price_token_id = strReader.readUint128()\n              make.price = strReader.readUint128()\n              make.amount = strReader.readUint128()\n              make.make_id = strReader.readUint128()\n    \n              parsedMakes.push(make)\n            }\n    \n            setMyMakes(parsedMakes)\n          })\n          .catch((e) => {\n            handleError(e, (errorCode) => {\n              if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n                setStopInterval(true)\n              } else {\n                console.log('get user makes', e)\n              }\n            })\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getUserMakes()\n    const interval = !stopInterval && setInterval(getUserMakes, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokenPair, account, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    async function getStat() {\n      if (tokens.length && CONTRACT_ADDRESS) {\n        try {\n          const statStr = await client.api.smartContract.invokeWasmRead({\n            scriptHash: CONTRACT_ADDRESS,\n            operation: 'stat',\n            args: []\n          })\n          \n          const tokenPool = []\n          const strReader = new StringReader(statStr)\n          setFeeRate(strReader.readUint128())\n          const tokenCount = strReader.readNextLen()\n  \n          for (let i = 0; i < tokenCount; i++) {\n            const token = {}\n            token.id = strReader.readUint128()\n            const tempToken = tokens.find((t) => t.id === token.id)\n            token.balance = new BigNumber(strReader.readUint128()).div(new BigNumber(10 ** tempToken.decimals)).toString()\n  \n            tokenPool.push(Object.assign(tempToken, token))\n          }\n\n          if (!pairs.length) {\n            const tokenPairs = []\n            for (let i = 0; i < tokenPool.length; i++) {\n              for (let j = i + 1; j < tokenPool.length; j++) {\n                tokenPairs.push({\n                  name: `${tokenPool[i].name}/${tokenPool[j].name}`,\n                  tokens: [tokenPool[i], tokenPool[j]]\n                })\n              }\n            }\n\n            setPairs(tokenPairs)\n          }\n\n          setPool(tokenPool)\n        } catch (e) {\n          handleError(e, (errorCode) => {\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get stat', e)\n            }\n          })\n        }\n      }\n    }\n\n    getStat()\n    const interval = setInterval(() => {\n      if (stopInterval) {\n        clearInterval(interval)\n      } else {\n        getStat()\n      }\n    }, 5000)\n    return () => clearInterval(interval)\n  }, [tokens, pairs, stopInterval, CONTRACT_ADDRESS])\n\n  useEffect(() => {\n    if (price > 0 && amount > 0) {\n      setTotal(new BigNumber(price).times(amount).toString())\n    }\n  }, [price, amount])\n\n  useEffect(() => {\n    if (price > 0) {\n      setAmount(new BigNumber(total || 0).div(price).toString())\n    }\n  }, [total])\n\n  useEffect(() => {\n    if (tokenPair.name && price > 0 && amount > 0) {\n      setIsValid(true)\n    } else {\n      setIsValid(false)\n    }\n  }, [tokenPair, amount, price])\n\n  useEffect(() => {\n    setMakeView('all')\n  }, [account])\n\n  function onChangeToUserMakeView() {\n    if (account) {\n      setMakeView('my')\n    } else {\n      Alert.show('Please Connect Wallet First')\n    }\n  }\n\n  function getMakes(type) {\n    if (tokenPair.name) {\n      const curMakes = (makeView === 'my' ? myMakes : makes)\n      if (type === 'sell') {\n        return curMakes.filter((m) => m.asset_token_id === tokenPair.tokens[0].id && m.price_token_id === tokenPair.tokens[1].id).map((m) => {\n          return (\n            <div key={m.make_id} className=\"my-make-item reverse\">\n              <div className=\"make-item-detail make-sell\">{new BigNumber(m.price).div(PRICE_DECIMALS).toString()}</div>\n              <div className=\"make-item-detail\">{new BigNumber(m.amount).div(Math.pow(10, tokenPair.tokens[0].decimals)).toString()}</div>\n              { makeView === 'my' && <div className=\"unmake-btn\" onClick={() => onUnmake(m.make_id)}>Cancel</div> }\n            </div>)\n        })\n      } else {\n        return curMakes.filter((m) => m.asset_token_id === tokenPair.tokens[1].id && m.price_token_id === tokenPair.tokens[0].id).map((m) => {\n          return (\n            <div key={m.make_id} className=\"my-make-item\">\n              <div className=\"make-item-detail make-buy\">{new BigNumber(PRICE_DECIMALS).div(m.price).toString()}</div>\n              <div className=\"make-item-detail\">{new BigNumber(m.amount).times(m.price).div(PRICE_DECIMALS).div(Math.pow(10, tokenPair.tokens[1].decimals)).toString()}</div>\n              { makeView === 'my' && <div className=\"unmake-btn\" onClick={() => onUnmake(m.make_id)}>Cancel</div> }\n            </div>)\n        })\n      }\n    }\n    return null\n  }\n\n\n\n  async function onMake() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (tokenPair.name && CONTRACT_ADDRESS) {\n      if (price <= 0) {\n        Alert.error('Price should be greater than 0')\n        return\n      }\n      if (amount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const assetToken = tradeType === 'buy' ? tokenPair.tokens[1] : tokenPair.tokens[0]\n        const priceToken = tradeType === 'buy' ? tokenPair.tokens[0] : tokenPair.tokens[1]\n        const tradePrice = tradeType === 'buy' ? new BigNumber(1).div(price).toString() : price\n        const tradeAmount = tradeType === 'buy' ? total : amount\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: assetToken.id\n          },\n          {\n            type: 'Long',\n            value: priceToken.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(tradePrice).times(PRICE_DECIMALS).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(tradeAmount).times(new BigNumber(10 ** assetToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const makeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: CONTRACT_ADDRESS,\n          operation: 'make',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (makeResult.transaction) {\n          setAmount('')\n          setPrice('')\n          setTotal('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${makeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onUnmake(makeId) {\n    if (account && makeId && CONTRACT_ADDRESS) {\n      try {\n        const unmakeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: CONTRACT_ADDRESS,\n          operation: 'unmake',\n          args: [\n            {\n              type: 'Address',\n              value: account\n            },\n            {\n              type: 'Long',\n              value: makeId\n            }\n          ],\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n        if (unmakeResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${unmakeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function getPriceHint() {\n    if (tokenPair.name) {\n      return tokenPair.tokens[1].name\n    }\n  }\n\n  function getAmountHint() {\n    if (tokenPair.name) {\n      return tokenPair.tokens[0].name\n    }\n  }\n\n  function generateTokenPool() {\n    if (pool.length) {\n      return pool.filter((tp) => Number(tp.balance) !== 0).map((tp) => {\n        return (\n          <div className=\"pool-item\" key={tp.name}>\n            <div className={`icon-${tp.name} token-name`}>{tp.name}</div>\n            <div className=\"token-balance\">{tp.balance}</div>\n          </div>\n        )\n      })\n    }\n  }\n\n  const handlePairClick = (pair) => {\n    setTokenPair(pair)\n    setShowPairSelectModal(false)\n  }\n\n  return (\n    <div className=\"swap-wrapper\">\n      <div className=\"trade-container\">\n        <div className=\"make-wrapper\">\n          <div className=\"container-header\">Trade\n            {\n              tokenPair.name ? (\n                <div className=\"token-pair-select\" onClick={() => setShowPairSelectModal(true)}>\n                  <div className=\"token-pair-name\">{tokenPair.name}</div>\n                </div>\n              ) : null\n            }\n          </div>\n          <div className=\"trade-type-switch\">\n            <div className={`trade-type-item ${tradeType === 'buy' ? 'trade-buy' : ''}`} onClick={() => setTradeType('buy')}>Buy</div>\n            <div className={`trade-type-item ${tradeType === 'sell' ? 'trade-sell' : ''}`} onClick={() => setTradeType('sell')}>Sell</div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Price\n              <span className=\"hint\">{getPriceHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={price} decimals=\"9\" onChange={(amount) => setPrice(amount)} />\n            </div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Amount\n              <span className=\"hint\">{getAmountHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={amount} decimals={tokenPair.tokens ? tokenPair.tokens[0].decimals : '9'} onChange={(amount) => setAmount(amount)} />\n            </div>\n          </div>\n          <div className=\"form-item\">\n            <div className=\"item-title\">Total {tradeType === 'buy' ? 'Need' : 'Receive'}\n              <span className=\"hint\">{getPriceHint()}</span>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input placeholder=\"0.0\" value={total} decimals=\"9\" onChange={(amount) => setTotal(amount)} />\n            </div>\n          </div>\n          { tokenPair.name ? <div className=\"balance-line\">Balance: <span>{tokenBalance} {tradeType === 'buy' ? tokenPair.tokens[1].name : tokenPair.tokens[0].name}</span></div> : null }\n          { feeRate ? <p className=\"fee-rate\">* The fee rate of transaction is {feeRate / 100}%</p> : null }\n          { isValid ? <div className={`make-btn make-btn-${tradeType}`} onClick={() => onMake()}>{tradeType.toUpperCase()} {tokenPair.tokens[0].name}</div> : <div className=\"make-btn disabled\">{tradeType.toUpperCase()} {tokenPair.tokens ? tokenPair.tokens[0].name : ''}</div> }\n        </div>\n        <div className=\"trade-panel\">\n          <div className=\"panel-header\">\n            <div className=\"panel-title\">Order Book</div>\n            <div className=\"tabs\">\n              <div className={makeView === 'all' ? \"tab-wrapper selected\" : \"tab-wrapper\"} onClick={() => setMakeView('all')}>All</div>\n              <div className={makeView === 'my' ? \"tab-wrapper selected\" : \"tab-wrapper\"} onClick={() => onChangeToUserMakeView()}>My</div>\n            </div>\n          </div>\n          <div className=\"list-title\">\n            <div className=\"blank-placeholder\"></div>\n            <div className=\"title-items\">\n              <div className=\"item-text\">Price ({getPriceHint()})</div>\n              <div className=\"item-text\">Amount ({getAmountHint()})</div>\n              { makeView === 'my' && <div className=\"item-placeholder\"></div> }\n            </div>\n          </div>\n          <div className=\"sell-section\">\n            <div className=\"section-title\">Sell</div>\n            <div className=\"make-list reverse\">\n            {getMakes('sell')}\n            </div>\n          </div>\n          {\n            (makeView === 'all' && Number(lastPrice) !== 0) ? <div className=\"last-price-wrapper\">\n              <div className=\"last-price-label\">Last Price</div>\n              <div className=\"last-price\">{lastPrice}</div>\n              <div className=\"last-price-placeholder\"></div>\n            </div> : null\n          }\n          <div className=\"buy-section\">\n            <div className=\"section-title\">Buy</div>\n            <div className=\"make-list\">\n            {getMakes('buy')}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"token-pool\">\n        <div className=\"container-header\">Token Balance</div>\n        <div className=\"pool-items\">\n        {generateTokenPool()}\n        </div>\n      </div>\n      {\n        showPairSelectModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => setShowPairSelectModal(false)}></div>\n              <div className=\"pair-select-modal-wrapper\">\n                <div className=\"pair-select-modal-title\">Select</div>\n                <input type=\"text\" className=\"pair-select-modal-input\" value={pairNameKeyword} onInput={(e) => setPairNameKeyword(e.target.value)} />\n                <div className=\"pair-select-modal-list\">\n                  {\n                    pairs.filter((p) => {\n                      const nameLC = p.name.toLowerCase()\n                      const tNames = pairNameKeyword.split(' ').filter((n) => n)\n                      \n                      return tNames.reduce((a, b) => a && nameLC.indexOf(b) >= 0, true)\n                    }).map((p) => {\n                      return (\n                        <div key={p.name} className=\"pair-select-modal-list-item\" onClick={() => handlePairClick(p)}>\n                          {\n                            p.tokens.map((t) => <div key={`${p.name}-${t.name}`} className={`pair-select-modal-list-item-icon icon-${t.name}`}></div>)\n                          }\n                          <div className=\"pair-select-modal-list-item-name\">{p.name}</div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n    </div>\n  )\n}\n\nexport default Transaction","import React, { useState, useEffect } from 'react'\nimport { useMappedState } from 'redux-react-hook';\nimport Select, { components } from 'react-select'\nimport Input from '../input'\nimport { getTokenBalance } from '../../utils/token'\n\nimport './index.css'\n\nconst TokenInput = (props) => {\n  const { cls, value, round, tokens, defaultTokenId, inputDisabled = false, showBalance = true, withMax = true, onTokenChange, onAmountChange, balanceChange = 0 } = props\n  const [token, setToken] = useState({})\n  const [balance, setBalance] = useState('-')\n  const { account } = useMappedState((state) => ({\n    account: state.wallet.account\n  }))\n\n  useEffect(() => {\n    if (account && showBalance && token.id) {\n      getTokenBalance(account, token, setBalance)\n    }\n  }, [tokens, token, showBalance, account, balanceChange])\n\n  const handleTokenChange = (e) => {\n    if (e.value !== token.id) {\n      const newToken = tokens.find((t) => t.id === e.value)\n\n      setToken(newToken)\n      typeof onTokenChange === 'function' && onTokenChange(newToken)\n    }\n  }\n\n  const renderTokenSeletion = (defaultId) => {\n    if (tokens.length) {\n      const CustomOption = (props) => {\n        const label = props.label.split(' ')[0]\n        return (\n          <components.Option {...props}>\n            <div className=\"option-wrapper\">\n              <div className={`icon-${label} option-icon`}></div>\n              <div className=\"option-label\">{props.label}</div>\n            </div>\n          </components.Option>\n        )\n      }\n      const SingleValue = ({ children, ...props }) => {\n        const label = children.split(' ')[0]\n        return (\n          <components.SingleValue {...props}>\n            <div className=\"option-wrapper\">\n              <div className={`icon-${label} option-icon`}></div>\n              <div className=\"option-label\">{children}</div>\n            </div>\n          </components.SingleValue>\n        )\n      }\n      let defaultToken = defaultId ? (tokens.find((t) => t.id === defaultId) || tokens[0]) : tokens[0]\n\n      if (!token.id || !tokens.find((t) => t.id === token.id)) {\n        setToken(defaultToken)\n      }\n\n      return (\n        <Select\n          className={`token-select ${cls}`}\n          defaultValue={defaultToken}\n          options={tokens}\n          isSearchable={false}\n          components={{ Option: CustomOption, SingleValue }}\n          onChange={(e) => handleTokenChange(e)}\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            colors: {\n              ...theme.colors,\n              primary: '#2c2c2c',\n            },\n          })}\n        />\n      )\n    }\n  }\n\n  const maxInput = () => {\n    if (!isNaN(balance) && typeof onAmountChange === 'function') {\n      onAmountChange(balance)\n    }\n  }\n\n  return (\n    <div className=\"token-input-wrapper\">\n      <div className=\"input-label\">{props.label || 'Input'}\n        { showBalance ? <span className=\"hint\">Balance: {balance}</span> : null }\n      </div>\n      <div className=\"input-wrapper\">\n        { renderTokenSeletion(defaultTokenId) }\n        <Input decimals={token.decimals} disabled={inputDisabled} value={value} round={round} onChange={(value) => onAmountChange(value)} />\n        { withMax && <div className=\"input-max-btn\" onClick={() => maxInput()}>MAX</div> }\n      </div>\n    </div>\n  )\n}\n\nexport default TokenInput\n","import { useEffect, useCallback } from 'react'\nimport { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\n\nconst { StringReader, reverseHex } = utils\n\nexport const useFetchPairs = () => {\n  const { account, tokens, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setSwapTokens = useCallback((tokens) => dispatch({ type: 'SET_SWAP_TOKENS', tokens }), [])\n  const setPairs = useCallback((pairs) => dispatch({ type: 'SET_PAIRS', pairs }), [])\n\n  useEffect(() => {\n    getSwapStat()\n    let interval = setInterval(getSwapStat, 3000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, tokens, swapTokens, SWAP_ADDRESS])\n\n  function getSwapStat() {\n    if (SWAP_ADDRESS) {\n      try {\n        client.api.smartContract.invokeWasmRead({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'stat',\n          args: []\n        })\n        .then((pairStr) => {\n          const parsedPairs = []\n          const strReader = new StringReader(pairStr)\n          const pairCount = strReader.readNextLen()\n          for (let i = 0; i < pairCount; i++) {\n            const pair = {}\n            pair.address = reverseHex(strReader.read(20))\n            pair.token1 = strReader.readUint128()\n            pair.token2 = strReader.readUint128()\n            pair.id = strReader.readUint128()\n            pair.reserve1 = strReader.readUint128()\n            pair.reserve2 = strReader.readUint128()\n            pair.lp = strReader.readUint128()\n\n            parsedPairs.push(pair)\n          }\n\n          const tokenIds = []\n          const tokenCount = strReader.readNextLen()\n          for (let i = 0; i < tokenCount; i++) {\n            tokenIds.push(strReader.readUint128())\n          }\n\n          setPairs(parsedPairs)\n          if (tokens.length && !swapTokens.length) {\n            setSwapTokens(tokenIds.map((t) => tokens.find((tk) => tk.id === t)))\n          }\n        })\n        .catch((e) => {\n          console.log(e)\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  return null\n}","import BigNumber from 'bignumber.js'\n\nconst REST = 0.997\n\nexport const findAllPaths = (pairs, sourceId, targetId) => {\n  let pathArr = []\n  const findPath = (sourceId, targetId, pathNodes = []) => {\n    pathNodes = [...pathNodes]\n    pathNodes.push(sourceId)\n\n    if (sourceId === targetId) {\n      pathArr.push(pathNodes)\n      return\n    }\n\n    let neighborNodes = []\n    pairs.map((p) => {\n      if (p.token1 === sourceId) {\n        neighborNodes.push(p.token2)\n      } else if (p.token2 === sourceId) {\n        neighborNodes.push(p.token1)\n      }\n    })\n\n    for (let id of neighborNodes) {\n      if (!pathNodes.includes(id)) {\n        findPath(id, targetId, pathNodes)\n      }\n    }\n  }\n\n  findPath(sourceId, targetId)\n\n  pathArr.sort((p1, p2) => {\n    return p1.length - p2.length\n  })\n  \n  return pathArr\n}\n\nconst getInputAmount = (output, pair, reverse = false) => {\n  let amount\n  if (reverse) {\n    amount = new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(pair.reserve1).minus(output)).minus(pair.reserve2).div(REST).integerValue(BigNumber.ROUND_CEIL).toString()\n    // amount = (pair.reserve1 * pair.reserve2 / (pair.reserve1 - output) - pair.reserve2) / REST\n  } else {\n    amount = new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(pair.reserve2).minus(output)).minus(pair.reserve1).div(REST).integerValue(BigNumber.ROUND_CEIL).toString()\n    // amount = (pair.reserve1 * pair.reserve2 / (pair.reserve2 - output) - pair.reserve1) / REST\n  }\n  return amount\n}\n\nconst getOutputAmount = (input, pair, reverse = false) => {\n  let amount\n  if (reverse) {\n    amount = new BigNumber(pair.reserve1).minus(new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(input).times(REST).plus(pair.reserve2))).integerValue(BigNumber.ROUND_FLOOR).toString()\n    // amount = pair.reserve1 - pair.reserve1 * pair.reserve2 / (pair.reserve2 + REST * input)\n  } else {\n    amount = new BigNumber(pair.reserve2).minus(new BigNumber(pair.reserve1).times(pair.reserve2).div(new BigNumber(input).times(REST).plus(pair.reserve1))).integerValue(BigNumber.ROUND_FLOOR).toString()\n    // amount = pair.reserve2 - pair.reserve1 * pair.reserve2 / (pair.reserve1 + REST * input)\n  }\n  return amount\n}\n\nconst findNextOutput = (input, pairs, token1, token2) => {\n  let pair = pairs.find((p) => p.token1 === token1 && p.token2 === token2)\n\n  if (pair) {\n    return getOutputAmount(input, pair)\n  }\n\n  pair = pairs.find((p) => p.token1 === token2 && p.token2 === token1)\n\n  if (pair) {\n    return getOutputAmount(input, pair, true)\n  }\n}\n\nconst findPrevInput = (output, pairs, token1, token2) => {\n  let pair = pairs.find((p) => p.token1 === token1 && p.token2 === token2)\n\n  if (pair) {\n    return getInputAmount(output, pair)\n  }\n\n  pair = pairs.find((p) => p.token1 === token2 && p.token2 === token1)\n\n  if (pair) {\n    return getInputAmount(output, pair, true)\n  }\n}\n\nexport const bestSwap = (type = 'exactin', amount, pairs, token1, token2) => {\n  const paths = findAllPaths(pairs, token1, token2)\n  const originAmount = amount\n  let maxOutput = 0\n  let minInput = Infinity\n  let path = []\n  \n  for (let i = 0; i < paths.length; i++) {\n    amount = originAmount\n    if (type === 'exactin') {\n      for (let j = 0; j < paths[i].length - 1; j++) {\n        amount = findNextOutput(amount, pairs, paths[i][j], paths[i][j + 1])\n      }\n  \n      if (amount > maxOutput) {\n        maxOutput = amount\n        path = paths[i]\n      }\n    } else {\n      for (let j = paths[i].length - 1; j > 0; j--) {\n        amount = findPrevInput(amount, pairs, paths[i][j - 1], paths[i][j])\n      }\n  \n      if (amount < minInput && amount > 0) {\n        minInput = amount\n        path = paths[i]\n      }\n    }\n  }\n\n  if (type === 'exactin') {\n    return [maxOutput, path]\n  } else if (type === 'exactout') {\n    return [minInput, path]\n  }\n}\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport TokenInput from '../../components/tokenInput'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport { toLocaleFixed } from '../../utils/common'\nimport { bestSwap } from '../../utils/swap'\nimport './index.css'\n\nconst Swap = () => {\n  const [swapType, setSwapType] = useState('exactin')\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState('')\n  const [token2Amount, setToken2Amount] = useState('')\n  const [isValidPair, setIsValidPair] = useState(false)\n  const [isValidSwap, setIsValidSwap] = useState(false)\n  const [bestPath, setBestPath] = useState([])\n  const [showPrice, setShowPrice] = useState(false)\n  const [balanceChange, setBalanceChange] = useState(0)\n  const { account, slippage, pairs, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    pairs: state.swap.pairs,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (token1.id !== token2.id && token1Amount > 0 && token2Amount > 0 && bestPath.length) {\n      setShowPrice(true)\n      setIsValidSwap(true)\n    } else {\n      setShowPrice(false)\n      setIsValidSwap(false)\n    }\n  }, [token1, token2, token1Amount, token2Amount, bestPath])\n\n  useEffect(() => {\n    if (swapTokens.length) {\n      setToken1(swapTokens.find((st) => st.name === 'pDAI'))\n      setToken2(swapTokens.find((st) => st.name === 'UNX'))\n    }\n  }, [swapTokens])\n\n  useEffect(() => {\n    if (token1.id && token2.id && validPair(token1.id, token2.id)) {\n      setIsValidPair(true)\n    } else {\n      setIsValidPair(false)\n    }\n  }, [token1, token2])\n\n  function validPair(token1, token2) {\n    if (pairs.length) {\n      if (token1 && token2 && pairs.find((p) => (p.token1 === token1 && p.token2 === token2) || (p.token1 === token2 && p.token2 === token1))) {\n        return true\n      }\n    }\n    return false\n  }\n\n  function onChangeToken1(token) {\n    if (token.id !== token1.id) {\n      setToken1(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onChangeToken2(token) {\n    if (token.id !== token2.id) {\n      setToken2(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onToken1AmountChange(amount) {\n    if (amount !== token1Amount) {\n      setSwapType('exactin')\n      setToken1Amount(amount)\n      if (pairs.length && amount) {\n        const inputAmount = amount * (10 ** token1.decimals)\n        const [maxOutput, path] = bestSwap('exactin', inputAmount, pairs, token1.id, token2.id)\n\n        setToken2Amount(new BigNumber(maxOutput).div(10 ** token2.decimals).toString())\n        setBestPath(path)\n      } else if (Number(amount) === 0) {\n        setToken2Amount('')\n      }\n    }\n  }\n\n  function onToken2AmountChange(amount) {\n    if (amount !== token2Amount) {\n      setSwapType('exactout')\n      setToken2Amount(amount)\n      if (pairs.length && amount) {\n        const outputAmount = amount * (10 ** token2.decimals)\n        const [minInput, path] = bestSwap('exactout', outputAmount, pairs, token1.id, token2.id)\n\n        if (minInput === Infinity) {\n          setToken1Amount('')\n        } else {\n          setToken1Amount(new BigNumber(minInput).div(10 ** token1.decimals).toString())\n        }\n        setBestPath(path)\n      } else if (Number(amount) === 0) {\n        setToken1Amount('')\n      }\n    }\n  }\n\n  function onNavigateToPool() {\n    history.push('/pool')\n  }\n\n  async function handleSwap() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (token1Amount <= 0 || token2Amount <= 0) {\n      Alert.error('Amount should be greater than 0')\n      return\n    }\n    if (token1.id && token1.id === token2.id) {\n      Alert.error('Input should be different')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Array',\n            value: bestPath.map((p) => ({ type: 'Long', value: p }))\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const swapResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: swapType === 'exactin' ? 'swap_exact_tokens_for_tokens' : 'swap_tokens_for_exact_tokens',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (swapResult.transaction) {\n          setBalanceChange(balanceChange + 1)\n          setToken1Amount('')\n          setToken2Amount('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${swapResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function getPrice() {\n    return `${toLocaleFixed(token2Amount / token1Amount, 6)} ${token2.name} per ${token1.name}`\n  }\n\n  function getMinReceiveOrMaxSold() {\n    if (swapType === 'exactin') {\n      return <p>Minimum Received:<span>{toLocaleFixed(token2Amount * (1 - slippage / 100), 6)} {token2.name}</span></p>\n    } else {\n      return <p>Maximum Sold:<span>{toLocaleFixed(token1Amount * (1 + slippage / 100), 6)} {token1.name}</span></p>\n    }\n  }\n\n  function getPriceImpact() {\n    let price\n    let pair = pairs.find((p) => p.token1 === token1.id && p.token2 === token2.id)\n\n    if (pair) {\n      price = (pair.reserve2 / (10 ** token2.decimals)) / (pair.reserve1 / (10 ** token1.decimals))\n    } else {\n      pair = pairs.find((p) => p.token1 === token2.id && p.token2 === token1.id)\n\n      if (pair) {\n        price = (pair.reserve1 / (10 ** token1.decimals)) / (pair.reserve2 / (10 ** token2.decimals))\n      }\n    }\n\n    return <p>Price Impact:<span>{Math.abs((token2Amount / token1Amount - price) / price * 100).toFixed(2)}%</span></p>\n  }\n\n  function getBestPath() {\n    if (bestPath.length) {\n      const items = []\n      bestPath.map((t, index) => {\n        const token = swapTokens.find((tk) => tk.id === t)\n        index > 0 && items.push((<div className=\"icon-arrow-right\"></div>))\n        items.push((<div className={`path-icon icon-${token.name}`}>{token.name}</div>))\n\n        return t\n      })\n\n      return items\n    }\n  }\n\n  return (\n    <div className=\"sw-wrapper\">\n      <div className=\"sw-container\">\n        <div className=\"sw-tabs\">\n          <div className=\"sw-tab active\">Swap</div>\n          <div className=\"sw-tab\" onClick={() => onNavigateToPool()}>Pool</div>\n        </div>\n        <div className=\"sw-content\">\n          <TokenInput\n            balanceChange={balanceChange}\n            label=\"From\"\n            tokens={swapTokens}\n            value={token1Amount}\n            round='up'\n            defaultTokenId={swapTokens.length && swapTokens.find((st) => st.name === 'pDAI').id}\n            onTokenChange={(token) => onChangeToken1(token)}\n            onAmountChange={(amount) => onToken1AmountChange(amount)} />\n          <div className=\"icon-arrow-down\"></div>\n          <TokenInput\n            balanceChange={balanceChange}\n            label=\"To\"\n            tokens={swapTokens}\n            value={token2Amount}\n            round='down'\n            defaultTokenId={swapTokens.length && swapTokens.find((st) => st.name === 'UNX').id}\n            onTokenChange={(token) => onChangeToken2(token)}\n            onAmountChange={(amount) => onToken2AmountChange(amount)} />\n          { showPrice ? <div className=\"sw-price-wrapper\">Price<span className=\"sw-price-info\">{getPrice()}</span></div> : null }\n          { isValidPair ? null : <div className=\"add-liquidity-hint\">Add liquidity to enable swaps for this pair.</div> }\n          { isValidPair ? ( isValidSwap ? <div className=\"sw-swap-btn\" onClick={() => handleSwap()}>Swap</div> : <div className=\"sw-swap-btn disabled\">Swap</div> ) : <div className=\"sw-swap-btn disabled\">Invalid Liquidity</div> }\n        </div>\n        {\n          isValidPair && isValidSwap ? (\n            <div className=\"sw-hint-wrapper\">\n              <div className=\"sw-input-output\">{getMinReceiveOrMaxSold()}</div>\n              <div className=\"sw-price-impact\">{getPriceImpact()}</div>\n              <div className=\"sw-best-path\">\n                <p>Route:</p>\n                <div className=\"sw-best-path-list\">\n                  {getBestPath()}\n                </div>\n              </div>\n            </div>\n          ) : null\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Swap\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState } from 'redux-react-hook';\nimport { utils } from 'ontology-ts-sdk'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Pool = () => {\n  const [liquidityBalance, setLiquidityBalance] = useState([])\n  const { account, tokens, pairs, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (account && pairs.length && SWAP_ADDRESS) {\n      const getLiquidityBalanceByPairId = (id) => {\n        return client.api.smartContract.invokeWasmRead({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'balanceOf',\n          args: [\n            {\n              type: 'Long',\n              value: id\n            },\n            {\n              type: 'Address',\n              value: account\n            }\n          ]\n        }).then((resp) => {\n          const strReader = new StringReader(resp)\n          const balance = strReader.readUint128()\n          \n          return { [id]: balance }\n        })\n      }\n      Promise.all(pairs.map((p) => getLiquidityBalanceByPairId(p.id))).then((resp) => {\n        setLiquidityBalance(resp)\n      })\n    }\n  }, [account, pairs, SWAP_ADDRESS])\n\n  function onNavigateToSwap() {\n    history.push('/swap')\n  }\n\n  function onNavigateToAddLiquidity() {\n    history.push('/pool/add')\n  }\n\n  function onRemoveLiquidity(pairId) {\n    history.push(`/pool/remove/${pairId}`)\n  }\n\n  function generateLiquidityList() {\n    const myLiquidities = liquidityBalance.filter((l) => l[Object.keys(l)[0]])\n    if (myLiquidities.length && pairs.length && tokens.length) {\n      return myLiquidities.map((lb) => {\n        const pairId = Object.keys(lb)[0]\n        const pair = pairs.find((p) => `${p.id}` === pairId)\n        const token1 = tokens.find((t) => t.id === pair.token1)\n        const token2 = tokens.find((t) => t.id === pair.token2)\n        const balance = lb[pairId] / (10 ** 18)\n        const shareOfPool = Math.sqrt(Math.pow(balance, 2) / (pair.reserve1 * pair.reserve2 / (10 ** (token1.decimals + token2.decimals))))\n        const token1Amount = (pair.reserve1 * shareOfPool / (10 ** token1.decimals)).toFixed(token1.decimals)\n        const token2Amount = (pair.reserve2 * shareOfPool / (10 ** token2.decimals)).toFixed(token2.decimals)\n        \n        return (\n          <div className=\"pool-liquidity-item\">\n            <div className=\"liquidity-item-detail\">\n              <div className={`token-icon icon-${token1.name}`}></div>\n              <div className={`token-icon icon-${token2.name}`}></div>\n              <div className=\"token-pair\"><strong>{token1.name}/{token2.name}</strong></div>\n              <div className=\"pair-position\"><strong>Pooled</strong>: {token1Amount} / {token2Amount}</div>\n              <div className=\"pool-tokens\"><strong>Pool Tokens</strong>: {balance.toFixed(9)}</div>\n            </div>\n            <div className=\"remove-liquidity-btn\" onClick={() => onRemoveLiquidity(pairId)}>Remove</div>\n          </div>\n        )\n      })\n    } else {\n      return <div className=\"pool-empty-lp\">No Liquidities</div>\n    }\n  }\n\n  return (\n    <div className=\"pool-wrapper\">\n      <div className=\"pool-container\">\n        <div className=\"sw-tabs\">\n          <div className=\"sw-tab\" onClick={() => onNavigateToSwap()}>Swap</div>\n          <div className=\"sw-tab active\">Pool</div>\n        </div>\n        <div className=\"pool-content\">\n          <div className=\"pool-add-liquidity-btn\" onClick={() => onNavigateToAddLiquidity()}>Add Liquidity</div>\n          <div className=\"pool-liquidity-list\">\n            <div className=\"my-liquidity\">Your Liquidity</div>\n            {generateLiquidityList()}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Pool","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport TokenInput from '../../../components/tokenInput'\nimport { useFetchPairs } from '../../../hooks/usePair';\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\nimport './index.css'\n\nconst AddLiquidity = () => {\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState('')\n  const [token2Amount, setToken2Amount] = useState('')\n  const [isValidPair, setIsValidPair] = useState(true)\n  const [isFirstProvider, setIsFirstProvider] = useState(false)\n  const [showPriceInfo, setShowPriceInfo] = useState(false)\n  const [balanceChange, setBalanceChange] = useState(0)\n  const { account, slippage, pairs, swapTokens, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    pairs: state.swap.pairs,\n    swapTokens: state.swap.tokens,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (!token1.id || !token2.id || (token1.id === token2.id)) {\n      setIsValidPair(false)\n    } else {\n      setIsValidPair(true)\n    }\n  }, [token1, token2])\n\n  useEffect(() => {\n    const pair = getPairByToken()\n    if (token1.id && token2.id && token1.id != token2.id && (!pairs.length || !pair || (pair.reserve1 === 0 && pair.reserve2 === 0))) {\n      setIsFirstProvider(true)\n    } else {\n      setIsFirstProvider(false)\n    }\n  }, [pairs, token1, token2])\n\n  useEffect(() => {\n    if (token1.id && token2.id) {\n      setShowPriceInfo(true)\n    } else {\n      setShowPriceInfo(false)\n    }\n  }, [pairs, token1, token2, token1Amount, token2Amount])\n\n  useEffect(() => {\n    if (swapTokens.length) {\n      setToken1(swapTokens.find((st) => st.name === 'pDAI'))\n      setToken2(swapTokens.find((st) => st.name === 'UNX'))\n    }\n  }, [account, swapTokens])\n\n  function getPairByToken() {\n    return pairs.find((p) => (p.token1 === token1.id && p.token2 === token2.id) || (p.token1 === token2.id && p.token2 === token1.id))\n  }\n\n  function onChangeToken1(token) {\n    if (token.id !== token1.id) {\n      setToken1(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onChangeToken2(token) {\n    if (token.id !== token2.id) {\n      setToken2(token)\n      setToken1Amount('')\n      setToken2Amount('')\n    }\n  }\n\n  function onToken1AmountChange(amount) {\n    setToken1Amount(amount)\n    if (!isFirstProvider) {\n      if (amount) {\n        setToken2Amount(Math.ceil(amount * getPairPrice() * (10 ** token2.decimals)) / (10 ** token2.decimals))\n      } else if (Number(amount) === 0) {\n        setToken2Amount('')\n      }\n    }\n  }\n\n  function onToken2AmountChange(amount) {\n    setToken2Amount(amount)\n    if (!isFirstProvider) {\n      if (amount) {\n        setToken1Amount(Math.ceil(amount / getPairPrice() * (10 ** token1.decimals)) / (10 ** token1.decimals))\n      } else if (Number(amount) === 0) {\n        setToken1Amount('')\n      }\n    }\n  }\n\n  function getPairPrice() {\n    if (token1.id && token2.id && pairs.length) {\n      if (isFirstProvider && token1Amount && token2Amount) {\n        return token2Amount / token1Amount\n      }\n      let pair = pairs.find((p) => p.token1 === token1.id && p.token2 === token2.id)\n      if (pair) {\n        return pair.reserve1 ? (pair.reserve2 / (10 ** token2.decimals)) / (pair.reserve1 / (10 ** token1.decimals)) : 0\n      }\n      pair = pairs.find((p) => p.token1 === token2.id && p.token2 === token1.id)\n      if (pair) {\n        return pair.reserve2 ? (pair.reserve1 / (10 ** token1.decimals)) / (pair.reserve2 / (10 ** token2.decimals)) : 0\n      }\n    }\n\n    return 0\n  }\n\n  function getShareOfPool() {\n    if (isFirstProvider) {\n      return '100%'\n    } else {\n      const pair = getPairByToken()\n      const amountProduct = token1Amount * (10 ** token1.decimals) * token2Amount * (10 ** token2.decimals)\n\n      if (pair) {\n        return `${(amountProduct / (amountProduct + pair.reserve1 * pair.reserve2) * 100).toFixed(2)}%`\n      }\n      return `0%`\n    }\n  }\n\n  function onNavigateToPool() {\n    history.goBack()\n  }\n\n  async function onAdd() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (token1Amount <= 0 || token2Amount <= 0) {\n      Alert.error('Amount should be greater than 0')\n      return\n    }\n    if (token1.id && token1.id === token2.id) {\n      Alert.error('Input should be different')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: token1.id\n          },\n          {\n            type: 'Long',\n            value: token2.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(new BigNumber(10 ** token1.decimals)).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(new BigNumber(10 ** token2.decimals)).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const addResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'add_liquidity',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (addResult.transaction) {\n          setBalanceChange(balanceChange + 1)\n          setToken1Amount('')\n          setToken2Amount('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${addResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"add-liquidity-wrapper\">\n      <div className=\"al-header\">Add Liquidity\n        <div className=\"back-icon\" onClick={() => onNavigateToPool()}></div>\n      </div>\n      <div className=\"al-wrapper\">\n        {\n          isValidPair && isFirstProvider ? (\n            <div className=\"first-provider-hint\">\n              <div><strong>You are the first liquidity provider.</strong><br /><br />The ratio of tokens you add will set the price of this pool.</div>\n            </div>\n          ) : null\n        }\n        <TokenInput\n          balanceChange={balanceChange}\n          tokens={swapTokens}\n          value={token1Amount}\n          defaultTokenId={swapTokens.length && swapTokens.find((st) => st.name === 'pDAI').id}\n          onTokenChange={(token) => onChangeToken1(token)}\n          onAmountChange={(amount) => onToken1AmountChange(amount)} />\n        <div className=\"icon-plus\"></div>\n        <TokenInput\n          balanceChange={balanceChange}\n          tokens={swapTokens}\n          value={token2Amount}\n          defaultTokenId={swapTokens.length && swapTokens.find((st) => st.name === 'UNX').id}\n          onTokenChange={(token) => onChangeToken2(token)}\n          onAmountChange={(amount) => onToken2AmountChange(amount)} />\n        {\n          isValidPair && showPriceInfo ? (\n            <div className=\"al-price-wrapper\">\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{getPairPrice().toFixed(4)}</div>\n                <div className=\"price-item-label\">{token2.name} per {token1.name}</div>\n              </div>\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{(getPairPrice() ? 1 / getPairPrice() : 0).toFixed(4)}</div>\n                <div className=\"price-item-label\">{token1.name} per {token2.name}</div>\n              </div>\n              <div className=\"al-price-item\">\n                <div className=\"price-item-detail\">{getShareOfPool()}</div>\n                <div className=\"price-item-label\">Share of Pool</div>\n              </div>\n            </div>\n          ) : null\n        }\n        <div className=\"al-add-btn\" onClick={() => onAdd()}>Add</div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddLiquidity\n","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { utils } from 'ontology-ts-sdk'\nimport { useAlert } from 'react-alert'\nimport BigNumber from 'bignumber.js'\nimport Slider from 'rc-slider'\nimport { useFetchPairs } from '../../../hooks/usePair';\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\nimport 'rc-slider/assets/index.css'\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst RemoveLiquidity = () => {\n  const [liquidityBalance, setLiquidityBalance] = useState(0)\n  const [token1, setToken1] = useState({})\n  const [token2, setToken2] = useState({})\n  const [token1Amount, setToken1Amount] = useState(0)\n  const [token2Amount, setToken2Amount] = useState(0)\n  const [pair, setPair] = useState({})\n  const [amount, setAmount] = useState(0)\n  const [showPrice, setShowPrice] = useState(false)\n  const { account, slippage, tokens, pairs, SWAP_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    slippage: state.wallet.slippage,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    SWAP_ADDRESS: state.gov.poolStat.pools.swap.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n  const Alert = useAlert()\n  const history = useHistory()\n  const location = useLocation()\n  const pairId = location.pathname.match(/\\/([^/]+)$/)[1]\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (account && pairs.length && pairId) {\n      getLiquidityBalanceByPairId(pairId).then((resp) => {\n        setLiquidityBalance(resp)\n      })\n    }\n  }, [account, pairs, SWAP_ADDRESS])\n\n  useEffect(() => {\n    if (tokens.length && pairs.length && pairId) {\n      const pair = pairs.find((p) => `${p.id}` === pairId)\n      setPair(pair)\n      setToken1(tokens.find((t) => t.id === pair.token1))\n      setToken2(tokens.find((t) => t.id === pair.token2))\n      setShowPrice(true)\n    }\n  }, [pairs, tokens])\n\n  useEffect(() => {\n    if (pair && token1.id && token2.id && pairId && liquidityBalance) {\n      const balance = liquidityBalance / (10 ** 18)\n      const shareOfPool = Math.sqrt(Math.pow(balance, 2) / (pair.reserve1 * pair.reserve2 / (10 ** (token1.decimals + token2.decimals))))\n      const token1Amount = (pair.reserve1 * shareOfPool / (10 ** token1.decimals))\n      const token2Amount = (pair.reserve2 * shareOfPool / (10 ** token2.decimals))\n\n      setToken1Amount(amount / 100 * token1Amount)\n      setToken2Amount(amount / 100 * token2Amount)\n    }\n  }, [amount, pair, token1, token2])\n\n  function getLiquidityBalanceByPairId(id) {\n    if (SWAP_ADDRESS) {\n      return client.api.smartContract.invokeWasmRead({\n        scriptHash: SWAP_ADDRESS,\n        operation: 'balanceOf',\n        args: [\n          {\n            type: 'Long',\n            value: id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n      }).then((resp) => {\n        const strReader = new StringReader(resp)\n        const balance = strReader.readUint128()\n        \n        return balance\n      })\n    }\n  }\n\n  function getPairPrice() {\n    return (pair.reserve2 / (10 ** token2.decimals)) / (pair.reserve1 / (10 ** token1.decimals))\n  }\n\n  function onNavigateToPool() {\n    history.goBack()\n  }\n\n  async function onRemove() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (SWAP_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: token1.id\n          },\n          {\n            type: 'Long',\n            value: token2.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(liquidityBalance).times(amount / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token1Amount).times(10 ** token1.decimals).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(token2Amount).times(10 ** token2.decimals).times(1 - slippage / 100).integerValue(BigNumber.ROUND_UP).toString()\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const addResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SWAP_ADDRESS,\n          operation: 'remove_liquidity',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (addResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${addResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"remove-liquidity-wrapper\">\n      <div className=\"rl-header\">Remove Liquidity\n        <div className=\"back-icon\" onClick={() => onNavigateToPool()}></div>\n      </div>\n      <div className=\"rl-wrapper\">\n        <div className=\"rl-amount\">\n          <div className=\"rl-amount-label\">Amount<span>{amount}%</span></div>\n          <Slider value={amount} onChange={(e) => setAmount(e)} />\n          <div className=\"quick-items\">\n            <div className=\"quick-item\" onClick={() => setAmount(25)}>25%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(50)}>50%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(75)}>75%</div>\n            <div className=\"quick-item\" onClick={() => setAmount(100)}>Max</div>\n          </div>\n        </div>\n        <div className=\"icon-arrow-down\" />\n        <div className=\"rl-receive-wrapper\">\n          <div className={`receive-token-item icon-${token1.name}`}>\n            {token1.name}\n            <span>{token1Amount}</span>\n          </div>\n          <div className={`receive-token-item icon-${token2.name}`}>\n            {token2.name}\n            <span>{token2Amount}</span>\n          </div>\n        </div>\n        {\n          showPrice ? (\n            <div className=\"rl-price-wrapper\">\n              <div className=\"price-wrapper-lable\">Price</div>\n              <div className=\"price\">1 {token1.name} = {getPairPrice()} {token2.name}</div>\n              <div className=\"price-reverse\">1 {token2.name} = {1 / getPairPrice()} {token1.name}</div>\n            </div>\n          ) : null\n        }\n        { amount ? <div className=\"rl-remove-btn\" onClick={() => onRemove()}>Remove</div> : <div className=\"rl-remove-btn disabled\">Remove</div> }\n      </div>\n    </div>\n  )\n}\n\nexport default RemoveLiquidity","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport Tooltip from 'rc-tooltip'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport { getTokenIconDom } from '../../utils/token'\n\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst Staking = () => {\n  const [showClosed, setShowClosed] = useState(false)\n  const { account, tokens, stakingTokens, STAKING_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    stakingTokens: state.staking.tokens,\n    STAKING_ADDRESS: state.gov.poolStat.pools.staking.address\n  }))\n  const dispatch = useDispatch()\n  const setStakingTokens = useCallback((tokens) => dispatch({ type: 'SET_STAKING_TOKENS', tokens }), [])\n  const history = useHistory()\n  const Alert = useAlert()\n\n  useEffect(() => {\n    getStakingTokenBalance()\n    let interval = setInterval(() => getStakingTokenBalance, 2000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokens, STAKING_ADDRESS])\n\n  function getStakingTokenBalance() {\n    if (tokens.length && STAKING_ADDRESS) {\n      try {\n        client.api.smartContract.invokeWasmRead({\n          scriptHash: STAKING_ADDRESS,\n          operation: 'stat',\n          args: []\n        }).then((statStr) => {\n          const parsedTokens = []\n          const strReader = new StringReader(statStr)\n          const tokenCount = strReader.readNextLen()\n          for (let i = 0; i < tokenCount; i++) {\n            const token = {}\n            token.id = strReader.readUint128()\n            const tempToken = tokens.find((t) => t.id === token.id)\n            token.weight = strReader.readUint128()\n            token.balance = strReader.readUint128()\n\n            parsedTokens.push(Object.assign(tempToken, token))\n          }\n\n          const totalWeight = parsedTokens.filter((t) => t.balance).reduce((a, b) => a + b.weight, 0)\n          const filteredTokens = parsedTokens.map((t) => {\n            return {\n              ...t,\n              originWeight: t.weight,\n              weight: t.balance ? (t.weight / totalWeight) : 0\n            }\n          })\n\n          setStakingTokens(filteredTokens)\n        })\n        .catch((e) => {\n          console.log(e)\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  // useEffect(() => {\n  //   client.api.smartContract.invokeWasmRead({\n  //     scriptHash: STAKING_ADDRESS,\n  //     operation: 'staking_info',\n  //     args: []\n  //   })\n  //   .then((infoStr) => {\n  //     const info = {}\n  //     const strReader = new StringReader(infoStr)\n  //     info.amount = strReader.readUint128()\n  //     info.period = strReader.readUint128()\n  //     info.start_time = strReader.readUint128()\n  //     info.settled_time = strReader.readUint128()\n  //     info.interest = info.amount / info.period\n\n  //     setStakingInfo(info)\n  //   })\n  //   .catch((e) => {\n  //     handleError(e, (errorCode) => {\n  //       if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n  //         setStopStakingInterval(true)\n  //       } else {\n  //         console.log('get staking info', e)\n  //       }\n  //     })\n  //   })\n  // }, [])\n\n  function onSelectToken(token) {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    history.push(`/staking/${token.id}`)\n  }\n\n  function getTip(token) {\n    return `${token.name} is the hidden receipt for WING ${token.name.replace('f', '')} suppliers`\n  }\n\n  function generateStakingPool() {\n    if (stakingTokens.length) {\n      const openStakingTokens = stakingTokens.filter((t) => !!t.originWeight)\n      const closedStakingTokens = stakingTokens.filter((t) => !t.originWeight)\n\n      return (showClosed ? closedStakingTokens : openStakingTokens).map((token) => {\n        return (\n          <div className={`pool-list-item ${!showClosed ? '' : 'pool-list-item-disabled'}`} key={token.name}>\n            <div className=\"item-detail\">\n              <div className=\"item-detail-wrapper\">\n                { token.ty === 3 && <div className=\"corner-badge\">10X</div> }\n                <div className=\"staking-token\">\n                  {\n                    token.ty === 3 ? (\n                      <div className=\"staking-text\">Deposit\n                        {getTokenIconDom(token, 'stake-lp-token')}\n                      </div>\n                    ) : (\n                      <div className={`staking-text icon-${token.name}`}>Deposit</div>\n                    )\n                  }\n                  {\n                    token.name.startsWith('f') ? (\n                      <Tooltip placement=\"top\" overlay={getTip(token)}>\n                        <div className=\"staking-token-name\">{token.name}</div>\n                      </Tooltip>\n                    ) : <div className=\"staking-token-name\">{token.name}</div>\n                  }\n                </div>\n                <div className=\"earn-line\">Earn<span>UNX</span></div>\n                <div className=\"total-staking\">Total Staking<span>{new BigNumber(token.balance || 0).div(10 ** token.decimals).toString()}</span></div>\n                <div className=\"select-btn\" onClick={() => onSelectToken(token)}>{ showClosed ? 'Unstake' : 'Stake' }</div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    }\n  }\n\n  return (\n    <div className=\"stake-container\">\n      <div className=\"stake-pool\">\n        { !stakingTokens.length ? <div className=\"title\">Loading...</div> : null }\n        {\n          showClosed ? (\n            <div className=\"unstake-pool-title\">\n              <div className=\"back-icon\" onClick={() => setShowClosed(false)}></div>\n              Unstake from Closed Pool\n            </div>\n          ) : null\n        }\n        <div className=\"pool-list\">\n          {generateStakingPool()}\n        </div>\n        { !showClosed ? <div className=\"closed-pool-entrance\" onClick={() => setShowClosed(true)}>Unstake from Closed Pool</div> : null }\n      </div>\n    </div>\n  )\n}\n\nexport default Staking","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport Tooltip from 'rc-tooltip';\nimport Input from '../../../components/input'\nimport { getTokenBalance, getTokenIconDom } from '../../../utils/token'\nimport { GOVERNANCE_ADDRESS, TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../../config'\n\nimport './index.css'\n\nconst { StringReader } = utils\n\nconst StakingDetail = (props) => {\n  const [stakeToken, setStakeToken] = useState({})\n  const [tokenBalance, setTokenBalance] = useState('-')\n  const [tokenWeight, setTokenWeight] = useState(1)\n  const [amount, setAmount] = useState('')\n  const [myStake, setMyStake] = useState({})\n  const [stakeType, setStakeType] = useState('stake')\n  const [claimableWing, setClaimableWing] = useState(0)\n  const [showStakingModal, setShowStakingModal] = useState(false)\n  const { account, tokens, stakingTokens, STAKING_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    stakingTokens: state.staking.tokens,\n    STAKING_ADDRESS: state.gov.poolStat.pools.staking.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const Alert = useAlert()\n  const location = useLocation()\n  const history = useHistory()\n  const tokenId = location.pathname.match(/\\/([^/]+)$/)[1]\n\n  useEffect(() => {\n    if (stakingTokens.length) {\n      setTokenWeight(stakingTokens.find((t) => `${t.id}` === tokenId).originWeight)\n    }\n  }, [stakingTokens])\n\n  useEffect(() => {\n    if (account && tokens.length) {\n      const sToken = tokens.find((t) => `${t.id}` === tokenId)\n\n      setStakeToken(sToken)\n      getTokenBalance(account, sToken, setTokenBalance)\n    }\n  }, [tokens, account])\n\n\n  useEffect(() => {\n    const getClaimableWing = () => {\n      if (account && stakeToken.ty === 2) {\n        client.api.smartContract.invokeWasmRead({\n          scriptHash: GOVERNANCE_ADDRESS,\n          operation: 'claimable_wing',\n          args: [\n            {\n              type: 'Address',\n              value: account\n            },\n            {\n              type: 'Long',\n              value: stakeToken.id\n            }\n          ]\n        }).then((resp) => {\n          const strReader = new StringReader(resp)\n\n          setClaimableWing(strReader.readUint128())\n        })\n      }\n    }\n\n    getClaimableWing()\n    let interval = setInterval(getClaimableWing, 10000)\n\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, stakeToken])\n\n  useEffect(() => {\n    if (account && stakeToken.id && STAKING_ADDRESS) {\n      getAccountStake()\n      const interval = setInterval(getAccountStake, 10000)\n      return () => {\n        interval && clearInterval(interval)\n      }\n    }\n  }, [stakeToken, account, STAKING_ADDRESS])\n\n  useEffect(() => {\n    if (!account) {\n      setMyStake({})\n    }\n  }, [account])\n\n  function getAccountStakeByTokenId(id) {\n    return client.api.smartContract.invokeWasmRead({\n      scriptHash: STAKING_ADDRESS,\n      operation: 'account_stake_info',\n      args: [\n        {\n          type: 'Address',\n          value: account\n        },\n        {\n          type: 'Long',\n          value: id\n        }\n      ]\n    }).then((stakeStr) => {\n      const strReader = new StringReader(stakeStr)\n      return {\n        id,\n        balance: new BigNumber(strReader.readUint128() || 0).div(10 ** (stakeToken.decimals || 0)).toString(),\n        interest: strReader.readUint128()\n      }\n    })\n  }\n\n  function getAccountStake() {\n    getAccountStakeByTokenId(tokenId)\n    .then((stake) => {\n      setMyStake(stake)\n    })\n    .catch((e) => {\n      console.log('get account stakes', e)\n    })\n  }\n\n  function handleStakeClick(action) {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    setStakeType(action)\n    setShowStakingModal(true)\n  }\n\n  async function onStake() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n    if (stakeToken.id && STAKING_ADDRESS) {\n      if (amount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      if (stakeType === 'unstake' && amount > myStake.balance) {\n        Alert.error('Amount should be less than your balance')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: stakeToken.id\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(amount).times(new BigNumber(10 ** stakeToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const param = {\n          scriptHash: STAKING_ADDRESS,\n          operation: stakeType,\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        }\n\n        const stakeResult = await client.api.smartContract.invokeWasm(param)\n\n        if (stakeResult.transaction) {\n          setShowStakingModal(false)\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${stakeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setShowStakingModal(false)\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onHarvest() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (STAKING_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: stakeToken.id\n          }\n        ]\n        const param = {\n          scriptHash: STAKING_ADDRESS,\n          operation: 'harvest',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        }\n\n        const harvestResult = await client.api.smartContract.invokeWasm(param)\n\n        if (harvestResult.transaction) {\n          setShowStakingModal(false)\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${harvestResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  function onNavigateToStaking() {\n    history.goBack()\n  }\n\n  const maxInput = () => {\n    if (stakeType === 'stake' && !isNaN(tokenBalance)) {\n      setAmount(tokenBalance)\n    } else if (stakeType === 'unstake' && !isNaN(myStake.balance)) {\n      setAmount(myStake.balance)\n    }\n  }\n\n  return (\n    <div className=\"stake-container\">\n      <div className=\"stake-title\">\n        <div className=\"back-icon\" onClick={() => onNavigateToStaking()} />\n        Earn <span className=\"icon-UNX\">UNX</span> by\n        {getTokenIconDom(stakeToken, 'inline-token-wrapper')}\n        {stakeToken.name || ''}\n      </div>\n      <div className=\"stake-token-detail\">\n        <div className=\"stake-token-amount\">\n          {getTokenIconDom(stakeToken, 'stake-token-wrapper')}\n          <div className=\"stake-token-amount-detail\">\n            <div className=\"stake-token-amount-label\">Current Staked</div>\n            <div className=\"stake-token-amount-info\">{myStake.balance} {stakeToken.name}</div>\n          </div>\n        </div>\n        <div className=\"stake-token-actions\">\n          { tokenWeight ? <div className=\"stake-token-action\" onClick={() => handleStakeClick('stake')}>Stake</div> : null }\n          <div className=\"stake-token-action\" onClick={() => handleStakeClick('unstake')}>Unstake</div>\n        </div>\n      </div>\n      <div className=\"harvest-token-detail\">\n        <div className=\"harvest-token-amount icon-UNX\">\n          <div className=\"harvest-token-amount-label\">Rewards Available</div>\n          <div className=\"harvest-token-amount-info\">{new BigNumber(myStake.interest || 0).div(10 ** 9).toString()} UNX</div>\n        </div>\n        <div className=\"harvest-token-actions\">\n          <div className=\"harvest-token-action\" onClick={() => onHarvest() }>Harvest</div>\n        </div>\n      </div>\n      {\n        stakeToken.ty === 2 ? (\n          <div className=\"claimable-wing-detail\">\n            <div className=\"claimable-wing-amount icon-WING\">{new BigNumber(claimableWing || 0).div(10 ** 9).toString()}\n              <div className=\"claimable-wing-label\">WING Earned\n                <Tooltip placement=\"top\" overlay=\"WING earned by ftoken will be transferred to your account when you stake or unstake\">\n                  <span>?</span>\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      { showStakingModal ? (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper\">\n            <div className=\"close-btn\" onClick={() => { setShowStakingModal(false); setAmount(''); }}></div>\n            <div className=\"stake-wrapper\">\n              <div className={`icon-${stakeToken.name} token-placeholder`}></div>\n              <div className=\"form-item\">\n                <div className=\"input-label\">Amount\n                  {\n                    stakeType === 'stake' ? (\n                      <span className=\"hint\">Balance: {tokenBalance}</span>\n                    ) : (\n                      <span className=\"hint\">Staked: {myStake.balance}</span>\n                    )\n                  }\n                </div>\n                <div className=\"input-wrapper\">\n                  <Input placeholder=\"0.0\" value={amount} decimals={stakeToken.decimals || 0} onChange={(amount) => setAmount(amount)} />\n                  <div className=\"input-max-btn\" onClick={() => maxInput()}>MAX</div>\n                </div>\n              </div>\n              <div className=\"stake-btn\" onClick={() => onStake()}>{ stakeType === 'stake' ? 'Stake' : 'Unstake'}</div>\n            </div>\n          </div>\n        </div>\n      ) : null }\n    </div>\n  )\n}\n\nexport default StakingDetail","import React from 'react'\nimport './index.css'\n\nconst Token = (props) => {\n  return (\n    <div className=\"coming-soon-placeholder\"></div>\n  )\n}\n\nexport default Token","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { utils } from 'ontology-ts-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport Tooltip from 'rc-tooltip';\nimport TokenInput from '../../components/tokenInput';\nimport Input from '../../components/input'\nimport { DAI_PRICE, SYNTH_PRICE_DECIMALS, ASSET_STATUS, LEVERAGE_TYPE, TRANSACTION_FEE_RATE } from '../../utils/constants'\nimport { TRANSACTION_BASE_URL, TRANSACTION_AFTERFIX } from '../../config'\nimport { useFetchPairs } from '../../hooks/usePair'\nimport './index.css'\n\nconst { StringReader, reverseHex } = utils\n\nconst Synth = () => {\n  const [synthType, setSynthType] = useState('mint')\n  const [mintAsset, setMintAsset] = useState({})\n  const [mintAmount, setMintAmount] = useState('')\n  const [unxNeededForMint, setUnxNeededForMint] = useState('')\n  const [burnAsset, setBurnAsset] = useState({})\n  const [burnAmount, setBurnAmount] = useState('')\n  const [unxGetForBurn, setUnxGetForBurn] = useState('')\n  const [exchangeAsset, setExchangeAsset] = useState({})\n  const [exchangeToAsset, setExchangeToAsset] = useState({})\n  const [exchangeAmount, setExchangeAmount] = useState('')\n  const [exchangeToAssets, setExchangeToAssets] = useState([])\n  const [exchangeToAmount, setExchangeToAmount] = useState('')\n  const [unxToken, setUnxToken] = useState({})\n  const [unxPrice, setUnxPrice] = useState(0)\n  const [showMintModal, setShowMintModal] = useState(false)\n  const [showBurnModal, setShowBurnModal] = useState(false)\n  const [showExchangeModal, setShowExchangeModal] = useState(false)\n  const [availableReward, setAvailableReward] = useState(0)\n  const [marketStat, setMarketStat] = useState({})\n  const [stat, setStat] = useState({})\n  const { account, tokens, pairs, poolStat, synthPoolWeightRatio, SYNTH_ADDRESS } = useMappedState((state) => ({\n    account: state.wallet.account,\n    tokens: state.common.tokens,\n    pairs: state.swap.pairs,\n    poolStat: state.gov.poolStat,\n    synthPoolWeightRatio: state.gov.poolStat.pools.synth.ratio,\n    SYNTH_ADDRESS: state.gov.poolStat.pools.synth.address\n  }))\n  const dispatch = useDispatch()\n  const setModal = useCallback((modalType, modalDetail) => dispatch({ type: 'SET_MODAL', modalType, modalDetail }), [])\n\n  const Alert = useAlert()\n\n  useFetchPairs()\n\n  useEffect(() => {\n    if (tokens.length) {\n      setUnxToken(tokens.find((t) => t.name === 'UNX'))\n    }\n  }, [tokens])\n\n  useEffect(() => {\n    if (tokens.length && pairs.length && (!unxPrice || unxPrice === '0') && marketStat.marketAssetValue) {\n      const unxTk = tokens.find((t) => t.name === 'UNX')\n      if (!marketStat.marketAssetBalances.length) {\n        const daiTk = tokens.find((t) => t.name === 'pDAI')\n        const pair = pairs.find((p) => (p.token1 === unxTk.id && p.token2 === daiTk.id) || (p.token2 === unxTk.id && p.token1 === daiTk.id))\n\n        if (pair) {\n          if (pair.token1 === unxTk.id) {\n            setUnxPrice(new BigNumber(pair.reserve2).div(10 ** daiTk.decimals).div(pair.reserve1).times(10 ** unxTk.decimals).times(DAI_PRICE).times(SYNTH_PRICE_DECIMALS).toString())\n          } else {\n            setUnxPrice(new BigNumber(pair.reserve1).div(10 ** daiTk.decimals).div(pair.reserve2).times(10 ** unxTk.decimals).times(DAI_PRICE).times(SYNTH_PRICE_DECIMALS).toString())\n          }\n        }\n      } else {\n        setUnxPrice(new BigNumber(marketStat.marketAssetValue).div(marketStat.marketTokenBalance).times(10 ** unxTk.decimals).toString())\n      }\n\n      setUnxToken(unxTk)\n    }\n  }, [pairs, tokens, marketStat])\n\n  useEffect(() => {\n    function getAvailableReward() {\n      if (account && unxToken.id && SYNTH_ADDRESS) {\n        try {\n          client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'claim_unx',\n            args: [\n              {\n                type: 'Long',\n                value: unxToken.id\n              },\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n          .then((claimStr) => {\n            const strReader = new StringReader(claimStr)\n            const availableReward = strReader.readUint128()\n\n            setAvailableReward(new BigNumber(availableReward).toString())\n          })\n          .catch((e) => {\n            console.log('get market stat', e)\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getAvailableReward()\n    const interval = setInterval(getAvailableReward, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, unxToken, SYNTH_ADDRESS])\n\n  useEffect(() => {\n    function getStat() {\n      if (tokens.length && SYNTH_ADDRESS) {\n        try {\n          client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'stat',\n            args: []\n          }).then((statStr) => {\n            const strReader = new StringReader(statStr)\n    \n            reverseHex(strReader.read(20)) // govAddress\n            strReader.readUint128() // daiTokenId\n            strReader.readUint128() // unxTokenId\n            strReader.readUint128() // pairId\n\n            const liveAssetCount = strReader.readNextLen()\n            const liveAssets = []\n            for (let i = 0; i < liveAssetCount; i++) {\n              const asset = {}\n              asset.assetId = strReader.readUint128()\n              asset.tokenId = strReader.readUint128()\n\n              const token = tokens.find((t) => t.id === asset.tokenId)\n              asset.tokenName = token.name\n              asset.decimals = token.decimals\n              asset.leverageType = strReader.readNextByte()\n              asset.times = strReader.readUint128()\n              asset.entryPrice = strReader.readUint128()\n              asset.lowLimit = strReader.readUint128()\n              asset.highLimit = strReader.readUint128()\n              asset.status = strReader.readNextByte()\n              asset.frozenBy = reverseHex(strReader.read(20))\n              asset.frozenTime = strReader.readUint64()\n\n              if (asset.tokenName.startsWith('p')) {\n                asset.tokenName = asset.tokenName.replace('p', '')\n              }\n              if (asset.leverageType === LEVERAGE_TYPE.Negative) {\n                asset.tokenName = `i${asset.tokenName}`\n              }\n    \n              asset.id = asset.assetId\n              asset.value = asset.assetId\n              asset.label = `${asset.tokenName}${asset.times !== 1 ? ` (${asset.times}x)` : ''}`\n              liveAssets.push(asset)\n            }\n\n            const frozenAssetCount = strReader.readNextLen()\n            const frozenAssets = []\n            for (let i = 0; i < frozenAssetCount; i++) {\n              const asset = {}\n              asset.assetId = strReader.readUint128()\n              asset.tokenId = strReader.readUint128()\n\n              const token = tokens.find((t) => t.id === asset.tokenId)\n              asset.tokenName = token.name\n              asset.decimals = token.decimals\n              asset.leverageType = strReader.readNextByte()\n              asset.times = strReader.readUint128()\n              asset.entryPrice = strReader.readUint128()\n              asset.lowLimit = strReader.readUint128()\n              asset.highLimit = strReader.readUint128()\n              asset.status = strReader.readNextByte()\n              asset.frozenBy = reverseHex(strReader.read(20))\n              asset.frozenTime = strReader.readUint64()\n\n              if (asset.tokenName.startsWith('p')) {\n                asset.tokenName = asset.tokenName.replace('p', '')\n              }\n              if (asset.leverageType === LEVERAGE_TYPE.Negative) {\n                asset.tokenName = `i${asset.tokenName}`\n              }\n\n              asset.label = `${asset.tokenName}${asset.times !== 1 ? ` (${asset.times}x)` : ''}`\n    \n              frozenAssets.push(asset)\n            }\n\n            const tokenPriceCount = strReader.readNextLen()\n            const tokenPrices = []\n            for (let i = 0; i < tokenPriceCount; i++) {\n              const tokenPrice = {}\n              tokenPrice.tokenId = strReader.readUint128()\n              tokenPrice.price = strReader.readUint128()\n    \n              tokenPrices.push(tokenPrice)\n            }\n\n            for (let liveAsset of liveAssets) {\n              const currentPrice = tokenPrices.find((tp) => tp.tokenId === liveAsset.tokenId).price\n              let tokenPrice = currentPrice\n\n              if (liveAsset.lowLimit && currentPrice <= liveAsset.lowLimit) {\n                tokenPrice = liveAsset.lowLimit\n              } else if (liveAsset.highLimit && currentPrice >= liveAsset.highLimit) {\n                tokenPrice = liveAsset.highLimit\n              }\n\n              liveAsset.tokenPrice = tokenPrice\n\n              if (liveAsset.leverageType === LEVERAGE_TYPE.Positive) {\n                liveAsset.price = new BigNumber(liveAsset.entryPrice).plus(new BigNumber(tokenPrice).times(liveAsset.times)).minus(new BigNumber(liveAsset.entryPrice).times(liveAsset.times)).toString()\n              } else {\n                liveAsset.price = new BigNumber(liveAsset.entryPrice).plus(new BigNumber(liveAsset.entryPrice).times(liveAsset.times)).minus(new BigNumber(tokenPrice).times(liveAsset.times)).toString()\n              }\n\n              if ((liveAsset.lowLimit && liveAsset.tokenPrice <= liveAsset.lowLimit) || (liveAsset.highLimit && liveAsset.tokenPrice >= liveAsset.highLimit)) {\n                liveAsset.unprocessedFrozen = true\n              }\n            }\n\n            for (let frozenAsset of frozenAssets) {\n              frozenAsset.tokenPrice = tokenPrices.find((tp) => tp.tokenId === frozenAsset.tokenId).price\n              if (frozenAsset.status === ASSET_STATUS.HighLimit) {\n                frozenAsset.tokenPrice = frozenAsset.highLimit\n              } else if (frozenAsset.status === ASSET_STATUS.LowLimit) {\n                frozenAsset.tokenPrice = frozenAsset.lowLimit\n              }\n            }\n\n            setStat({\n              liveAssets,\n              frozenAssets,\n              tokenPrices\n            })\n          }).catch((e) => {\n            console.log('get synth stat', e)\n          })\n        } catch (e) {\n          console.log('get synth stat', e)\n        }\n      }\n    }\n\n    getStat()\n    const interval = setInterval(getStat, 5000)\n\n    return () => clearInterval(interval)\n  }, [tokens, SYNTH_ADDRESS])\n\n  useEffect(() => {\n    function getMarketStat() {\n      if (account && unxToken.id && SYNTH_ADDRESS) {\n        try {\n          client.api.smartContract.invokeWasmRead({\n            scriptHash: SYNTH_ADDRESS,\n            operation: 'market_stat',\n            args: [\n              {\n                type: 'Long',\n                value: unxToken.id\n              },\n              {\n                type: 'Address',\n                value: account\n              }\n            ]\n          })\n          .then((statStr) => {\n            const strReader = new StringReader(statStr)\n\n            const marketAssetBalanceCount = strReader.readNextLen()\n            const marketAssetBalances = []\n            let marketAssetValueSum = new BigNumber(0)\n            for (let i = 0; i < marketAssetBalanceCount; i++) {\n              const assetBalance = {}\n              assetBalance.assetId = strReader.readUint128()\n              assetBalance.balance = strReader.readUint128()\n              assetBalance.assetPrice = strReader.readUint128()\n\n              const asset = stat.liveAssets ? [...stat.liveAssets, ...stat.frozenAssets].find((la) => la.assetId === assetBalance.assetId) : null\n\n              if (asset) {\n                marketAssetValueSum = marketAssetValueSum.plus(new BigNumber(assetBalance.assetPrice).times(assetBalance.balance).div(10 ** asset.decimals))\n              }\n    \n              marketAssetBalances.push(assetBalance)\n            }\n\n            const accountAssetBalanceCount = strReader.readNextLen()\n            const accountAssetBalances = []\n            let accountAssetValueSum = new BigNumber(0)\n            for (let i = 0; i < accountAssetBalanceCount; i++) {\n              const assetBalance = {}\n              assetBalance.assetId = strReader.readUint128()\n              assetBalance.balance = strReader.readUint128()\n              assetBalance.assetPrice = strReader.readUint128()\n\n              const asset = stat.liveAssets ? [...stat.liveAssets, ...stat.frozenAssets].find((la) => la.assetId === assetBalance.assetId) : null\n\n              if (asset) {\n                accountAssetValueSum = accountAssetValueSum.plus(new BigNumber(assetBalance.assetPrice).times(assetBalance.balance).div(10 ** asset.decimals))\n              }\n    \n              accountAssetBalances.push(assetBalance)\n            }\n\n            const marketStakeValue = strReader.readUint128()\n            const accountStakeValue = strReader.readUint128()\n            const marketTokenBalance = strReader.readUint128()\n            const accountClaimedValue = strReader.readUint128()\n            const accountWithdrawedStakeValue = strReader.readUint128()\n            const transferable = (marketAssetValueSum.toString() !== '0') ? accountAssetValueSum.div(marketAssetValueSum).times(marketTokenBalance).toString() : '0'\n\n            const parsedMarketStat = {\n              marketAssetBalances,\n              accountAssetBalances,\n              marketAssetValue: marketAssetValueSum.toString(),\n              accountAssetValue: accountAssetValueSum.toString(),\n              transferable,\n              marketStakeValue,\n              accountStakeValue,\n              marketTokenBalance,\n              accountClaimedValue,\n              accountWithdrawedStakeValue\n            }\n\n            // setMarketAssetValue(marketAssetValueSum.toString())\n            // setAccountAssetValue(accountAssetValueSum.toString())\n            setMarketStat(parsedMarketStat)\n          })\n          .catch((e) => {\n            console.log('get market stat', e)\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n\n    getMarketStat()\n    const interval = setInterval(getMarketStat, 5000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [account, unxToken, stat.liveAssets, SYNTH_ADDRESS])\n\n  const handleMintAmountChange = (amount) => {\n    setMintAmount(amount)\n    if (unxPrice && amount) {\n      setUnxNeededForMint(new BigNumber(amount).times(mintAsset.price).div(unxPrice).div(1 - TRANSACTION_FEE_RATE).toFixed(unxToken.decimals))\n    }\n  }\n\n  const handleUnxNeededForMintChange = (amount) => {\n    setUnxNeededForMint(amount)\n    if (unxPrice && amount) {\n      setMintAmount(new BigNumber(amount).times(unxPrice).div(mintAsset.price).times(1 - TRANSACTION_FEE_RATE).toFixed(mintAsset.decimals))\n    }\n  }\n\n  const handleBurnAmountChange = (amount) => {\n    setBurnAmount(amount)\n    if (unxPrice && amount) {\n      setUnxGetForBurn(new BigNumber(amount).times(burnAsset.assetPrice).div(unxPrice).times(1 - TRANSACTION_FEE_RATE).toFixed(unxToken.decimals))\n    }\n  }\n\n  const handleUnxGetForBurnChange = (amount) => {\n    setUnxGetForBurn(amount)\n    if (unxPrice && amount) {\n      setBurnAmount(new BigNumber(amount).times(unxPrice).div(burnAsset.assetPrice).div(1 - TRANSACTION_FEE_RATE).toFixed(burnAsset.decimals))\n    }\n  }\n\n  const handleExchangeAmountChange = (amount) => {\n    setExchangeAmount(amount)\n    if (amount) {\n      setExchangeToAmount(new BigNumber(exchangeAsset.price).div(exchangeToAsset.price).times(amount).times(10 ** exchangeAsset.decimals).div(10 ** exchangeToAsset.decimals).times(1 - TRANSACTION_FEE_RATE).toFixed(exchangeToAsset.decimals))\n    }\n  }\n\n  const handleChengeExchangeToAmount = (amount) => {\n    setExchangeToAmount(amount)\n    if (amount) {\n      setExchangeAmount(new BigNumber(amount).times(10 ** exchangeToAsset.decimals).div(10 ** exchangeAsset.decimals).times(exchangeToAsset.price).div(exchangeAsset.price).div(1 - TRANSACTION_FEE_RATE).toFixed(exchangeAsset.decimals))\n    }\n  }\n\n  async function onMint() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && mintAsset.assetId && SYNTH_ADDRESS) {\n      if (mintAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(unxNeededForMint).times(new BigNumber(10 ** unxToken.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },\n          {\n            type: 'Long',\n            value: mintAsset.assetId\n          }\n        ]\n        const mintResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'mint',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (mintResult.transaction) {\n          setShowMintModal(false)\n          setMintAmount('')\n          setUnxNeededForMint('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${mintResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setShowMintModal(false)\n        setMintAmount('')\n        setUnxNeededForMint('')\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onBurn() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && burnAsset.assetId && SYNTH_ADDRESS) {\n      if (burnAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: burnAsset.assetId\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(burnAmount).times(new BigNumber(10 ** burnAsset.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          }\n        ]\n        const burnResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'burn',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (burnResult.transaction) {\n          setShowBurnModal(false)\n          setBurnAmount('')\n          setUnxGetForBurn('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${burnResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setShowBurnModal(false)\n        setBurnAmount('')\n        setUnxGetForBurn('')\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onBurnAll() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const burnAllResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'burn_all_asset',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (burnAllResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${burnAllResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onExchange() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && exchangeAsset.assetId && SYNTH_ADDRESS) {\n      if (exchangeAmount <= 0) {\n        Alert.error('Amount should be greater than 0')\n        return\n      }\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: exchangeAsset.assetId\n          },\n          {\n            type: 'Long',\n            value: new BigNumber(exchangeAmount).times(new BigNumber(10 ** exchangeAsset.decimals)).integerValue(BigNumber.ROUND_DOWN).toString()\n          },{\n            type: 'Long',\n            value: exchangeToAsset.assetId\n          }\n        ]\n        const exchangeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'asset_swap',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (exchangeResult.transaction) {\n          setShowExchangeModal(false)\n          setExchangeAmount('')\n          setExchangeToAmount('')\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${exchangeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setShowExchangeModal(false)\n        setExchangeAmount('')\n        setExchangeToAmount('')\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  async function onClaim() {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (unxToken.id && SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Long',\n            value: unxToken.id\n          },\n          {\n            type: 'Address',\n            value: account\n          }\n        ]\n        const mintResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'claim_unx',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (mintResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${mintResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  const handleFreezeAsset = async (asset) => {\n    if (!account) {\n      Alert.show('Please Connect Wallet First')\n      return\n    }\n\n    if (SYNTH_ADDRESS) {\n      try {\n        const args = [\n          {\n            type: 'Address',\n            value: account\n          },\n          {\n            type: 'Long',\n            value: asset.assetId\n          }\n        ]\n        const freezeResult = await client.api.smartContract.invokeWasm({\n          scriptHash: SYNTH_ADDRESS,\n          operation: 'freeze_asset',\n          args,\n          gasPrice: 2500,\n          gasLimit: 60000000,\n          requireIdentity: false\n        })\n\n        if (freezeResult.transaction) {\n          setModal('infoModal', {\n            show: true,\n            type: 'success',\n            text: 'Transaction Successful',\n            extraText: 'View Transaction',\n            extraLink: `${TRANSACTION_BASE_URL}${freezeResult.transaction}${TRANSACTION_AFTERFIX}`\n          })\n        }\n      } catch (e) {\n        setModal('infoModal', {\n          show: true,\n          type: 'error',\n          text: 'Transaction Failed',\n          // extraText: `${e}`,\n          extraText: '',\n          extraLink: ''\n        })\n      }\n    }\n  }\n\n  const maxBurnAmount = () => {\n    if (burnAsset) {\n      handleBurnAmountChange(new BigNumber(burnAsset.balance).div(10 ** burnAsset.decimals).toString())\n    }\n  }\n\n  const maxExchangeAmount = () => {\n    if (exchangeAsset) {\n      handleExchangeAmountChange(new BigNumber(exchangeAsset.balance).div(10 ** exchangeAsset.decimals).toString())\n    }\n  }\n\n  const handleChangeExchangeToAsset = (asset) => {\n    setExchangeToAsset(asset)\n    setExchangeAmount('')\n    setExchangeToAmount('')\n  }\n\n  const renderAssetList = () => {\n    if (synthType === 'mint') {\n      if (stat.liveAssets) {\n        return stat.liveAssets.map((la) => {\n          const accountAsset = marketStat.accountAssetBalances ? marketStat.accountAssetBalances.find((ab) => ab.assetId === la.assetId) : null\n\n          if (accountAsset) {\n            la.holdings = new BigNumber(accountAsset.assetPrice).div(SYNTH_PRICE_DECIMALS).times(accountAsset.balance).div(10 ** la.decimals).toString()\n          }\n\n          return (\n            <div className={`synth-assets-list-item ${la.unprocessedFrozen ? 'unprocessed-frozen' : ''}`} key={la.assetId}>\n              <div className=\"synth-assets-list-item-name\">\n                <div className={`synth-assets-list-item-icon icon-${la.tokenName}`}>\n                  {la.label}\n                  {\n                    la.unprocessedFrozen ? (\n                      <Tooltip placement=\"top\" overlay=\"The first one that freezes an asset will get 1‰ of burning fee from all holders\">\n                        <span onClick={() => handleFreezeAsset(la)}></span>\n                      </Tooltip>\n                    ) : null\n                  }\n                </div>\n              </div>\n              <div className=\"synth-assets-list-item-price\">{new BigNumber(la.price).div(SYNTH_PRICE_DECIMALS).toString()}</div>\n              <div className=\"synth-assets-list-item-holding\">{la.holdings || 0}</div>\n              <div className=\"synth-assets-list-item-action\">\n                <div className=\"synth-assets-list-item-action-mint\" onClick={() => { setShowMintModal(true); setMintAsset(la); }}>Mint</div>\n              </div>\n            </div>\n          )\n        })\n      }\n      return null\n    } else {\n      if (marketStat.accountAssetBalances) {\n        const assetList = marketStat.accountAssetBalances.map((ab) => {\n          let asset = stat.liveAssets ? stat.liveAssets.find((la) => la.assetId === ab.assetId) : null\n\n          if (!asset) {\n            asset = stat.frozenAssets ? stat.frozenAssets.find((fa) => fa.assetId === ab.assetId) : null\n\n            if (asset) {\n              asset.isFrozen = true\n            }\n          }\n\n          if (asset) {\n            if (!asset.isFrozen) {\n              if ((asset.lowLimit && asset.tokenPrice <= asset.lowLimit) || (asset.highLimit && asset.tokenPrice >= asset.highLimit)) {\n                asset.unprocessedFrozen = true\n              }\n            }\n            asset.balance = ab.balance\n            asset.assetPrice = ab.assetPrice\n            asset.effectiveLeverage = new BigNumber(asset.assetPrice).times(asset.times).div(new BigNumber(asset.entryPrice).plus((new BigNumber(asset.tokenPrice).minus(asset.entryPrice)).times(asset.times))).toString()\n          }\n          return asset ? (\n            <div className={`synth-assets-list-item ${asset.isFrozen ? 'frozen' : ''} ${asset.unprocessedFrozen ? 'unprocessed-frozen' : ''}`} key={ab.assetId}>\n              <div className=\"synth-assets-list-item-name\">\n                <div className={`synth-assets-list-item-icon icon-${asset.tokenName}`}>\n                  {asset.label}\n                  {\n                    asset.unprocessedFrozen ? (\n                      <Tooltip placement=\"top\" overlay=\"The first one that freezes an asset will get 1‰ of burning fee from all holders\">\n                        <span onClick={() => handleFreezeAsset(asset)}></span>\n                      </Tooltip>\n                    ) : null\n                  }\n                </div>\n              </div>\n              <div className=\"synth-assets-list-item-price\">{new BigNumber(ab.assetPrice).div(SYNTH_PRICE_DECIMALS).toString()}</div>\n              <div className=\"synth-assets-list-item-holding\">{new BigNumber(ab.assetPrice).div(SYNTH_PRICE_DECIMALS).times(ab.balance).div(10 ** asset.decimals).toString()}</div>\n              <div className=\"synth-assets-list-item-leverage\">{asset.effectiveLeverage}</div>\n              <div className=\"synth-assets-list-item-action\">\n                <div className=\"synth-assets-list-item-action-burn\" onClick={() => { setShowBurnModal(true); setBurnAsset(asset); }}>Burn</div>\n                <div className=\"synth-assets-list-item-action-exchange\"\n                  onClick={() => {\n                    setShowExchangeModal(true)\n                    setExchangeAsset(asset)\n                    const toAssets = stat.liveAssets.filter((la) => la.assetId !== asset.assetId)\n                    setExchangeToAssets(toAssets)\n                    setExchangeToAsset(toAssets[0])\n                  }}\n                >Exchange</div>\n              </div>\n            </div>\n          ) : null\n        })\n\n        return assetList\n      }\n    }\n  }\n\n  return (\n    <div className=\"synth-container\">\n      <div className=\"synth-overview-sections\">\n        <div className=\"synth-overview-section\">\n          <div className=\"synth-overview-sub-section\">\n            <p className=\"synth-overview-section-title\">Staking APY</p>\n            <p className=\"synth-overview-detail\">{(marketStat.marketStakeValue && unxToken.id) ? new BigNumber(poolStat.distributionInfo.amount || 0).div(poolStat.distributionInfo.period || 1).times(86400 * 365).times(10 ** unxToken.decimals).times(synthPoolWeightRatio || 0).div(marketStat.marketStakeValue).toFixed(2) : 0}%</p>\n          </div>\n          <div className=\"synth-overview-section-group\">\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Market Balance</p>\n              <p className=\"synth-overview-detail\">{marketStat.marketTokenBalance ? new BigNumber(marketStat.marketTokenBalance).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span></p>\n            </div>\n          </div>\n        </div>\n        <div className=\"synth-overview-section-right\">\n          <div className=\"synth-overview-sub-section\">\n            <p className=\"synth-overview-section-title\">Transferable</p>\n            <p className=\"synth-overview-detail\">{(marketStat.transferable && marketStat.transferable !== '0') ? new BigNumber(marketStat.transferable).plus(availableReward).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span></p>\n          </div>\n          <div className=\"synth-overview-section-group\">\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Staked Available</p>\n              <p className=\"synth-overview-detail\">{(marketStat.transferable && marketStat.transferable !== '0') ? (new BigNumber(marketStat.transferable)).div(10 ** unxToken.decimals).toFixed(unxToken.decimals) : '0'} <span>UNX</span>\n                { (marketStat.transferable && marketStat.transferable !== '0') ? <div className=\"synth-overview-action-btn synth-overview-action-btn-burn\" onClick={() => onBurnAll()}>Burn All</div> : null }\n              </p>\n            </div>\n            <div className=\"synth-overview-sub-section\">\n              <p className=\"synth-overview-section-title\">Rewards Available</p>\n              <p className=\"synth-overview-detail\">{unxToken.id ? new BigNumber(availableReward).div(10 ** unxToken.decimals).toString() : 0} <span>UNX</span>\n                { (availableReward && availableReward !== '0') ? <div className=\"synth-overview-action-btn\" onClick={() => onClaim()}>Claim</div> : null }\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mint-burn-wrapper\">\n        <div className=\"mint-burn-main\">\n          <div className=\"synth-type-switch\">\n            <div className={`synth-type-item ${synthType === 'mint' ? 'selected' : ''}`} onClick={() => setSynthType('mint')}>Mint</div>\n            <div className={`synth-type-item ${synthType === 'burn' ? 'selected' : ''}`} onClick={() => setSynthType('burn')}>Burn</div>\n          </div>\n          <div className=\"synth-assets-panel\">\n            <div className=\"synth-assets-panel-header\">\n              <div className=\"panel-header-item panel-header-item-asset\">Asset</div>\n              <div className=\"panel-header-item\">Price($)</div>\n              <div className=\"panel-header-item\">Holdings($)</div>\n              {\n                synthType === 'burn' ? (\n                  <div className=\"panel-header-item\">Effective Leverage</div>\n                ) : null\n              }\n              <div className=\"panel-header-item panel-header-item-action\"></div>\n            </div>\n            <div className=\"synth-assets-list\">\n              {renderAssetList()}\n            </div>\n          </div>\n        </div>\n        {\n          synthType === 'mint' ? (\n            <div className=\"mint-burn-info\">\n              <div className=\"mint-burn-info-title\">Mint Synthetics by staking UNX</div>\n              <div className=\"mint-burn-info-desc\">UNX stakers earn staking rewards once minted.</div>\n              <div className=\"mint-burn-account-info\">\n                <div className=\"mint-burn-account-info-line\">Minted With <span>{new BigNumber(marketStat.accountStakeValue || 0).div(10 ** unxToken.decimals).toString() || '0'} UNX</span></div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"mint-burn-info\">\n              <div className=\"mint-burn-info-title\">Burn Synthetics to unstake UNX</div>\n              <div className=\"mint-burn-info-desc\">Burn your synthetics to withdraw UNX.</div>\n              <div className=\"mint-burn-account-info\">\n                <div className=\"mint-burn-account-info-line\">Assets($) <span>{new BigNumber(marketStat.accountAssetValue).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n              </div>\n              <div className=\"mint-burn-info-note\"><span>NOTE</span>: when \" Effective Leverage\" is lower than 0.5 or higher than 2.0 times of nominal leverage, your asset will be frozen. <span>You have to burn it within 3 days.</span> Otherwise, asset will be burned and the UNX will be donated to staked pool.</div>\n            </div>\n          )\n        }\n        \n      </div>\n      {\n        showMintModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => setShowMintModal(false)}></div>\n              <div className=\"mint-wrapper\">\n                <div className=\"mint-wrapper-title\">Mint {mintAsset.tokenName}</div>\n                <div className=\"mint-wrapper-info\">Price($)<span>{new BigNumber(mintAsset.price).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount</div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={mintAmount} decimals={mintAsset.decimals || 0} onChange={(amount) => handleMintAmountChange(amount)} />\n                  </div>\n                </div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">You need to pay (UNX)</div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={unxNeededForMint} decimals={unxToken.decimals || 0} onChange={(amount) => handleUnxNeededForMintChange(amount)} />\n                  </div>\n                </div>\n                <div className=\"mint-btn\" onClick={() => onMint()}>Mint</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      {\n        showBurnModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => setShowBurnModal(false)}></div>\n              <div className=\"burn-wrapper\">\n                <div className=\"burn-wrapper-title\">Burn {burnAsset.tokenName}</div>\n                <div className=\"burn-wrapper-info\">Price($)<span>{new BigNumber(burnAsset.assetPrice).div(SYNTH_PRICE_DECIMALS).toString()}</span></div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount\n                    <span className=\"hint\">Balance: {new BigNumber(burnAsset.balance).div(10 ** burnAsset.decimals).toString()}</span>\n                  </div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={burnAmount} decimals={burnAsset.decimals || 0} onChange={(amount) => handleBurnAmountChange(amount)} />\n                    <div className=\"input-max-btn\" onClick={() => maxBurnAmount()}>MAX</div>\n                  </div>\n                </div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">You will get (UNX)</div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={unxGetForBurn} decimals={unxToken.decimals || 0} onChange={(amount) => handleUnxGetForBurnChange(amount)} />\n                  </div>\n                </div>\n                <div className=\"burn-btn\" onClick={() => onBurn()}>Burn</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n      {\n        showExchangeModal ? (\n          <div className=\"modal-overlay\">\n            <div className=\"modal-wrapper\">\n              <div className=\"close-btn\" onClick={() => setShowExchangeModal(false)}></div>\n              <div className=\"exchange-wrapper\">\n                <div className=\"exchange-wrapper-title\">Exchange {exchangeAsset.tokenName}</div>\n                <div className=\"form-item\">\n                  <div className=\"input-label\">Amount</div>\n                  <div className=\"input-wrapper\">\n                    <Input placeholder=\"0.0\" value={exchangeAmount} decimals={exchangeAsset.decimals || 0} onChange={(amount) => handleExchangeAmountChange(amount)} />\n                    <div className=\"input-max-btn\" onClick={() => maxExchangeAmount()}>MAX</div>\n                  </div>\n                </div>\n                <TokenInput\n                  cls=\"asset-select\"\n                  label=\"Exchange to\"\n                  value={exchangeToAmount}\n                  tokens={exchangeToAssets}\n                  showBalance={false}\n                  withMax={false}\n                  onTokenChange={(asset) => handleChangeExchangeToAsset(asset)}\n                  onAmountChange={(amount) => handleChengeExchangeToAmount(amount)}\n                  />\n                <div className=\"exchange-btn\" onClick={() => onExchange()}>Exchange</div>\n              </div>\n            </div>\n          </div>\n        ) : null\n      }\n    </div>\n  )\n}\n\nexport default Synth","import React from 'react'\nimport { useMappedState } from 'redux-react-hook';\nimport { toLocaleFixed } from '../../utils/common'\nimport './index.css'\n\nconst Governance = (props) => {\n  const { poolStat } = useMappedState((state) => ({\n    poolStat: state.gov.poolStat\n  }))\n\n  return (\n    <div className=\"governance-wrapper\">\n      <div className=\"overview-wrapper\">\n        <div className=\"overview-title\">Overview</div>\n        <div className=\"overview-sections\">\n          <div className=\"overview-left\">\n            <p className=\"overview-section-title\">Total UNX</p>\n            <p className=\"overview-detail\">{toLocaleFixed(poolStat.distributionInfo.amount || 0)}</p>\n          </div>\n          <div className=\"overview-right\">\n            <p className=\"overview-section-title\">Daily Distribution</p>\n            <p className=\"overview-detail\">{toLocaleFixed(((poolStat.distributionInfo.amount || 0) / (poolStat.distributionInfo.period || 1) * 86400).toFixed(9))} <span>UNX</span></p>\n          </div>\n        </div>\n      </div>\n      <div className=\"distribution-wrapper\">\n        <div className=\"overview-title\">Distribution</div>\n        <div className=\"distribution-sections\">\n          <div className=\"pie-svg\">\n            <svg className=\"donut\" width=\"240px\" height=\"240px\" viewBox=\"0 0 42 42\" role=\"img\">\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#2BBE7F\" stroke-width=\"4\" stroke-dasharray=\"80, 20\" stroke-dashoffset=\"100\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"120\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FE332F\" stroke-width=\"4\" stroke-dasharray=\"8, 92\" stroke-dashoffset=\"219.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"311.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#F4BA5E\" stroke-width=\"4\" stroke-dasharray=\"8, 92\" stroke-dashoffset=\"411\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"503\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#2B3962\" stroke-width=\"4\" stroke-dasharray=\"3, 97\" stroke-dashoffset=\"602.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"699.5\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#F18DA5\" stroke-width=\"4\" stroke-dasharray=\"1, 99\" stroke-dashoffset=\"799\"></circle>\n              <circle cx=\"21\" cy=\"21\" r=\"15.915494309189533\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"4\" stroke-dasharray=\"0.5, 99.5\" stroke-dashoffset=\"898\"></circle>\n            </svg>\n          </div>\n          <div className=\"pie-desc\">\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#2BBE7F' } }></div>\n              <div className=\"d-item-name\">Community</div>\n              <div className=\"d-item-ratio\">80%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#FE332F' } }></div>\n              <div className=\"d-item-name\">Developer</div>\n              <div className=\"d-item-ratio\">8%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#F4BA5E' } }></div>\n              <div className=\"d-item-name\">Foundation</div>\n              <div className=\"d-item-ratio\">8%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#2B3962' } }></div>\n              <div className=\"d-item-name\">Resoucse Extension</div>\n              <div className=\"d-item-ratio\">3%</div>\n            </div>\n            <div className=\"d-item\">\n              <div className=\"d-item-color\" style={ { background: '#F18DA5' } }></div>\n              <div className=\"d-item-name\">Volunteer</div>\n              <div className=\"d-item-ratio\">1%</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Governance","import { useEffect, useCallback } from 'react'\nimport { client } from '@ont-dev/ontology-dapi'\nimport { utils } from 'ontology-ts-sdk'\nimport { GOVERNANCE_ADDRESS } from '../config'\nimport { handleError } from '../utils/errorHandle'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\n\nconst { StringReader, hexstr2str, reverseHex } = utils\n\nexport const useFetchTokens = () => {\n  const { stopInterval, tokens } = useMappedState((state) => ({\n    stopInterval: state.common.stopInterval,\n    tokens: state.common.tokens\n  }))\n  const dispatch = useDispatch()\n  const setLoadingToken = useCallback((loadingToken) => dispatch({ type: 'SET_LOADING_TOKEN', loadingToken }), [])\n  const setTokens = useCallback((tokens) => dispatch({ type: 'SET_TOKENS', tokens }), [])\n  const setStopInterval = useCallback((stopInterval) => dispatch({ type: 'SET_STOP_INTERVAL', stopInterval }), [])\n  const setPoolStat = useCallback((poolStat) => dispatch({ type: 'SET_POOL_STAT', poolStat }), [])\n\n  useEffect(() => {\n    getGovStat()\n    let interval = !stopInterval && !tokens.length && setInterval(() => getGovStat, 1000)\n    return () => {\n      interval && clearInterval(interval)\n    }\n  }, [tokens, stopInterval])\n\n  function getGovStat() {\n    if (!tokens.length) {\n      try {\n        client.api.smartContract.invokeWasmRead({\n          scriptHash: GOVERNANCE_ADDRESS,\n          operation: 'stat',\n          args: []\n        }).then((statStr) => {\n          const strReader = new StringReader(statStr)\n          const distributionInfo = {}\n          distributionInfo.amount = strReader.readUint128() / (10 ** 9)\n          distributionInfo.period = strReader.readUint128()\n          distributionInfo.startTimeStamp = strReader.readUint128()\n          distributionInfo.settledTimeStamp = strReader.readUint128()\n    \n          const pools = {}\n          const poolCount = strReader.readNextLen()\n          let totalWeight = 0\n          for (let i = 0; i < poolCount; i++) {\n            const pool = {}\n            const nameLength = strReader.readNextLen()\n            pool.name = hexstr2str(strReader.read(nameLength))\n            pool.address = reverseHex(strReader.read(20))\n            pool.weight = strReader.readUint128()\n            totalWeight += pool.weight\n            pools[pool.name] = pool\n          }\n\n          for (let poolName in pools) {\n            pools[poolName].ratio = pools[poolName].weight / totalWeight\n          }\n    \n          const upgrade = strReader.readBoolean()\n          const parsedTokens = []\n          const tokenCount = strReader.readNextLen()\n          for (let i = 0; i < tokenCount; i++) {\n            const token = {}\n            token.id = strReader.readUint128()\n            const nameLength = strReader.readNextLen()\n            token.name = hexstr2str(strReader.read(nameLength))\n            token.address = reverseHex(strReader.read(20))\n            token.ty = strReader.readUint8()\n            token.decimals = strReader.readUint128()\n\n            token.value = token.id\n            token.label = token.name\n\n            parsedTokens.push(token)\n          }\n\n          setLoadingToken(false)\n          setTokens(parsedTokens)\n          setPoolStat({\n            distributionInfo,\n            pools,\n            upgrade\n          })\n        })\n        .catch((e) => {\n          console.log(e)\n          handleError(e, (errorCode) => {\n            console.log(errorCode)\n            if (errorCode === 'CONTRACT_ADDRESS_ERROR') {\n              setStopInterval(true)\n            } else {\n              console.log('get all tokens', e)\n            }\n          })\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  return null\n}","import { client } from '@ont-dev/ontology-dapi'\nimport React, { useCallback } from 'react'\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport Header from './components/header'\nimport Modal from './components/modal'\nimport Transaction from './pages/transaction'\nimport Swap from './pages/swap'\nimport Pool from './pages/pool'\nimport AddLiquidity from './pages/pool/addLiquidity'\nimport RemoveLiquidity from './pages/pool/removeLiquidity'\nimport Staking from './pages/staking'\nimport StakingDetail from './pages/staking/detail'\nimport Token from './pages/token'\nimport Synth from './pages/synth'\nimport Overview from './pages/governance'\nimport { NETWORK_TYPE, READY_TABS } from './config'\nimport { useFetchTokens } from './hooks/useToken'\nimport './App.css'\n\nexport const App = () => {\n  const Alert = useAlert()\n  const { account, loadingToken } = useMappedState((state) => ({\n    loadingToken: state.common.loadingToken,\n    account: state.wallet.account\n  }))\n  const dispatch = useDispatch()\n  const setAccount = useCallback((account) => dispatch({ type: 'SET_ACCOUNT', account }), [])\n\n  useFetchTokens()\n\n  async function onConnectWallet() {\n    try {\n      await client.api.provider.getProvider()\n      const network = await client.api.network.getNetwork()\n      if (network && network.type !== NETWORK_TYPE) {\n        Alert.error(`Please connect to the ${NETWORK_TYPE}-Net`)\n        return\n      }\n      const accountAddress = await client.api.asset.getAccount()\n      setAccount(accountAddress)\n      localStorage.setItem('account', accountAddress)\n    } catch (e) {\n      if (e === 'NO_PROVIDER') {\n        Alert.error('Please install wallet extension first')\n      }\n    }\n  }\n\n  function onSignOut() {\n    setAccount('')\n    localStorage.setItem('account', '')\n  }\n\n  function renderLoading() {\n    if (loadingToken) {\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-wrapper transparent-bg\">\n            <div className=\"modal-icon-loading modal-icon\"></div>\n            <div className=\"modal-text light\">Loading...</div>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n\n  return (\n    <Router>\n      <div className=\"app\">\n        {renderLoading()}\n        {\n          (account === null) && <div className=\"connect-wallet-overlay\">\n            <div className=\"connect-wrapper\">\n              <p className=\"connect-title\">Connect Wallet</p>\n              <div className=\"wallet-item\" onClick={() => onConnectWallet()}>Cyano Wallet</div>\n            </div>\n          </div>\n        }\n        <Modal />\n        <Header onSignOut={() => onSignOut()} onConnectWallet={() => onConnectWallet()} />\n        <div className=\"main-wrapper\">\n          <Switch>\n            {\n              READY_TABS.indexOf('/') >= 0 ?\n              <Route exact path=\"/\">\n                <Staking />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/') >= 0 ?\n              <Route exact path=\"/staking/:id\">\n                <StakingDetail />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/swap\">\n                <Swap />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/pool\">\n                <Pool />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/pool/add\">\n                <AddLiquidity />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/swap') >= 0 ?\n              <Route exact path=\"/pool/remove/:id\">\n                <RemoveLiquidity />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/trade') >= 0 ?\n              <Route exact path=\"/trade\">\n                <Transaction />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/governance') >= 0 ?\n              <Route exact path=\"/governance\">\n                <Overview />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/token') >= 0 ?\n              <Route exact path=\"/token\">\n                <Token />\n              </Route> : null\n            }\n            {\n              READY_TABS.indexOf('/synth') >= 0 ?\n              <Route exact path=\"/synth\">\n                <Synth />\n              </Route> : null\n            }\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  )\n}\n","const initState = {\n  infoModal: {\n    show: false,\n    type: '',\n    text: '',\n    extraText: '',\n    extraLink: ''\n  },\n}\n\nexport const modal = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_MODAL':\n      return { ...state, [action.modalType]: action.modalDetail }\n    default:\n      return { ...state }\n  }\n}","const initState = {\n  account: localStorage.getItem('account'),\n  slippage: localStorage.getItem('slippage') || '0.1'\n}\n\nexport const wallet = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_ACCOUNT':\n      return { ...state, account: action.account }\n    case 'SET_SLIPPAGE':\n      localStorage.setItem('slippage', action.slippage)\n      return { ...state, slippage: action.slippage }\n    default:\n      return { ...state }\n  }\n}","const initState = {\n  loadingToken: true,\n  stopInterval: false,\n  tokens: []\n}\n\nexport const common = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_LOADING_TOKEN':\n      return { ...state, loadingToken: action.loadingToken }\n    case 'SET_STOP_INTERVAL':\n      return { ...state, stopInterval: action.stopInterval }\n    case 'SET_TOKENS':\n      return { ...state, tokens: action.tokens }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  poolStat: {\n    distributionInfo: {},\n    pools: {\n      staking: {},\n      swap: {},\n      dex: {},\n      synth: {}\n    },\n    upgrade: false\n  }\n}\n\nexport const gov = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_POOL_STAT':\n      return { ...state, poolStat: action.poolStat }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  tokens: [],\n  pairs: []\n}\n\nexport const swap = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_SWAP_TOKENS':\n      return { ...state, tokens: action.tokens }\n    case 'SET_PAIRS':\n      return { ...state, pairs: action.pairs }\n    default:\n      return { ...state }\n  }\n}\n","const initState = {\n  tokens: []\n}\n\nexport const staking = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_STAKING_TOKENS':\n      return { ...state, tokens: action.tokens }\n    default:\n      return { ...state }\n  }\n}\n","import { combineReducers } from 'redux'\nimport { modal } from './modal'\nimport { wallet } from './wallet'\nimport { common } from './common'\nimport { gov } from './gov'\nimport { swap } from './swap'\nimport { staking } from './staking'\n\nconst reducers = combineReducers({\n  modal,\n  wallet,\n  common,\n  gov,\n  swap,\n  staking\n})\n\nexport default reducers","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as Ontology from '@ont-dev/ontology-dapi';\nimport { positions, Provider } from \"react-alert\";\nimport { createStore } from 'redux';\nimport { StoreContext } from 'redux-react-hook';\nimport AlertTemplate from \"react-alert-template-basic\";\nimport reducers from './reducers';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'rc-tooltip/assets/bootstrap.css'\nimport './styles/font.css';\nimport './styles/common.css';\nimport './index.css';\n\nconst store = createStore(reducers)\n\nOntology.client.registerClient({});\n\nconst options = {\n  timeout: 5000,\n  position: positions.TOP_CENTER\n};\n\nReactDOM.render(\n  <Provider template={AlertTemplate} {...options}>\n    <StoreContext.Provider value={store}>\n      <App />\n    </StoreContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}